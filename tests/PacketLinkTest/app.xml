<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="PacketLinkTestC" loc="3:src/PacketLinkTestC.nc">
      <configuration/>
    </component>
    <component qname="PacketLinkTestP" loc="3:src/PacketLinkTestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/MainC.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/chips/rf230/sim/RF230Radio.h">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 24 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/morten/workspace/tinyos/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 24 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/morten/workspace/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 24 2010&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/morten/workspace/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/home/morten/workspace/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/home/morten/workspace/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/home/morten/workspace/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/home/morten/workspace/tinyos/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/home/morten/workspace/tinyos/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/morten/workspace/tinyos/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/morten/workspace/tinyos/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/home/morten/workspace/tinyos/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="TossimRadioC" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioC.nc">
      <configuration/>
    </component>
    <component qname="TossimRadioC.TossimRadioP" loc="40(TossimRadioC.TossimRadioP):/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioP.nc">
      <instance number="0">
        <component-ref qname="TossimRadioP"/>
      </instance>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmC.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmC.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RadioAlarmC.RadioAlarmP" loc="37(RadioAlarmC.RadioAlarmP):/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerC.ActiveMessageLayerP" loc="37(ActiveMessageLayerC.ActiveMessageLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/morten/workspace/tinyos/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/morten/workspace/tinyos/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimRadioC.AutoResourceAcquireLayerC" loc="35(TossimRadioC.AutoResourceAcquireLayerC):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.SendResourceC" loc="83(TossimRadioC.SendResourceC):/home/morten/workspace/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/morten/workspace/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.SendResourceC.Queue" loc="42(TossimRadioC.SendResourceC.Queue):/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.SendResourceC.Arbiter" loc="49(TossimRadioC.SendResourceC.Arbiter):/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(Ieee154PacketLayerC.Ieee154PacketLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerC.UniqueLayerP" loc="38(UniqueLayerC.UniqueLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="35(UniqueLayerC.NeighborhoodFlagC):/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC.LowPowerListeningDummyP" loc="35(LowPowerListeningDummyC.LowPowerListeningDummyP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC.PacketLinkLayerP" loc="40(PacketLinkLayerC.PacketLinkLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="44(PacketLinkLayerC.DelayTimerC):/home/morten/workspace/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/morten/workspace/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/morten/workspace/tinyos/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/morten/workspace/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x4066b1c8"/>
            <typename><typedef-ref name="TMilli" ref="0x4066b390"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b24b40"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 24 2010&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x4066b1c8"/>
            <typename><typedef-ref name="TMilli" ref="0x4066b390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x4066b1c8"/>
            <typename><typedef-ref name="TMilli" ref="0x4066b390"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/morten/workspace/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x4066b1c8"/>
            <typename><typedef-ref name="TMilli" ref="0x4066b390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerC.MessageBufferLayerP" loc="39(MessageBufferLayerC.MessageBufferLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="TossimRadioC.TrafficMonitorLayerC" loc="35(TossimRadioC.TrafficMonitorLayerC):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC.RandomCollisionLayerP" loc="38(RandomCollisionLayerC.RandomCollisionLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/morten/workspace/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/morten/workspace/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerC.SoftwareAckLayerP" loc="38(SoftwareAckLayerC.SoftwareAckLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC.MetadataFlagC" loc="35(SoftwareAckLayerC.MetadataFlagC):/home/morten/workspace/tinyos/tos/lib/rfxlink/util/MetadataFlagC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <module/>
    </component>
    <component qname="CsmaLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerC.nc">
      <configuration/>
    </component>
    <component qname="CsmaLayerC.CsmaLayerP" loc="38(CsmaLayerC.CsmaLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <instance number="0">
        <component-ref qname="CsmaLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampingLayerP" loc="38(TimeStampingLayerC.TimeStampingLayerP):/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/morten/workspace/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/morten/workspace/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampFlagC" loc="35(TimeStampingLayerC.TimeStampFlagC):/home/morten/workspace/tinyos/tos/lib/rfxlink/util/MetadataFlagC.nc">
      <instance number="1">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimDriverLayerC" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerC.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimDriverLayerC.Driver" loc="39(TossimDriverLayerC.Driver):/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <instance number="0">
        <component-ref qname="TossimDriverLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimDriverLayerC.RSSIFlagC" loc="35(TossimDriverLayerC.RSSIFlagC):/home/morten/workspace/tinyos/tos/lib/rfxlink/util/MetadataFlagC.nc">
      <instance number="2">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimDriverLayerC.TimeSyncFlagC" loc="35(TossimDriverLayerC.TimeSyncFlagC):/home/morten/workspace/tinyos/tos/lib/rfxlink/util/MetadataFlagC.nc">
      <instance number="3">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CpmModelC" loc="52:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AMPacketInjectorP" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/AMPacketInjectorP.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/AMPacketInjectorP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   December 22 2010&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkTestC.Timer" loc="44(PacketLinkTestC.Timer):/home/morten/workspace/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkTestC.CancelTimer" loc="44(PacketLinkTestC.CancelTimer):/home/morten/workspace/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkTestC.Sender" loc="47(PacketLinkTestC.Sender):/home/morten/workspace/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkTestC.Sender.SenderC" loc="47(PacketLinkTestC.Sender.SenderC):/home/morten/workspace/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkTestC.Sender.SenderC.AMQueueEntryP" loc="43(PacketLinkTestC.Sender.SenderC.AMQueueEntryP):/home/morten/workspace/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/morten/workspace/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PacketLinkTestC.Receiver" loc="43(PacketLinkTestC.Receiver):/home/morten/workspace/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/morten/workspace/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/morten/workspace/tinyos/tos/chips/rf230/sim/RF230RadioC.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/chips/rf230/sim/RF230RadioC.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 24 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimDriverLayerP" loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b24b40" loc="23:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b24b40"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b24d00" loc="23:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4079fc60" loc="41:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4079fe88" loc="42:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4079c0e0" loc="43:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4079c2d0" loc="44:/home/morten/workspace/tinyos/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x409a4aa0" loc="42:/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x407ee808" loc="42:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x407eea30" loc="43:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x407eec58" loc="44:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x407eee48" loc="45:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c36e48" loc="46:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c36e48"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40c32068" loc="46:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40eb5618" loc="45:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4078f870" loc="40:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4078fa88" loc="40:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4078fca0" loc="40:/home/morten/workspace/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/morten/workspace/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40ee86b0" loc="43:/home/morten/workspace/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b00580" loc="46:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b00580"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b1bda8" loc="23:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b1bda8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b3f010" loc="23:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerP" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/morten/workspace/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e9f918" loc="47:/home/morten/workspace/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/morten/workspace/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40e93068" loc="43:/home/morten/workspace/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TossimRadioP" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CsmaLayerP" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/morten/workspace/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e9a588" loc="47:/home/morten/workspace/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/morten/workspace/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c5f620" loc="46:/home/morten/workspace/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c5f620"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/morten/workspace/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmP" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc" abstract="">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/MetadataFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/morten/workspace/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/morten/workspace/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x409a9bd8" loc="83:/home/morten/workspace/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="ResourceRequested" loc="46:/home/morten/workspace/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x409a3090" loc="53:/home/morten/workspace/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/morten/workspace/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x409a3668" loc="61:/home/morten/workspace/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/morten/workspace/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40cb9330" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40cb91d8" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40cbccf0" loc="44:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x406c98b0" loc="113:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x406c9758" loc="113:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x406c7730" loc="138:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x406c75d8" loc="138:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406c9070" loc="104:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406c9dc0" loc="130:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/morten/workspace/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/morten/workspace/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/morten/workspace/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x409c23a8" loc="65:/home/morten/workspace/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/morten/workspace/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x409c3e58" loc="59:/home/morten/workspace/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/morten/workspace/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x408d4a38" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40882de8" loc="35:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40882de8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40881010" loc="35:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40881010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4089c200" loc="63:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40881010"/></type-var>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089c0a8" loc="63:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4089cc98" loc="70:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089cb40" loc="70:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40881698" loc="49:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881540" loc="49:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408997b0" loc="78:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40881010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40899440" loc="78:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40899650" loc="78:/home/morten/workspace/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40881010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x408d53f0" loc="79:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="75:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x408d6398" loc="61:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x408d70f8" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x408d77c0" loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d7668" loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x408d5940" loc="84:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="81:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x408d6988" loc="67:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408d7e38" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d7ce0" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x408d6eb0" loc="73:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x408cbb28" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cb9d0" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x408ca948" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ca7f0" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x408ccda8" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ccc50" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408cc010" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bede8" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408cb560" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cb1f8" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408cb400" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408cc7d8" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cc470" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408cc678" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x408ca370" loc="55:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ca010" loc="55:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408ca210" loc="55:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/morten/workspace/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/morten/workspace/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x406bf090" loc="60:/home/morten/workspace/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/morten/workspace/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/morten/workspace/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x4087f3e0" loc="59:/home/morten/workspace/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/morten/workspace/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4087f068" loc="59:/home/morten/workspace/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4087f280" loc="59:/home/morten/workspace/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4088bb88" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4088bb88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4088ae60" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4088ad08" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4088a840" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4088bb88"/></type-var>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4088a6e8" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4088a220" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4088a0c8" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40889618" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4088bb88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408892a0" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x408894b8" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4088bb88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/morten/workspace/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x406a0888" loc="67:/home/morten/workspace/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/morten/workspace/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x406a0da0" loc="75:/home/morten/workspace/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/morten/workspace/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40a7cf20" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a7cdc8" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40a7a398" loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a7c4c8" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a7c370" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a7c9f0" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a7c898" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x408d0010" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x408d0618" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x408cfc48" loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cfaf0" loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x408d0d60" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d0c08" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x408cf4a0" loc="60:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cf348" loc="60:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x408f2330" loc="59:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x408e5b00" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x408e59a8" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408e5f28" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x408e54a8" loc="44:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x408f27d8" loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="61:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x40b4e280" loc="38:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x40b4e750" loc="44:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40b4fde8" loc="32:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40b4ec10" loc="50:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40b4f318" loc="21:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40af7d10"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40af6010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40b4f908" loc="27:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40af7d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40af6010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40b4f7b0" loc="27:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40af7d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40af6010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/morten/workspace/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40885960" loc="53:/home/morten/workspace/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40885960"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40885e40" loc="61:/home/morten/workspace/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/morten/workspace/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40865710" loc="65:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408655b8" loc="65:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4087d168" loc="78:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087d010" loc="78:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4087a208" loc="126:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087be88" loc="126:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4087a088" loc="126:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4087b8a0" loc="106:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4087ddc8" loc="94:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087da88" loc="94:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4087dc68" loc="94:/home/morten/workspace/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40c508f0" loc="44:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40c79318" loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40c79940" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40c797e8" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40c79d90" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40c50e10" loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40c772e0" loc="74:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x406cbb70" loc="80:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406cb610" loc="80:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406cb828" loc="80:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406cba08" loc="80:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x406daa88" loc="135:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406da728" loc="135:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406da908" loc="135:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406da1c8" loc="123:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406c5b80" loc="96:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c5a28" loc="96:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406d9898" loc="110:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d9540" loc="110:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x406d9738" loc="110:/home/morten/workspace/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="4:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x408b7010" loc="9:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x408a9c98"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x408a9ec0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408aabc8" loc="9:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408aae20" loc="9:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x408a9c98"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x408a9ec0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408b7820" loc="10:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x408a9c98"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x408a9ec0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b7468" loc="10:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408b76c0" loc="10:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x408a9c98"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x408a9ec0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40a81f20" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a81dc8" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40a7ebe0" loc="71:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a7ea88" loc="71:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40a7e5e8" loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a7e490" loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40a7d2a8" loc="80:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a7d150" loc="80:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40a818c0" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a81768" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/morten/workspace/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40cd1ce0" loc="52:/home/morten/workspace/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40cd1838" loc="46:/home/morten/workspace/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/morten/workspace/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x408ed8f8" loc="70:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ed7a0" loc="70:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x408f4ef8" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f4da0" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408eec20" loc="59:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x408ee760" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ee400" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408ee600" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x408f4800" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f46a8" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x408ed2e0" loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ed188" loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x40b33cb8" loc="45:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40afa970"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40afab98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b2f2b8" loc="53:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b19c80"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b19ea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b307d0" loc="49:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40af5560"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40af5788"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b30dd8" loc="50:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40af5560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40af5788"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b30c80" loc="50:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40af5560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40af5788"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b2f8c0" loc="54:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b19c80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b19ea8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b2f768" loc="54:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b19c80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b19ea8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40b30318" loc="46:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40afa970"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40afab98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b301c0" loc="46:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40afa970"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40afab98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x408bb478" loc="41:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bb320" loc="41:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ec5538" loc="75:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ec51f8" loc="75:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ec53d8" loc="75:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40ec1190" loc="125:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ec2d78" loc="125:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ec1010" loc="125:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40ec2818" loc="112:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40ec4188" loc="89:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ec4030" loc="89:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ec4e20" loc="100:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ec4ac8" loc="100:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40ec4cc0" loc="100:/home/morten/workspace/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x408733a8" loc="65:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40873010" loc="65:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40873248" loc="65:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40873e68" loc="71:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40873d10" loc="71:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40874a58" loc="57:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x408743d8" loc="52:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40874280" loc="52:/home/morten/workspace/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/morten/workspace/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40ce52e0" loc="53:/home/morten/workspace/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ce52e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40ce5930" loc="64:/home/morten/workspace/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/morten/workspace/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ce52e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40ce57d8" loc="64:/home/morten/workspace/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ce52e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40958420" loc="50:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40958c90" loc="60:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40958890" loc="55:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4095bf08" loc="45:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4095bba0" loc="45:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4095bda8" loc="45:/home/morten/workspace/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40a62320" loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
              <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a621a8" loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40a65b28" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a659d0" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x408bfd68" loc="86:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x408bf8d0" loc="80:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408bf558" loc="80:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408bf770" loc="80:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x408c2850" loc="55:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c26f8" loc="55:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x408c2f18" loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c2dc0" loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x408c1868" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c14f0" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408c1708" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x408c5900" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x408c2190" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c5e48" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408c2030" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x408bf010" loc="75:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c1e28" loc="75:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x408dc058" loc="131:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408deed0" loc="131:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x408de220" loc="120:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408de0c8" loc="120:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x408e41c8" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c9e40" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x408e4068" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x408e3580" loc="75:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e3428" loc="75:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x408da4a8" loc="156:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408da148" loc="156:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408da348" loc="156:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x408e4ed0" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e4d78" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x408dea18" loc="125:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408de6d8" loc="125:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x408de8b8" loc="125:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x408e2510" loc="88:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408e2198" loc="88:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408e23b0" loc="88:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x408dbc98" loc="151:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408dbb40" loc="151:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x408e4830" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e46d8" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x408e04e8" loc="99:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e0390" loc="99:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x408e2e18" loc="94:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408e2aa0" loc="94:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408e2cb8" loc="94:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x408d9c00" loc="178:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x408a9048"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x408daad0" loc="162:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408da978" loc="162:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x408d9760" loc="173:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40890d80"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x408db670" loc="146:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408db310" loc="146:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408db510" loc="146:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x408e3c30" loc="81:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e3ad8" loc="81:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x408dfbf0" loc="115:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408df8a0" loc="115:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x408dfa90" loc="115:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x408dc840" loc="136:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408dc4f0" loc="136:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x408dc6e0" loc="136:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408f5200" loc="184:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f50a8" loc="184:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x408e0cf0" loc="105:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e09c8" loc="105:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408e0b90" loc="105:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x408c9988" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c9830" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x408d9200" loc="168:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d90a8" loc="168:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x408dce70" loc="141:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408dcd18" loc="141:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x408df3b8" loc="110:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408df260" loc="110:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b2c7d0" loc="56:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b2c7d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b2c938" loc="56:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40b27c78" loc="109:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40b29950" loc="78:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40b27630" loc="103:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40b272e0" loc="103:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
          </variable>
          <variable name="dt" ref="0x40b274d0" loc="103:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40b29dc0" loc="88:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40b26138" loc="116:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b29010" loc="66:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40b2ce10" loc="66:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2c938"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b294f0" loc="73:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/morten/workspace/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/morten/workspace/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x407527f0" loc="62:/home/morten/workspace/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/morten/workspace/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40b32780" loc="41:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b32780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40b536a8" loc="74:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40b54650" loc="58:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b32c78" loc="48:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b32780"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b54a58" loc="62:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b53b08" loc="80:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b54210" loc="54:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b32780"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b540b8" loc="54:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b32780"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b54e60" loc="65:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b53280" loc="68:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/morten/workspace/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x406d7630" loc="78:/home/morten/workspace/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/morten/workspace/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
              <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d70e8" loc="78:/home/morten/workspace/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x406d72c8" loc="78:/home/morten/workspace/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406d74a8" loc="78:/home/morten/workspace/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x409478c0" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
              <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40947748" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x409bce20" loc="79:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a4730"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409bccc8" loc="79:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a4730"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x409bfa98" loc="53:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x409bc188" loc="62:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a4730"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409bc030" loc="62:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a4730"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x409bc738" loc="70:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/morten/workspace/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x409a4730"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x4083f9e8" loc="44:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x4083f890" loc="44:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x4083cb50" loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x4083c618" loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x4083c7f0" loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4083c9e8" loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x4083b2b8" loc="49:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x4083cee0" loc="48:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x4083f4b8" loc="43:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4083c210" loc="46:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x4083fe18" loc="45:/home/morten/workspace/tinyos/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b2a610" loc="57:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b2a610"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b2a778" loc="57:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2a778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b2ac60" loc="64:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b2a778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40b226a8" loc="76:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40b221a8" loc="71:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b22ad0" loc="82:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/morten/workspace/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x408bc010" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bdc80" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x408bde80" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x408bc488" loc="58:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x408bd168" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bd010" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408bd7b0" loc="47:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bd658" loc="47:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40770bb0" loc="44:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4076f010" loc="45:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40770420" loc="42:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4076f7e0" loc="47:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407707e0" loc="43:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4076f3e8" loc="46:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40774ca0" loc="40:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40770070" loc="41:/home/morten/workspace/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40c76350" loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c761f8" loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40c75010" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c76aa8" loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c76950" loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4087e9e0" loc="59:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087e888" loc="59:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x408764f8" loc="71:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408763a0" loc="71:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40875010" loc="85:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40876e28" loc="85:/home/morten/workspace/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x408d3488" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d3330" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x408c3d78" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c3c20" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x408d3980" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x408d1058" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d3ee0" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x408b9210" loc="120:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4089e8c0" loc="97:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4089e2c0" loc="88:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4089ed70" loc="102:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x408b9908" loc="128:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/morten/workspace/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x408a23b0" loc="67:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x408a9048"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x408a3e18" loc="67:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x408a9048"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x408a2068" loc="67:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408a2248" loc="67:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408a07f0" loc="122:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a0490" loc="122:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408a0670" loc="122:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408a1ee0" loc="110:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408a2d40" loc="83:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a2be8" loc="83:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408a18e8" loc="97:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a1590" loc="97:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408a1788" loc="97:/home/morten/workspace/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x40d83c80" loc="48:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40d83118" loc="48:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x40d83340" loc="49:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40d83518" loc="50:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x40d83750" loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x40d83908" loc="52:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x40d83b00" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x40d80478" loc="60:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d80320" loc="60:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x40d825c0" loc="56:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x40d829f0" loc="57:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x40d821c0" loc="55:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40d82068" loc="55:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x40d82f20" loc="59:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d82dc8" loc="59:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x40d80a00" loc="61:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d808a8" loc="61:/home/morten/workspace/tinyos/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40cf96f8" loc="55:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cf95a0" loc="55:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40cfa350" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cfa1f8" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40cfab20" loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cfa7e0" loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40cfa9c0" loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40cf9168" loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cf9010" loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x406dd380" loc="65:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406dd228" loc="65:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x406df718" loc="46:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406df380" loc="46:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x406df5b8" loc="46:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x406dea20" loc="59:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406de8c8" loc="59:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x406de3a8" loc="53:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406de010" loc="53:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x406de248" loc="53:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x406ddca0" loc="71:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ddb48" loc="71:/home/morten/workspace/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40948838" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409486e0" loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x409448b8" loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40944760" loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409441c8" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40948e50" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40944068" loc="54:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40879ca8" loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408797c8" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40879670" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4088b1c8" loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b3bd70" loc="55:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b3bd70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40b35560" loc="98:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40b36cb8" loc="87:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b382b8" loc="61:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b3bd70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40b35af0" loc="104:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40b35998" loc="104:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40b34010" loc="110:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b36090" loc="75:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b38c60" loc="70:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b35138" loc="93:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b38830" loc="67:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b3bd70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b386d8" loc="67:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b3bd70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b36498" loc="78:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b36890" loc="81:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/morten/workspace/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x406e39e8" loc="177:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406e3890" loc="177:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x406d2168" loc="88:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406d2010" loc="88:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406d5038" loc="68:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406d56d0" loc="78:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406d5578" loc="78:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406d1bd8" loc="121:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406d1870" loc="121:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406d1a78" loc="121:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406d2d50" loc="103:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406d29e8" loc="103:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406d2bf0" loc="103:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x406d0310" loc="147:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406d01b8" loc="147:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x406d0e48" loc="162:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406d0b18" loc="162:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x406d0ce8" loc="162:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406e57c0" loc="136:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406e5668" loc="136:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x406e2688" loc="187:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406e2328" loc="187:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
                <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406e2528" loc="187:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x406e2f00" loc="195:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/morten/workspace/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/morten/workspace/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/morten/workspace/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x409a59a0" loc="90:/home/morten/workspace/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/morten/workspace/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x409a5ea0" loc="98:/home/morten/workspace/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/morten/workspace/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/morten/workspace/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/morten/workspace/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40409010" loc="57:/home/morten/workspace/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/morten/workspace/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40409918" loc="72:/home/morten/workspace/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/morten/workspace/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40409450" loc="65:/home/morten/workspace/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/morten/workspace/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40c6f010" loc="59:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40c6f5e0" loc="72:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40c6fc20" loc="79:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40c72b58" loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406bfbd8" loc="53:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406bfbd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x406ba520" loc="136:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406bd1c8" loc="83:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x406bb358" loc="114:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x406bb010" loc="114:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x406bb1f8" loc="114:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x406bdb18" loc="98:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x406bae98" loc="151:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x406ba968" loc="144:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x406bd658" loc="92:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x406be270" loc="64:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406be118" loc="64:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x406bbd40" loc="129:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x406bb9f8" loc="129:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x406bbbe0" loc="129:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x406be908" loc="73:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406be7b0" loc="73:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406bedd8" loc="78:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/morten/workspace/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <union loc="212:/usr/include/bits/pthreadtypes.h" ref="0x4030ac08" defined="" packed="" size="I:4" alignment="I:1">
      <field name="__size" ref="0x4030ad18" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4030ad78" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union loc="132:/usr/include/bits/pthreadtypes.h" ref="0x403024e0" defined="" packed="" size="I:4" alignment="I:1">
      <field name="__size" ref="0x403025f0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40302650" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="__pthread_mutex_s" loc="78:/usr/include/bits/pthreadtypes.h" ref="0x402fce28" defined="" packed="" size="I:24" alignment="I:1">
      <field name="__lock" ref="0x40301960" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x403019c0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x40301a20" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x40301a80" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x40301ae0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x40301b40" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__list" ref="0x40301ba0" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:1"><struct-ref name="__pthread_internal_slist" ref="0x402fc708"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0x402fcbb8"/></typename>
        </type-tag>
      </field>
    </struct>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40031010" defined="" packed="" size="I:8" alignment="I:1">
      <field name="lo" ref="0x40031270" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x400312d0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <nx_struct name="network_header_t" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayer.h" ref="0x40669118" defined="" packed="" size="I:1" alignment="I:1">
      <field name="network" ref="0x40669448" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x402a7b58"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="90:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40afb1d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="206:/usr/include/bits/pthreadtypes.h" ref="0x4030a528" defined="" packed="" size="I:20" alignment="I:1">
      <field name="__size" ref="0x4030a638" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4030a698" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="76:/home/morten/workspace/tinyos/tos/lib/tossim/tos.h" ref="0x404a6060" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="ieee154_fcf_mask_enums" loc="75:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.h" ref="0x406684a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x405df2c0" defined="" packed="" size="I:16" alignment="I:1">
      <field name="it_interval" ref="0x405df6f8" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><struct-ref name="timespec" ref="0x402f8160"/></type-tag>
      </field>
      <field name="it_value" ref="0x405df758" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:1"><struct-ref name="timespec" ref="0x402f8160"/></type-tag>
      </field>
    </struct>
    <struct name="tossim_metadata" loc="36:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioMsg.h" ref="0x406778a0" defined="" packed="" size="I:10" alignment="I:1">
      <field name="strength" ref="0x40676130" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x402a15a0"/></typename>
        </type-int>
      </field>
      <field name="link" ref="0x40676190" bit-offset="I:8" size="I:4">
        <type-tag size="I:4" alignment="I:1"><struct-ref name="link_metadata_t" ref="0x4067a8e8"/>
          <typename><typedef-ref name="link_metadata_t" ref="0x4067ae78"/></typename>
        </type-tag>
      </field>
      <field name="timestamp" ref="0x406761f0" bit-offset="I:40" size="I:4">
        <type-tag size="I:4" alignment="I:1"><struct-ref name="timestamp_metadata_t" ref="0x4067b878"/>
          <typename><typedef-ref name="timestamp_metadata_t" ref="0x4067a0c8"/></typename>
        </type-tag>
      </field>
      <field name="flags" ref="0x40676250" bit-offset="I:72" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref name="flags_metadata_t" ref="0x4067b258"/>
          <typename><typedef-ref name="flags_metadata_t" ref="0x4067b608"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="126:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40756010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="106:/usr/include/bits/pthreadtypes.h" ref="0x402ff738" defined="" packed="" size="I:4" alignment="I:1">
      <field name="__size" ref="0x402ff848" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x402ff8a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="gain_entry" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/sim_gain.h" ref="0x40598930" defined="" packed="" size="I:16" alignment="I:1">
      <field name="mote" ref="0x40598df8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x40598e58" bit-offset="I:32" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x40598eb8" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:1"><struct-ref name="gain_entry" ref="0x40598930"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="94:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h" ref="0x40676d10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_gain_noise" loc="3:/home/morten/workspace/tinyos/tos/lib/tossim/sim_gain.c" ref="0x405a1db8" defined="" packed="" size="I:16" alignment="I:1">
      <field name="mean" ref="0x405a0158" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x405a01b8" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x4002cc28" packed="" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="69:/usr/include/bits/time.h" ref="0x402f86a8" defined="" packed="" size="I:8" alignment="I:1">
      <field name="tv_sec" ref="0x402f8a70" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0x402e8010"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x402f8ad0" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__suseconds_t" ref="0x402e84e8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="ieee154_fcf_type_enums" loc="84:/home/morten/workspace/tinyos/tos/types/Ieee154.h" ref="0x408a4698" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="117:/usr/include/bits/pthreadtypes.h" ref="0x40304598" defined="" packed="" size="I:44" alignment="I:1">
      <field name="__lock" ref="0x403046a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x40304708" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x40304768" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x403047c8" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x40304828" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x40304888" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x403048e8" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x40304948" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="link_metadata_t" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayer.h" ref="0x4067a8e8" defined="" packed="" size="I:4" alignment="I:1">
      <field name="maxRetries" ref="0x4067ad60" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
      <field name="retryDelay" ref="0x4067adc0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0x4002eb18" defined="" packed="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="49:/home/morten/workspace/tinyos/tos/types/Ieee154.h" ref="0x408a7010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="number"  loc="NONE" ref="0x4002acf0" packed="" size="V:" alignment="V:">
    </attribute>
    <nx_struct name="test_msg" loc="11:src/PacketLinkTest.h" ref="0x4048fef0" defined="" packed="" size="I:28" alignment="I:1">
      <field name="data" ref="0x4069f2b8" bit-offset="I:0" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct ref="0x40025f48" size="V:" alignment="V:">
    </struct>
    <struct name="ieee154_frame_addr" loc="54:/home/morten/workspace/tinyos/tos/types/Ieee154.h" ref="0x408a76c0" defined="" packed="" size="I:20" alignment="I:1">
      <field name="ieee_src" ref="0x408a7c98" bit-offset="I:0" size="I:9">
        <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x408a9c98"/>
          <typename><typedef-ref name="ieee154_addr_t" ref="0x408a9ec0"/></typename>
        </type-tag>
      </field>
      <field name="ieee_dst" ref="0x408a7cf8" bit-offset="I:72" size="I:9">
        <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x408a9c98"/>
          <typename><typedef-ref name="ieee154_addr_t" ref="0x408a9ec0"/></typename>
        </type-tag>
      </field>
      <field name="ieee_dstpan" ref="0x408a7d58" bit-offset="I:144" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="ieee154_panid_t" ref="0x40890d80"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="node" loc="62:/home/morten/workspace/tinyos/tos/lib/tossim/heap.c" ref="0x4050dce0" defined="" packed="" size="I:12" alignment="I:1">
      <field name="data" ref="0x4050b050" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x4050b0b0" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="44:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h" ref="0x40754d28" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="43:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40747c88" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407552b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="iee154_fcf_addr_mode_enums" loc="91:/home/morten/workspace/tinyos/tos/types/Ieee154.h" ref="0x408a3288" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_packet" loc="131:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h" ref="0x40672938" defined="" packed="" size="I:7" alignment="I:1">
      <field name="header" ref="0x40672dc0" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x40673c98"/>
          <typename><typedef-ref name="serial_header_t" ref="0x40672730"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x40672e20" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct loc="106:/usr/include/stdlib.h" ref="0x402d4508" defined="" packed="" size="I:8" alignment="I:1">
      <field name="quot" ref="0x402d4618" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x402d4678" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="104:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407583f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="integer"  loc="NONE" ref="0x4002ab88" packed="" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/home/morten/workspace/tinyos/tos/lib/tossim/tos.h" ref="0x404c7a68" defined="" packed="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/home/morten/workspace/tinyos/tos/lib/tossim/platform_message.h" ref="0x40683010" defined="" packed="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x40683350" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x406772d0"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x40677688"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="144:/usr/include/bits/types.h" ref="0x402e4268" defined="" packed="" size="I:8" alignment="I:1">
      <field name="__val" ref="0x402e4378" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="120:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407579e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="40:/home/morten/workspace/tinyos/tos/lib/timer/Timer.h" ref="0x4066b1c8" defined="" packed="" size="I:4" alignment="I:1">
      <field name="notUsed" ref="0x4066b2d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="combine"  loc="NONE" ref="0x4002c890" packed="" size="V:" alignment="V:">
      <field name="fn" ref="0x4002c9a0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="418:/usr/include/stdlib.h" ref="0x40319460" defined="" packed="" size="I:24" alignment="I:1">
      <field name="__x" ref="0x40319e18" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x40319e78" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x40319ed8" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x40319f38" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x40319f98" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <union name="message_metadata" loc="59:/home/morten/workspace/tinyos/tos/lib/tossim/platform_message.h" ref="0x40683630" defined="" packed="" size="I:10" alignment="I:1">
      <field name="tossim" ref="0x40683998" bit-offset="I:0" size="I:10">
        <type-tag size="I:10" alignment="I:1"><struct-ref name="tossim_metadata" ref="0x406778a0"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x40676308"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="__locale_struct" loc="28:/usr/include/xlocale.h" ref="0x402b1ef8" defined="" packed="" size="I:116" alignment="I:1">
      <field name="__locales" ref="0x402b6ac8" bit-offset="I:0" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="V:" alignment="V:"><struct-ref name="locale_data" ref="0x402b60d0"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x402b6b28" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x402b6b88" bit-offset="I:448" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x402b6be8" bit-offset="I:480" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x402b6c48" bit-offset="I:512" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <struct name="ieee_eui64" loc="42:/home/morten/workspace/tinyos/tos/types/IeeeEui64.h" ref="0x408905d0" defined="" packed="" size="I:8" alignment="I:1">
      <field name="data" ref="0x408909a8" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="123:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40af78f0" defined="" packed="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x40af7a00" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x40af7a60" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x40af7ac0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x40af7b20" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40af7b80" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h" ref="0x40673c98" defined="" packed="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x406724f8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x4066df18"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x40672558" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x4066df18"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x406725b8" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x40672618" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x4066dc80"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x40672678" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="timestamp_metadata_t" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeStampingLayer.h" ref="0x4067b878" defined="" packed="" size="I:4" alignment="I:1">
      <field name="timestamp" ref="0x4067a010" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="196:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b16670" defined="" packed="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x40b16780" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x40b167e0" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x40b16840" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x40b168a0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <union name="message_header" loc="50:/home/morten/workspace/tinyos/tos/lib/tossim/platform_message.h" ref="0x406847e8" defined="" packed="" size="I:12" alignment="I:1">
      <field name="tossim" ref="0x40684ca0" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x406790e8"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x406770c8"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x40684d00" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x40673c98"/>
          <typename><typedef-ref name="serial_header_t" ref="0x40672730"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="26:/home/morten/workspace/tinyos/tos/types/AM.h" ref="0x4066cad0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x402f8160" defined="" packed="" size="I:8" alignment="I:1">
      <field name="tv_sec" ref="0x402f84c0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0x402e8010"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x402f8520" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40031ca0" defined="" packed="" size="I:4" alignment="I:1">
      <field name="n" ref="0x40031e50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="191:/usr/include/bits/pthreadtypes.h" ref="0x40306ba0" defined="" packed="" size="I:8" alignment="I:1">
      <field name="__size" ref="0x40306cb0" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40306d10" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="14:/home/morten/workspace/tinyos/tos/types/AM.h" ref="0x4066c760" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="41:/home/morten/workspace/tinyos/tos/lib/timer/Timer.h" ref="0x4066b608" defined="" packed="" size="I:4" alignment="I:1">
      <field name="notUsed" ref="0x4066b718" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="41:/home/morten/workspace/tinyos/tos/types/Ieee154.h" ref="0x408a9988" defined="" packed="" size="I:8" alignment="I:1">
      <field name="saddr" ref="0x408a9a98" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="ieee154_saddr_t" ref="0x408a9048"/></typename>
        </type-int>
      </field>
      <field name="laddr" ref="0x408a9af8" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x408905d0"/>
          <typename><typedef-ref name="ieee154_laddr_t" ref="0x408a9308"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40031660" defined="" packed="" size="I:8" alignment="I:1">
      <field name="lo" ref="0x400318c0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x40031920" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <union loc="250:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b0f2c0" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b0f3d0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b0f430" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b10e88"/></type-tag>
      </field>
    </union>
    <enum loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c" ref="0x404ce828" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timezone" loc="57:/usr/include/sys/time.h" ref="0x4053dbb0" defined="" packed="" size="I:8" alignment="I:1">
      <field name="tz_minuteswest" ref="0x4053df08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x4053df68" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="52:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b013f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="67:/usr/include/sys/select.h" ref="0x402f7658" defined="" packed="" size="I:128" alignment="I:1">
      <field name="__fds_bits" ref="0x402f7768" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="long" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__fd_mask" ref="0x402f8f28"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="42:/home/morten/workspace/tinyos/tos/lib/timer/Timer.h" ref="0x4066ba48" defined="" packed="" size="I:4" alignment="I:1">
      <field name="notUsed" ref="0x4066bb58" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_event" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/sim_event_queue.h" ref="0x404ae7b0" defined="" packed="" size="I:26" alignment="I:1">
      <field name="time" ref="0x404baa58" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x404baab8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="force" ref="0x404bab18" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x404bab78" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x404babd8" bit-offset="I:112" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x404bac38" bit-offset="I:144" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x404baca8" bit-offset="I:176" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x4044c770" size="V:" alignment="V:">
    </struct>
    <nx_union name="timestamp_t" loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h" ref="0x40d65160" defined="" packed="" size="I:4" alignment="I:1">
      <field name="relative" ref="0x40d65650" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
          <typename><typedef-ref name="timesync_relative_t" ref="0x40d68918"/></typename>
        </type-int>
      </field>
      <field name="absolute" ref="0x40d656b0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="timesync_absolute_t" ref="0x40d68c48"/></typename>
        </type-int>
      </field>
    </nx_union>
    <nx_struct name="tossim_footer" loc="32:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioMsg.h" ref="0x406772d0" defined="" packed="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x406775d0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="206:/usr/include/libio.h" ref="0x40456398" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/morten/workspace/tinyos/tos/lib/tossim/sim_packet.h" ref="0x406623f8" defined="" packed="" size="I:0" alignment="I:1">
    </struct>
    <union loc="53:/usr/include/bits/pthreadtypes.h" ref="0x402fc258" defined="" packed="" size="I:36" alignment="I:1">
      <field name="__size" ref="0x402fc368" bit-offset="I:0" size="I:36">
        <type-array elements="I:36" size="I:36" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x402fc3c8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="51:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40746768" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="288:/usr/include/inttypes.h" ref="0x401beee0" defined="" packed="" size="I:16" alignment="I:1">
      <field name="quot" ref="0x401c4010" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x401c4070" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="132:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40756680" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__pthread_internal_slist" loc="67:/usr/include/bits/pthreadtypes.h" ref="0x402fc708" defined="" packed="" size="I:4" alignment="I:1">
      <field name="__next" ref="0x402fcb00" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:1"><struct-ref name="__pthread_internal_slist" ref="0x402fc708"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="312:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b2d8e0" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b2d9f0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b2da50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b2d3f0"/></type-tag>
      </field>
    </union>
    <struct loc="98:/usr/include/stdlib.h" ref="0x402cff10" defined="" packed="" size="I:8" alignment="I:1">
      <field name="quot" ref="0x402d4050" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x402d40b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="185:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b17398" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_metadata" loc="136:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h" ref="0x40684228" defined="" packed="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x40684520" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="93:/usr/include/sys/time.h" ref="0x405492b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="170:/usr/include/bits/pthreadtypes.h" ref="0x40307b28" defined="" packed="" size="I:32" alignment="I:1">
      <field name="__lock" ref="0x40307c38" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x40307c98" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x40307cf8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x40307d58" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x40307db8" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x40307e18" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__flags" ref="0x40307e78" bit-offset="I:192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__shared" ref="0x40307ed8" bit-offset="I:200" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad1" ref="0x40307f38" bit-offset="I:208" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad2" ref="0x40307f98" bit-offset="I:216" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__writer" ref="0x40306010" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atmostonce" loc="97:/home/morten/workspace/tinyos/tos/lib/tossim/tos.h" ref="0x404c7668" defined="" packed="" size="I:0" alignment="I:1">
    </attribute>
    <union loc="98:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40afa970" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40afaa80" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40afaae0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40afa500"/></type-tag>
      </field>
    </union>
    <enum loc="82:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40afc7a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="150:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b19c80" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b19d90" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b19df0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b19738"/></type-tag>
      </field>
    </union>
    <enum loc="25:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h" ref="0x406c2628" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h" ref="0x405444b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="211:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b144e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x4002c448" packed="" size="V:" alignment="V:">
    </attribute>
    <struct name="_IO_FILE" loc="271:/usr/include/libio.h" ref="0x404515a8" defined="" packed="" size="I:148" alignment="I:1">
      <field name="_flags" ref="0x40452640" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x404526a0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x40452700" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x40452760" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x404527c0" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x40452820" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x40452880" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x404528e0" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x40452940" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x404529a0" bit-offset="I:288" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x40452a00" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x40452a60" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x40452ac0" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:1"><struct-ref name="_IO_marker" ref="0x4044cbf0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x40452ba0" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x40452c00" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x40452c60" bit-offset="I:480" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x40452cc0" bit-offset="I:512" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0x402e5a78"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x40452d20" bit-offset="I:544" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x40452d80" bit-offset="I:560" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x40452de0" bit-offset="I:568" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x40452e40" bit-offset="I:576" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x4044ca18"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x40452ea0" bit-offset="I:608" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x402e5cf8"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x40452f00" bit-offset="I:672" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x40452f60" bit-offset="I:704" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x4045c010" bit-offset="I:736" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x4045c170" bit-offset="I:768" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x4045c1d0" bit-offset="I:800" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x4045c230" bit-offset="I:832" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x4045c290" bit-offset="I:864" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="hashtable" ref="0x404c5240" size="V:" alignment="V:">
    </struct>
    <struct name="lpl_metadata_t" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/LowPowerListeningLayer.h" ref="0x4067a2f8" defined="" packed="" size="I:2" alignment="I:1">
      <field name="sleepint" ref="0x4067a5f8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="heap" loc="61:/home/morten/workspace/tinyos/tos/lib/tossim/heap.h" ref="0x40503650" defined="" packed="" size="I:12" alignment="I:1">
      <field name="size" ref="0x40503a90" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x40503af0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x40503b50" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x4002cd90" packed="" size="V:" alignment="V:">
    </attribute>
    <struct name="_IO_marker" loc="186:/usr/include/libio.h" ref="0x4044cbf0" defined="" packed="" size="I:12" alignment="I:1">
      <field name="_next" ref="0x40456130" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:1"><struct-ref name="_IO_marker" ref="0x4044cbf0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x40456190" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x404561f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="102:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h" ref="0x406758a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="138:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40756ca0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="202:/usr/include/math.h" ref="0x4042f390" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="300:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b0ae40" defined="" packed="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x40b0af50" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x40b08010" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x40b08070" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x40b080d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x40b08130" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x40b08190" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b081f0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="random_data" loc="349:/usr/include/stdlib.h" ref="0x40308d80" defined="" packed="" size="I:28" alignment="I:1">
      <field name="fptr" ref="0x4030c6a0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x4030c700" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x4030c760" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x4030c7c0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x4030c820" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x4030c880" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x4030c8e0" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <union loc="76:/usr/include/bits/pthreadtypes.h" ref="0x402ff010" defined="" packed="" size="I:24" alignment="I:1">
      <field name="__data" ref="0x402ff120" bit-offset="I:0" size="I:24">
        <type-tag size="I:24" alignment="I:1"><struct-ref name="__pthread_mutex_s" ref="0x402fce28"/></type-tag>
      </field>
      <field name="__size" ref="0x402ff180" bit-offset="I:0" size="I:24">
        <type-array elements="I:24" size="I:24" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x402ff1e0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="118:/usr/include/stdlib.h" ref="0x402d4b38" defined="" packed="" size="I:16" alignment="I:1">
      <field name="quot" ref="0x402d4c48" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x402d4ca8" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <union loc="115:/usr/include/bits/pthreadtypes.h" ref="0x40304da8" defined="" packed="" size="I:48" alignment="I:1">
      <field name="__data" ref="0x40304eb8" bit-offset="I:0" size="I:44">
        <type-tag size="I:44" alignment="I:1"><struct-ref ref="0x40304598"/></type-tag>
      </field>
      <field name="__size" ref="0x40304f18" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40304f78" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x405e01d8" defined="" packed="" size="I:44" alignment="I:1">
      <field name="tm_sec" ref="0x405e0d60" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x405e0dc0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x405e0e20" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x405e0e80" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x405e0ee0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x405e0f40" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x405e0fa0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x405df018" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x405df078" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x405df0d8" bit-offset="I:288" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_zone" ref="0x405df138" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c" ref="0x404cec68" defined="" packed="" size="I:8" alignment="I:1">
      <field name="num" ref="0x404cd050" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x404cd0b0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
              <typename><typedef-ref name="FILE" ref="0x404517e8"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <union loc="167:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b17010" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b17120" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b17180" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b18b08"/></type-tag>
      </field>
    </union>
    <union loc="86:/usr/include/wchar.h" ref="0x4044e1e0" defined="" packed="" size="I:4" alignment="I:1">
      <field name="__wch" ref="0x4044e2f0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x4044e350" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <struct name="radio_stats" loc="109:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h" ref="0x406744b0" defined="" packed="" size="I:18" alignment="I:1">
      <field name="version" ref="0x40673618" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x40673678" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x406736d8" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x40673738" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x40673798" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x406737f8" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x40673858" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x406738b8" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x40673918" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x40673978" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x406739d8" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40032b80" defined="" packed="" size="I:0" alignment="I:1">
    </attribute>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b6010" defined="" packed="" size="I:12" alignment="I:1">
      <field name="a1" ref="0x401b6298" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x401b62f8" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x401b6358" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="atleastonce" loc="98:/home/morten/workspace/tinyos/tos/lib/tossim/tos.h" ref="0x404c7868" defined="" packed="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="60:/home/morten/workspace/tinyos/tos/types/Ieee154.h" ref="0x408a7e18" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="locale_data" ref="0x402b60d0" size="V:" alignment="V:">
    </struct>
    <enum loc="58:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40746d70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="101:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40afa500" defined="" packed="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x40afa610" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x40afa670" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x40afa6d0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x40afa730" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x40afa790" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="itimerval" loc="109:/usr/include/sys/time.h" ref="0x40549ab0" defined="" packed="" size="I:16" alignment="I:1">
      <field name="it_interval" ref="0x40549ee8" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><struct-ref name="timeval" ref="0x402f86a8"/></type-tag>
      </field>
      <field name="it_value" ref="0x40549f48" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:1"><struct-ref name="timeval" ref="0x402f86a8"/></type-tag>
      </field>
    </struct>
    <union loc="193:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b16aa8" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b16bb8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b16c18" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b16670"/></type-tag>
      </field>
    </union>
    <struct loc="29:/usr/include/bits/sigset.h" ref="0x402f5ae8" defined="" packed="" size="I:128" alignment="I:1">
      <field name="__val" ref="0x402f5bf8" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40032228" defined="" packed="" size="I:4" alignment="I:1">
      <field name="n" ref="0x400323d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="83:/usr/include/wchar.h" ref="0x4044e4d0" defined="" packed="" size="I:8" alignment="I:1">
      <field name="__count" ref="0x4044e5e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x4044e640" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:1"><union-ref ref="0x4044e1e0"/></type-tag>
      </field>
    </struct>
    <struct name="sigevent" ref="0x405df8a0" size="V:" alignment="V:">
    </struct>
    <struct loc="253:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b10e88" defined="" packed="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x40b10f98" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x40b0f010" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x40b0f070" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x40b0f0d0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="22:/usr/include/_G_config.h" ref="0x4044eb70" defined="" packed="" size="I:12" alignment="I:1">
      <field name="__pos" ref="0x4044ec80" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0x402e5a78"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x4044ece0" bit-offset="I:32" size="I:8">
        <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x4044e4d0"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x4044e6f8"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="63:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40afe9b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0x40032740" defined="" packed="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="315:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b2d3f0" defined="" packed="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x40b2d500" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x40b2d560" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x40b2d5c0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x40b2d620" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x40b2d680" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x40b2d6e0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b2d740" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x4002c728" packed="" size="V:" alignment="V:">
    </attribute>
    <enum loc="295:/usr/include/math.h" ref="0x4042fdb0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="231:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b11c30" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b11d40" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b11da0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b11798"/></type-tag>
      </field>
    </union>
    <enum loc="7:src/PacketLinkTest.h" ref="0x4048fb48" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="unsafe"  loc="NONE" ref="0x4002cef8" packed="" size="V:" alignment="V:">
    </attribute>
    <union loc="120:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40af7d10" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40af7e20" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40af7e80" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40af78f0"/></type-tag>
      </field>
    </union>
    <struct loc="39:/home/morten/workspace/tinyos/tos/types/Ieee154.h" ref="0x408a9c98" defined="" packed="" size="I:9" alignment="I:1">
      <field name="ieee_mode" ref="0x408a9da8" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ieee_addr" ref="0x408a9e08" bit-offset="I:8" size="I:8">
        <type-tag size="I:8" alignment="I:1"><union-ref ref="0x408a9988"/></type-tag>
      </field>
    </struct>
    <struct name="flags_metadata_t" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayer.h" ref="0x4067b258" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flags" ref="0x4067b550" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="activemessage_header_t" loc="40:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayer.h" ref="0x40668b78" defined="" packed="" size="I:1" alignment="I:1">
      <field name="type" ref="0x40668eb0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="136:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40af5010" defined="" packed="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x40af5120" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x40af5180" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x40af51e0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x40af5240" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x40af52a0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x40af5300" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x40af5360" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x40af53c0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="timesync_footer_t" loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h" ref="0x40d68e88" defined="" packed="" size="I:5" alignment="I:1">
      <field name="type" ref="0x40d658b0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x40d65910" bit-offset="I:8" size="I:4">
        <type-tag size="I:4" alignment="I:1"><nx_union-ref name="timestamp_t" ref="0x40d65160"/></type-tag>
      </field>
    </nx_struct>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b6d98" defined="" packed="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="_IO_FILE_plus" ref="0x4045c680" size="V:" alignment="V:">
    </struct>
    <struct name="exception" loc="320:/usr/include/math.h" ref="0x4042ed40" defined="" packed="" size="I:32" alignment="I:1">
      <field name="type" ref="0x4042c2b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x4042c310" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x4042c370" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x4042c3d0" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x4042c430" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <enum loc="63:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c" ref="0x404cdca8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_log_channel" loc="56:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c" ref="0x404cd380" defined="" packed="" size="I:16" alignment="I:1">
      <field name="name" ref="0x404cd990" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x404cd9f0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x404cda50" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x404cdab0" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
              <typename><typedef-ref name="FILE" ref="0x404517e8"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="40:/home/morten/workspace/tinyos/tos/types/IeeeEui64.h" ref="0x408901f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="75:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40afc010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="C"  loc="NONE" ref="0x4002c2e0" packed="" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h" ref="0x405514c8" defined="" packed="" size="I:477" alignment="I:1">
      <field name="key" ref="0x40551df8" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x40551e58" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x40551eb8" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x40551f18" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x40551f78" bit-offset="I:256" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x4054f010" bit-offset="I:264" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <union loc="133:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40af5560" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40af5670" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40af56d0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40af5010"/></type-tag>
      </field>
    </union>
    <attribute name="macro"  loc="NONE" ref="0x4002ca58" packed="" size="V:" alignment="V:">
      <field name="macro_name" ref="0x4002cb68" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <union loc="297:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b08398" defined="" packed="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b084a8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b08508" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b0ae40"/></type-tag>
      </field>
    </union>
    <enum loc="126:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h" ref="0x40749d08" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="234:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b11798" defined="" packed="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x40b118a8" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x40b11908" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b11968" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x40b119c8" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x40b11a28" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="message_t" loc="14:/home/morten/workspace/tinyos/tos/types/message.h" ref="0x40683c30" defined="" packed="" size="I:52" alignment="I:1">
      <field name="header" ref="0x40682858" bit-offset="I:0" size="I:12">
        <type-array elements="I:12" size="I:12" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x406828b8" bit-offset="I:96" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x40682918" bit-offset="I:320" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x40682978" bit-offset="I:336" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="ieee154_header_t" loc="38:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.h" ref="0x40669748" defined="" packed="" size="I:9" alignment="I:1">
      <field name="fcf" ref="0x40668010" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x40668070" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x402a7b58"/></typename>
        </type-int>
      </field>
      <field name="destpan" ref="0x406680d0" bit-offset="I:24" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x40668130" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x40668190" bit-offset="I:56" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="15:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioMsg.h" ref="0x406790e8" defined="" packed="" size="I:12" alignment="I:1">
      <field name="length" ref="0x40679d58" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x40679db8" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x40679e18" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x402a7b58"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x40679e78" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x40679ed8" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x40679f38" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x40679f98" bit-offset="I:80" size="I:1">
        <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="network_header_t" ref="0x40669118"/>
          <typename><typedef-ref name="network_header_t" ref="0x40669500"/></typename>
        </type-tag>
      </field>
      <field name="type" ref="0x40677010" bit-offset="I:88" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="94:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40758010" defined="" packed="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x40758120" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x40758180" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x407581e0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="170:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b18b08" defined="" packed="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x40b18c18" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x40b18c78" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x40b18cd8" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x40b18d38" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b18d98" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x40b18df8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="48:/usr/include/ctype.h" ref="0x4042cc18" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="27:/usr/include/_G_config.h" ref="0x4044d238" defined="" packed="" size="I:16" alignment="I:1">
      <field name="__pos" ref="0x4044d348" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x402e5cf8"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x4044d3a8" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x4044e4d0"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x4044e6f8"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum name="ieee154_fcf_enums" loc="74:/home/morten/workspace/tinyos/tos/types/Ieee154.h" ref="0x408a5258" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_noise_node_t" loc="73:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h" ref="0x4054f3b0" defined="" packed="" size="I:62" alignment="I:1">
      <field name="key" ref="0x4054d370" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x4054d3d0" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x4054d430" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x4054d490" bit-offset="I:328" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x4054d4f0" bit-offset="I:360" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x404c5240"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x4054d550" bit-offset="I:392" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x4054d5b0" bit-offset="I:424" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x4054d610" bit-offset="I:456" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x4054d670" bit-offset="I:488" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="95:/usr/include/bits/pthreadtypes.h" ref="0x40301690" defined="" packed="" size="I:4" alignment="I:1">
      <field name="__spins" ref="0x403017a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__list" ref="0x40301800" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><struct-ref name="__pthread_internal_slist" ref="0x402fc708"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0x402fcbb8"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="673:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h" ref="0x406fdec0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="153:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b19738" defined="" packed="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x40b19848" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x40b198a8" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x40b19908" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x40b19968" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x40b199c8" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x40b19a28" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x40b19a88" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x40b19ae8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="87:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h" ref="0x40676758" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/morten/workspace/tinyos/tos/types/TinyError.h" ref="0x403002d8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40754330" defined="" packed="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x40754440" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x407544a0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x40754500" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x40754560" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x407545c0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x40754620" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x4002c5b8" packed="" size="V:" alignment="V:">
    </attribute>
    <union loc="150:/usr/include/bits/pthreadtypes.h" ref="0x40306448" defined="" packed="" size="I:32" alignment="I:1">
      <field name="__data" ref="0x40306558" bit-offset="I:0" size="I:32">
        <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x40307b28"/></type-tag>
      </field>
      <field name="__size" ref="0x403065b8" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40306618" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b66e8" defined="" packed="" size="I:12" alignment="I:1">
      <field name="a1" ref="0x401b6970" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x401b69d0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x401b6a30" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x4069ec70" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="193:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioP.nc" ref="0x4090e270" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimRadioP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="46:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc" ref="0x40927db0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="RadioAlarmP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="69:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc" ref="0x409c0010" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="49:/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc" ref="0x409bb7e8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="62:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc" ref="0x409d0cb8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="63:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc" ref="0x409cf3c0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" ref="0x40a0da58" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" ref="0x40a3a708" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="78:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" ref="0x40aacb60" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="60:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" ref="0x40acba10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="74:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc" ref="0x40c10ee8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c3be20" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x40b51f30" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c2bdf8" defined="" packed="" scoped="" size="I:9" alignment="I:1">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x40c2bf08" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x40c2bf68" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x40c2a010" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x40c2a070" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x40c2a0d0" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c2b0b0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="144:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c7ae90" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="189:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c7a4e8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="322:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c7bbb8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/TaskletC.nc" ref="0x40c94ce8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TaskletC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c70160" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="291:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c80a48" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="187:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c8c010" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="78:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" ref="0x40cd5a50" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="58:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" ref="0x40cd0d40" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="61:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc" ref="0x40cfc278" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="59:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerP.nc" ref="0x40d22160" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="119:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc" ref="0x40ded958" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="322:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc" ref="0x40ded040" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc" ref="0x40e060f8" defined="" packed="" scoped="" size="I:47" alignment="I:1">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x40e05220" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x40e05280" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x40e052e0" bit-offset="I:96" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x40e05340" bit-offset="I:160" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x40e053a0" bit-offset="I:224" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x40e05400" bit-offset="I:288" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x401b84b8"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x40e05460" bit-offset="I:296" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x40e054c0" bit-offset="I:304" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x40e05520" bit-offset="I:312" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
            <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x40e05580" bit-offset="I:344" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:47" alignment="I:1"><struct-ref name="receive_message" scoped="" ref="0x40e060f8"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40e063d8"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="47:/home/morten/workspace/tinyos/tos/system/AMQueueP.nc" ref="0x40eb7940" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc" ref="0x40eb4e08" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="169:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc" ref="0x40eb44f0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="55:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc" ref="0x40eb07a0" defined="" packed="" scoped="" size="I:4" alignment="I:1">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x40eb08b0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
            <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
  </tags>
  <variables>
    <variable name="randCM" ref="0x405c05b8" loc="39:/home/morten/workspace/tinyos/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x4063e700" loc="283:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x4055abe0" loc="52:/home/morten/workspace/tinyos/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="test" ref="0x405c0ab0" loc="41:/home/morten/workspace/tinyos/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__timezone" ref="0x405e65b8" loc="278:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="channelTable" ref="0x404cb8a0" loc="68:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x404c5240"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x405faa18" loc="58:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:62000" alignment="I:1">
        <type-tag size="I:62" alignment="I:1"><struct-ref name="sim_noise_node_t" ref="0x4054f3b0"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x4054d728"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x404cb5e8" loc="67:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c">
      <type-array elements="I:204" size="I:1632" alignment="I:1">
        <type-tag size="I:8" alignment="I:1"><struct-ref name="sim_log_output" ref="0x404cec68"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x404cd168"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x405e6178" loc="276:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x405c0158" loc="39:/home/morten/workspace/tinyos/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x405e40e0" loc="292:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x40530c80" loc="44:/home/morten/workspace/tinyos/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><struct-ref name="heap" ref="0x40503650"/>
        <typename><typedef-ref name="heap_t" ref="0x40503c08"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x4057f990" loc="54:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x405fcd28" loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randC" ref="0x405c02c8" loc="39:/home/morten/workspace/tinyos/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x405fa648" loc="56:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
      </type-int>
    </variable>
    <variable name="csmaLow" ref="0x40580510" loc="47:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x40580db8" loc="50:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x405fa348" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x405e6eb0" loc="291:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x4057f110" loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x4045c930" loc="346:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x4045c680"/></type-tag>
    </variable>
    <variable name="randCD" ref="0x405c0440" loc="39:/home/morten/workspace/tinyos/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="j97" ref="0x405c08d8" loc="40:/home/morten/workspace/tinyos/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x404a65f8" loc="78:/home/morten/workspace/tinyos/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x404aca20" loc="28:/usr/include/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="tzname" ref="0x405e6868" loc="283:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x4050da88" loc="58:/home/morten/workspace/tinyos/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x4002a128"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x4045cf20" loc="348:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x4045c680"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x40580298" loc="46:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x4057f3f0" loc="52:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x4073de90" loc="51:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x405a0ab0" loc="10:/home/morten/workspace/tinyos/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:1">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="sim_gain_noise" ref="0x405a1db8"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x405a0270"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x4045cc28" loc="347:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x4045c680"/></type-tag>
    </variable>
    <variable name="csmaInitLow" ref="0x40580010" loc="45:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x405fa0c0" loc="52:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_ticks" ref="0x4055a998" loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
      </type-int>
    </variable>
    <variable name="__daylight" ref="0x405e6388" loc="277:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x40464de8" loc="147:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x405a0698" loc="9:/home/morten/workspace/tinyos/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:4004" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:1"><struct-ref name="gain_entry" ref="0x40598930"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x40596010"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x404ac768" loc="27:/usr/include/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x404648c8" loc="145:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x4056e2b8" loc="183:/home/morten/workspace/tinyos/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x4055ade0" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x4042eb60" loc="307:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x4042fdb0"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x4042e878"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x405a0ca8" loc="11:/home/morten/workspace/tinyos/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x4042f210" loc="161:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x40581d00" loc="44:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdout" ref="0x40464b58" loc="146:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x4057fc30" loc="55:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x405807f0" loc="48:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x4057f6d8" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x40580ad0" loc="49:/home/morten/workspace/tinyos/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x405c0780" loc="40:/home/morten/workspace/tinyos/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="data" ref="0x406f0a40" loc="21:src/PacketLinkTestP.nc">
      <component-ref qname="PacketLinkTestP"/>
      <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
        <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
      </type-tag>
    </variable>
    <variable name="dataBusy" ref="0x406f0c50" loc="22:src/PacketLinkTestP.nc">
      <component-ref qname="PacketLinkTestP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="seqno" ref="0x406f0e68" loc="24:src/PacketLinkTestP.nc">
      <component-ref qname="PacketLinkTestP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
      </type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x4069de00" loc="66:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x4069d848" loc="60:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x4069d638" loc="59:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x4069db28" loc="61:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:13" size="I:13" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x4069b1b8" loc="67:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x4083e528" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x4083e0c8" loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x4083be48" loc="50:/home/morten/workspace/tinyos/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x4083e2b0" loc="52:/home/morten/workspace/tinyos/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="currentEvent" ref="0x40926828" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="client" ref="0x409264b0" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x4099e830" loc="67:/home/morten/workspace/tinyos/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x4099e608" loc="66:/home/morten/workspace/tinyos/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x4099e338" loc="65:/home/morten/workspace/tinyos/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="pending" ref="0x409b1478" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="AutoResourceAcquireLayerC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="qTail" ref="0x409be168" loc="53:/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="resQ" ref="0x409bbc60" loc="51:/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="qHead" ref="0x409bbe68" loc="52:/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="resId" ref="0x409cfa68" loc="66:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="state" ref="0x409cf768" loc="65:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="reqResId" ref="0x409cfd70" loc="67:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="receivedNumbers" ref="0x40a754b0" loc="91:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-array elements="I:5" size="I:5" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sequenceNumber" ref="0x40a7ad38" loc="61:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="ages" ref="0x40a8c858" loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-array elements="I:5" size="I:5" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="nodes" ref="0x40a8c5c0" loc="49:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-array elements="I:5" size="I:10" alignment="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="flags" ref="0x40a8caf8" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-array elements="I:5" size="I:5" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="time" ref="0x40a8ccf8" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="last" ref="0x40a8cef8" loc="53:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="totalRetries" ref="0x40acac48" loc="71:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
      </type-int>
    </variable>
    <variable name="state" ref="0x40aca688" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="currentMsg" ref="0x40aca9e8" loc="70:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="base" ref="0x40b51df0" loc="40:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x40b51a70" loc="39:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x40b51878" loc="38:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x40b51bc0" loc="39:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x40b88348" loc="80:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x40b88068" loc="74:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x40bf4940" loc="480:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x40b9e858" loc="185:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x40b8c650" loc="58:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x40b8c358" loc="57:/home/morten/workspace/tinyos/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x40c1fb80" loc="55:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x40c1fd98" loc="56:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x40c2a6e8" loc="69:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x40c2a488" loc="68:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-tag size="I:9" alignment="I:1"><struct-ref scoped="" ref="0x40c2bdf8"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x40c2a188"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="retries" ref="0x40c8ddc0" loc="184:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="txError" ref="0x40c8dba8" loc="183:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
      </type-int>
    </variable>
    <variable name="txMsg" ref="0x40c8d990" loc="182:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x40c70010" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="receiveQueueHead" ref="0x40c7f670" loc="299:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="receiveQueueData" ref="0x40c7f048" loc="296:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="I:3" size="I:156" alignment="I:1">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="receiveQueue" ref="0x40c7f3f8" loc="297:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
            <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="receiveQueueSize" ref="0x40c7f8e8" loc="300:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="nextRandom" ref="0x40cced10" loc="77:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
      </type-int>
    </variable>
    <variable name="txBarrier" ref="0x40ccfd08" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
      </type-int>
    </variable>
    <variable name="txMsg" ref="0x40ccfac8" loc="68:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x40cd0bf0" loc="57:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="seed" ref="0x40ce07c0" loc="52:/home/morten/workspace/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
      </type-int>
    </variable>
    <variable name="txMsg" ref="0x40cfccf0" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x40cfc128" loc="60:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="ackMsg" ref="0x40cfcf18" loc="70:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
        <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
      </type-tag>
    </variable>
    <variable name="txMsg" ref="0x40d23dd8" loc="56:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x40d22010" loc="58:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="sendEvent" ref="0x40d85e40" loc="81:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
      </type-tag>
    </variable>
    <variable name="buffer" ref="0x40d840a8" loc="83:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
        <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x40d84338" loc="84:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sending" ref="0x40d85be8" loc="80:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x40d856a8" loc="77:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x40d858e0" loc="79:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="collision" ref="0x40e1bcb0" loc="201:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x40e07690" loc="59:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x40e1b760" loc="198:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x40e07ee0" loc="62:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x40e1a3a8" loc="203:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x40e05850" loc="79:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:47" alignment="I:1"><struct-ref name="receive_message" scoped="" ref="0x40e060f8"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40e063d8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x40e1a010" loc="202:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x40e1b988" loc="200:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x40e07b88" loc="61:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x40e07470" loc="58:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x40e078a8" loc="60:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="injectionMsg" ref="0x40e849b0" loc="52:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/AMPacketInjectorP.nc">
      <component-ref qname="AMPacketInjectorP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
          <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="injectionBuffer" ref="0x40e84728" loc="51:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/AMPacketInjectorP.nc">
      <component-ref qname="AMPacketInjectorP"/>
      <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
        <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
      </type-tag>
    </variable>
    <variable name="current" ref="0x40eb0b80" loc="59:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x40eaf010" loc="60:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-tag size="I:4" alignment="I:1"><struct-ref scoped="" ref="0x40eb07a0"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x40eb0968"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x40eaf510" loc="61:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x40739ea8" loc="1075:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x4072c440" loc="943:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x40734e58" loc="1132:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x40722760" loc="1058:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x4075aa10" loc="85:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x406f2eb8" loc="140:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x406f4220" loc="81:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x40708d78" loc="786:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x4073dac8" loc="1299:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x407568e0" loc="133:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x40b13e20" loc="222:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x4075be80" loc="80:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x4070fb48" loc="705:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x4072d058" loc="924:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x40734758" loc="1126:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x40732e40" loc="1154:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x40717758" loc="919:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x4072f570" loc="1182:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x407377d8" loc="1093:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x40736ad8" loc="1106:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x4071bb08" loc="876:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x40718010" loc="902:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x40675748" loc="98:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x40710268" loc="687:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x4071a278" loc="882:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x4072bd30" loc="961:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x4070ab40" loc="763:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x4070d9f8" loc="730:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x4073fac8" loc="1275:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x4042e010" loc="297:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x40b12aa8" loc="227:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x4071c200" loc="858:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x40717920" loc="920:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x40b125d8" loc="225:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x4075da38" loc="64:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x40701768" loc="269:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x4070e7c0" loc="714:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x4071e728" loc="839:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x40436a00" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x40706ac0" loc="169:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="AM_TEST_MSG" ref="0x4048fd08" loc="8:src/PacketLinkTest.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x4072c0a8" loc="939:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x407469a0" loc="52:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x407338a8" loc="1138:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x40730010" loc="1166:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x40700878" loc="283:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x4072b7e8" loc="956:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x4072e708" loc="1194:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x40744e30" loc="1222:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x40afe280" loc="58:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x4071d1d8" loc="847:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x40738ed0" loc="1086:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x40711d08" loc="684:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x406ff7b0" loc="298:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x4070a600" loc="760:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x407207a8" loc="817:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x40727918" loc="1004:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x40b13258" loc="217:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x406c2e38" loc="36:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x4071ec58" loc="844:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x40744ac0" loc="1218:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x40741200" loc="1246:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x4072b2b8" loc="953:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x40758e70" loc="109:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x40b123c0" loc="224:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x40719d98" loc="901:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x407068a0" loc="166:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x40747170" loc="128:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x40afc640" loc="78:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x40afb9e0" loc="94:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x407351f8" loc="1112:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x40b01828" loc="54:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x4070c908" loc="740:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x40737610" loc="1092:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x40740540" loc="1261:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x40438340" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x406742c0" loc="106:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x406f6870" loc="47:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x40705560" loc="182:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x40706038" loc="154:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x40552498" loc="56:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x4072cd28" loc="948:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x40727750" loc="1003:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x407080e8" loc="779:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x407200a8" loc="811:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x40720e60" loc="821:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x40740370" loc="1258:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x407078e0" loc="794:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x4073e558" loc="1283:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x40727010" loc="997:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x40759358" loc="89:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x40afcd70" loc="85:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x40705dd0" loc="194:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x407099a0" loc="773:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x407117b8" loc="679:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x4070d820" loc="727:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x4075c390" loc="68:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x4075ca48" loc="71:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x4070d0e8" loc="721:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x40676b70" loc="89:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x40725708" loc="1025:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x40b134a0" loc="218:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x40755508" loc="145:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x4042e188" loc="298:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x40300b90" loc="56:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x40755738" loc="146:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IEEE154_TYPE_BEACON" ref="0x408a48a8" loc="85:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x40701988" loc="272:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x4073f010" loc="1267:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x4073ec48" loc="1289:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x40725a90" loc="1027:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x40732710" loc="1148:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x40730e00" loc="1176:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x40745550" loc="1204:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x40743c10" loc="1232:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x40707720" loc="793:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x4072d948" loc="933:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x407436d0" loc="1227:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x40708650" loc="782:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x407297e0" loc="980:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x40741e10" loc="1255:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x40b01a88" loc="55:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x40725c60" loc="1030:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x406f6eb8" loc="54:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x406f6058" loc="39:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x40701138" loc="264:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x4070eb68" loc="718:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x40b01cf0" loc="56:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x40704a90" loc="216:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x407213d0" loc="802:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x4073fe58" loc="1277:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x4073d570" loc="1296:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x40710ec0" loc="696:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x4071c580" loc="860:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x40734200" loc="1123:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x40703bd0" loc="238:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x40675aa0" loc="103:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x406f2ca0" loc="139:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x407328e8" loc="1151:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x407365c8" loc="1103:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x406f2660" loc="134:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x40756ed8" loc="139:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x40735ab8" loc="1117:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x407321d0" loc="1145:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x407308c0" loc="1173:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x40745010" loc="1201:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x40756b20" loc="134:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x40afe768" loc="60:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x40b12840" loc="226:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x40552dd0" loc="60:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x40700228" loc="278:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x4070c3a0" loc="735:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x4073f570" loc="1272:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x40740e00" loc="1266:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x4073ea88" loc="1288:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x4071d560" loc="849:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x4071ee20" loc="845:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x40718e48" loc="912:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x40749f08" loc="127:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x4071b5b0" loc="873:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x4054e2f0" loc="60:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x407251d8" loc="1022:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x4075b390" loc="75:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x406ff9d8" loc="301:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x406fe2d0" loc="313:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x404351e0" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x40724aa0" loc="1040:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x40738d08" loc="1085:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x4071f3d8" loc="826:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x40757c10" loc="121:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x40703798" loc="232:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x407194a8" loc="894:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x4072a630" loc="968:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x40720430" loc="815:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x406f4650" loc="87:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x4070fd10" loc="706:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x4072fe58" loc="1187:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x40744568" loc="1215:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x40742c78" loc="1243:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x40705770" loc="185:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x40705130" loc="176:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_FCF_SECURITY_ENABLED" ref="0x408a5738" loc="76:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x4072b0e8" loc="950:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x40700cb0" loc="287:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x4075d420" loc="61:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x4075b160" loc="74:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x40758a48" loc="107:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x40742550" loc="1237:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x40706680" loc="163:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x4070b220" loc="745:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x406f2a80" loc="136:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x40701558" loc="268:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x40709d30" loc="775:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x40300f28" loc="58:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x4075c810" loc="70:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x4075cec0" loc="73:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x405446d0" loc="52:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x4075a7e0" loc="84:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x40720950" loc="818:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x407387c8" loc="1082:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x4072c7d0" loc="945:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x407331e8" loc="1134:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x40731900" loc="1162:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x406f1788" loc="146:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x40702868" loc="254:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x406c27f8" loc="27:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x406f4ea0" loc="99:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x40734ae8" loc="1128:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x40731200" loc="1156:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x4072f900" loc="1184:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x40744010" loc="1212:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x40718ab8" loc="910:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x4070f5f8" loc="700:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x407231d0" loc="1044:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x40727ae8" loc="1005:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x40736e38" loc="1108:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IEEE154_ADDR_NONE" ref="0x408a3488" loc="92:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x40728658" loc="992:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x40709448" loc="770:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x407105e8" loc="689:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x40725010" loc="1021:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x40b17cc0" loc="189:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x4071a618" loc="884:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x4070aec0" loc="765:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x40757e18" loc="122:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x40b13010" loc="216:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IEEE154_TYPE_MASK" ref="0x406686a8" loc="76:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x40719840" loc="896:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x4071ea88" loc="841:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x40723c88" loc="1052:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x40544928" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x4072bef0" loc="962:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x406f6450" loc="43:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x4072dce8" loc="937:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x40730370" loc="1168:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x4072ea68" loc="1196:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x407431c0" loc="1224:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x40741900" loc="1252:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x40737270" loc="1088:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x407100a8" loc="686:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x40729d38" loc="985:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x4075b7f0" loc="77:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x4042f4a8" loc="204:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x406ff588" loc="295:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x40afb3d8" loc="91:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x40552948" loc="58:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x40afdd48" loc="71:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x406f4a80" loc="93:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x40739440" loc="1067:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x40741590" loc="1248:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_ADDR_MASK" ref="0x406688e8" loc="77:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x405496b0" loc="99:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x4071d8e0" loc="851:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x40717038" loc="913:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x40719bd8" loc="900:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x40722ce0" loc="1063:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x40704010" loc="197:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x40735578" loc="1114:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x40733c38" loc="1142:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x4070a270" loc="756:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x4070c568" loc="736:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x407408c0" loc="1263:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x4070bcf0" loc="753:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x4070beb8" loc="754:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x4072d5a8" loc="929:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x4071b058" loc="870:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x407039c0" loc="235:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x4071c900" loc="864:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x407289e8" loc="994:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x40704670" loc="210:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x407271e0" loc="998:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x40722200" loc="1055:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x40739988" loc="1072:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x40708bb0" loc="785:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x40721b08" loc="808:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x40720cb0" loc="820:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x4073e8b8" loc="1285:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x406ffc00" loc="304:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x406f1dd8" loc="151:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x40700ec8" loc="288:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x4072b468" loc="954:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x40738988" loc="1083:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x40737ed8" loc="1097:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x4075a5b0" loc="83:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x40757138" loc="110:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x4042f7d0" loc="208:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x4071af28" loc="891:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x4070d478" loc="723:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x40723558" loc="1046:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x40700660" loc="282:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x406fe708" loc="319:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="IEEE154_ADDR_SHORT" ref="0x408a36d0" loc="93:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x4073d010" loc="1291:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x404a61d8" loc="76:/home/morten/workspace/tinyos/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x40300d58" loc="57:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x40753c78" loc="51:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x4072f1d0" loc="1178:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x407458d0" loc="1206:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x40742010" loc="1234:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x407537f8" loc="48:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x407215a0" loc="803:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x40afebb0" loc="64:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x4070b3e8" loc="746:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x4042e308" loc="299:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x40710970" loc="691:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x40718558" loc="905:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="IEEE154_FCF_SRC_ADDR_MODE" ref="0x408a4448" loc="81:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x40737998" loc="1094:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x407473f8" loc="129:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x40724380" loc="1034:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x40734ca8" loc="1131:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="IEEE154_MIN_HDR_SZ" ref="0x408a5038" loc="61:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x407089e8" loc="784:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x404cea58" loc="48:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x406c2c18" loc="33:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x4073d900" loc="1298:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x40afb010" loc="86:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x40afb7f0" loc="93:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x4070f268" loc="698:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x4070f988" loc="704:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x40702430" loc="250:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x40717e68" loc="923:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x40734590" loc="1125:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x40732c78" loc="1153:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x4072f3a8" loc="1181:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x407292a0" loc="977:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IEEE154_FCF_FRAME_TYPE" ref="0x408a5488" loc="75:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x4072ad38" loc="974:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x40736928" loc="1105:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IEEE154_TYPE_DATA" ref="0x408a4ae8" loc="86:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x4075b5c0" loc="76:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x4071a0a8" loc="881:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x40702220" loc="247:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x4070a980" loc="762:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x40701ba0" loc="273:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x40700a90" loc="284:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x4070c010" loc="733:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x4073f900" loc="1274:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x4071ab78" loc="887:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x4075dc40" loc="65:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x4070e600" loc="713:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x4071b940" loc="875:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x40544e50" loc="55:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="IEEE154_FCF_DEST_ADDR_MODE" ref="0x408a41b8" loc="80:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x407336f8" loc="1137:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x40731e10" loc="1165:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x40434168" loc="60:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x4072b628" loc="955:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x4072e558" loc="1193:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x40744c80" loc="1221:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x406ffe28" loc="307:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x4071d010" loc="846:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x40706ce0" loc="172:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="IEEE154_FCF_FRAME_PENDING" ref="0x408a59c8" loc="77:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="IEEE154_TYPE_ACK" ref="0x408a4d20" loc="87:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x40707e40" loc="799:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x4071f758" loc="828:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x4071e038" loc="835:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x4070bb20" loc="752:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x40724e30" loc="1042:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x4070a440" loc="759:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x40436250" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x407241c0" loc="1033:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x40afd818" loc="69:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x4070e0b0" loc="708:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x406f3340" loc="105:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x40728bb0" loc="995:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x407448f8" loc="1217:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x40741038" loc="1245:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x40711430" loc="677:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x40711b38" loc="681:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x406f19a8" loc="149:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x4075d010" loc="59:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x40758620" loc="105:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x40735038" loc="1111:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x407539f8" loc="49:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x4070ce60" loc="743:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x40737448" loc="1091:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x4075c5d0" loc="69:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x40722940" loc="1061:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x40757570" loc="112:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x4075a380" loc="82:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x40702ca8" loc="258:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x4072cb60" loc="947:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x40733548" loc="1136:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x40727588" loc="1002:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x406f1138" loc="141:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x40731c60" loc="1164:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x4072e3a8" loc="1192:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x4042e488" loc="300:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x407071d0" loc="790:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x407401c0" loc="1257:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x4073e3a8" loc="1282:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x40728d80" loc="996:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x407097d8" loc="772:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_ADDR_EXT" ref="0x408a3908" loc="94:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x406f59a8" loc="69:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x4070eef8" loc="720:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x40726208" loc="1011:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x40711978" loc="680:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:127" name="IEEE154_LINK_MTU" ref="0x408a7478" loc="51:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x40706470" loc="160:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x40b14700" loc="212:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x40747638" loc="130:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x404568a8" loc="210:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x40732550" loc="1147:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x40730c40" loc="1175:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x40745390" loc="1203:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x40743a50" loc="1231:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x40720270" loc="812:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x4072db10" loc="934:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x40708820" loc="783:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x40729620" loc="979:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x4072edc8" loc="1198:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x40743520" loc="1226:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x406f3bc0" loc="119:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x40741c60" loc="1254:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x40722ea8" loc="1064:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x40753300" loc="46:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x407299b8" loc="983:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x40afee00" loc="65:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x4071c038" loc="857:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x4070e280" loc="711:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x40726e10" loc="1020:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x40721940" loc="807:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x40705990" loc="188:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x4054e6a8" loc="62:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x406f3770" loc="111:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x40710d00" loc="695:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x4071c3c0" loc="859:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x407173b8" loc="915:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x40717590" loc="918:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x40738438" loc="1078:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x40734038" loc="1122:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x40702650" loc="253:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x4075cc80" loc="72:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x40703358" loc="226:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x404566d8" loc="209:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x40739ce8" loc="1074:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x407263c8" loc="1012:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x40736418" loc="1102:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x40674010" loc="105:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x407535d0" loc="47:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x407358f8" loc="1116:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x40732010" loc="1144:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x40730700" loc="1172:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x4070c1d8" loc="734:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x4073f3a8" loc="1271:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x40b14d50" loc="215:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x40740c40" loc="1265:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x40758838" loc="106:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x4070e9a0" loc="717:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x4072d228" loc="927:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x4071d3a0" loc="848:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x40718c80" loc="911:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x4071b3e8" loc="872:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x4054ea50" loc="64:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x407268d0" loc="1015:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x4071f058" loc="822:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x4075ac40" loc="86:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x407380a8" loc="1076:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x406f5588" loc="63:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x406fe930" loc="322:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x40afd318" loc="67:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x4072bb68" loc="960:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x4072a0d0" loc="963:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x4072aef8" loc="975:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x40738b48" loc="1084:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x40756298" loc="127:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x407238d8" loc="1048:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x40703578" loc="229:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x407192d8" loc="893:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x4071f598" loc="827:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x406f4010" loc="78:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x40731590" loc="1158:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x40707010" loc="789:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x4071e3b8" loc="837:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x4072fc90" loc="1186:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x407443a0" loc="1214:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x407282b0" loc="988:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x40742ab0" loc="1242:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x40b17a80" loc="188:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x4070b788" loc="750:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x4072cef0" loc="949:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x4075d628" loc="62:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x4072a290" loc="964:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x4072a7f0" loc="969:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x40745c50" loc="1208:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x40742390" loc="1236:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x40b14b30" loc="214:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x40721038" loc="800:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x4042e610" loc="301:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x4070b058" loc="744:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x40724700" loc="1036:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x40703de0" loc="241:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x40737d18" loc="1096:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x4072c608" loc="944:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x40739608" loc="1068:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x40733038" loc="1133:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x40731750" loc="1161:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x406f4860" loc="90:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x40704880" loc="213:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x40724c68" loc="1041:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x404564f0" loc="208:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x4070f430" loc="699:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x40734920" loc="1127:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x40731038" loc="1155:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x4072f738" loc="1183:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x40745e28" loc="1211:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x40739278" loc="1066:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x40736c88" loc="1107:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x4071bcd0" loc="877:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x407181d8" loc="903:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x40afe4f0" loc="59:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x40709280" loc="769:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x40710428" loc="688:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x40753010" loc="45:/home/morten/workspace/tinyos/tos/platforms/iris/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x40758c58" loc="108:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x4071ce70" loc="867:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x4071a448" loc="883:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x4070ad00" loc="764:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x40700440" loc="279:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x4070dbc0" loc="731:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x405498d0" loc="103:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x4073fc90" loc="1276:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x4073d3a8" loc="1295:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x40757798" loc="116:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x4071dc78" loc="855:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x40717ae8" loc="921:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x4075ae70" loc="87:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x4075d830" loc="63:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x40b13958" loc="220:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x4071e8d8" loc="840:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x406f1570" loc="145:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x407110a8" loc="675:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x40afd590" loc="68:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x406f39a0" loc="116:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x40675270" loc="96:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x406f6250" loc="41:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x40435990" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x4072deb0" loc="938:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x40726c40" loc="1017:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x407301c0" loc="1167:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x4072b9a8" loc="957:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x4072e8b8" loc="1195:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x40743010" loc="1223:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x40741750" loc="1251:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x40b136f8" loc="219:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x407370a8" loc="1087:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x40711ec8" loc="685:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x40708480" loc="781:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x4071fae0" loc="830:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x40729b78" loc="984:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x40723390" loc="1045:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x40747898" loc="131:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x4071f918" loc="829:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x406ff360" loc="292:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x40722598" loc="1057:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x406f4440" loc="84:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x407413c8" loc="1247:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x4071d720" loc="850:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x4070a0a8" loc="755:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x40456a98" loc="211:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x40723e58" loc="1053:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x40738608" loc="1081:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x406f6ca8" loc="51:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x404372c8" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x407353b8" loc="1113:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x4066cca0" loc="27:/home/morten/workspace/tinyos/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x40733a78" loc="1141:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x4070cad0" loc="741:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x40740700" loc="1262:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x406ff138" loc="289:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x40afc1e8" loc="76:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x40675d18" loc="104:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x40706260" loc="157:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x40704230" loc="202:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x40728820" loc="993:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x40702a80" loc="255:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x4042fb30" loc="212:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x40439b60" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x40756500" loc="128:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x40675010" loc="95:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x40704cb0" loc="219:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x40721cd0" loc="809:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x40720b00" loc="819:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x4073e708" loc="1284:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x40707c60" loc="796:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x406f5138" loc="57:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x40709b68" loc="774:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x403009d0" loc="55:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x4042f988" loc="210:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x4071ad58" loc="890:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x406f5dc8" loc="75:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x4070d2b0" loc="722:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x407465e8" loc="47:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x40afe010" loc="57:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x40726720" loc="1014:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x40724540" loc="1035:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x4075ba20" loc="78:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x40552ba8" loc="59:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x40700010" loc="277:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x40726a80" loc="1016:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x40b17840" loc="187:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x40746388" loc="46:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x4073f1d0" loc="1268:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x4073ee08" loc="1290:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x4075c158" loc="67:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x407248c8" loc="1037:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x407205e0" loc="816:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x407397c8" loc="1071:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x40afd0a8" loc="66:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x4072f010" loc="1177:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x40745710" loc="1205:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x40743dd0" loc="1233:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x40707558" loc="792:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x4072d780" loc="932:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x40743880" loc="1228:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x40740010" loc="1256:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x40706ef8" loc="173:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x40729ef8" loc="986:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x4073e1f8" loc="1281:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x40b13bb8" loc="221:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x406f2870" loc="135:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x4054e878" loc="63:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x40718398" loc="904:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:204" name="SIM_LOG_OUTPUT_COUNT" ref="0x404cb210" loc="64:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x4072a9b8" loc="970:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x40afdab0" loc="70:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x40676938" loc="88:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x40729460" loc="978:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x40707390" loc="791:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x40725548" loc="1024:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_TYPE_MAC_CMD" ref="0x408a3010" loc="88:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x40704450" loc="207:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x407082b0" loc="780:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x4073e038" loc="1278:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x4073d738" loc="1297:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x40afcb90" loc="84:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x4070f0a8" loc="697:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x4070f7c8" loc="703:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x4054e108" loc="59:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x4071c740" loc="861:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x407188f0" loc="909:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x406f1358" loc="144:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x40717ca8" loc="922:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x407343c8" loc="1124:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x40732ab0" loc="1152:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x40736778" loc="1104:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x40735c78" loc="1118:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x4071beb0" loc="880:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x40732390" loc="1146:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x4070a7c0" loc="761:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x40730a80" loc="1174:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x407451d0" loc="1202:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="IEEE154_BROADCAST_ADDR" ref="0x408a7240" loc="50:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x404393b0" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x4070dd88" loc="732:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x4073f738" loc="1273:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x407115f8" loc="678:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x4071a9b0" loc="886:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x4070e440" loc="712:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x4075de48" loc="66:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x4071b778" loc="874:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x4072a460" loc="965:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x40702ec8" loc="261:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x406f2450" loc="131:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x40724010" loc="1032:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x406fe4f8" loc="316:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x4071e578" loc="838:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x40719678" loc="895:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x4072ab88" loc="973:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x40725388" loc="1023:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x406f4c90" loc="96:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x4070fed8" loc="707:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x40707aa0" loc="795:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x4071dab0" loc="854:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x4072e038" loc="1188:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x40744730" loc="1216:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x40742e40" loc="1244:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x40747e98" loc="44:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x40726570" loc="1013:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x4042f650" loc="206:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x40afc9b0" loc="83:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x40739b38" loc="1073:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x40746c10" loc="53:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x40afc3f8" loc="77:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x40b175f8" loc="186:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x40544bd8" loc="54:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x407290e0" loc="976:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x40759150" loc="88:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x406f2230" loc="128:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x4075d218" loc="60:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x40551290" loc="61:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x40742710" loc="1238:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x4070cc98" loc="742:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x40723ab8" loc="1051:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x40709ef8" loc="776:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x4071fca0" loc="831:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x40723718" loc="1047:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x40746180" loc="45:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x4072c998" loc="946:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x40733398" loc="1135:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x40731ab0" loc="1163:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x4072e1f8" loc="1191:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x406754e0" loc="97:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x40438af0" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x4071cca0" loc="866:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x406f6650" loc="44:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x40721e90" loc="810:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x40727cb8" loc="1006:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x407223d0" loc="1056:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x406f1bc0" loc="150:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x407273c0" loc="1001:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x40709610" loc="771:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x407107a8" loc="690:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x40725e20" loc="1031:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x40704ed0" loc="222:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="IEEE154_FCF_ACK_REQ" ref="0x408a5c18" loc="78:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x40b14918" loc="213:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x4071a7e8" loc="885:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x40300470" loc="52:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x403007f8" loc="54:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x4070ed30" loc="719:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x407090a8" loc="766:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x4071f218" loc="823:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x40701db8" loc="274:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x40719a08" loc="897:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x40afb5e8" loc="92:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x40755138" loc="140:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x40722b10" loc="1062:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x4066c960" loc="15:/home/morten/workspace/tinyos/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x4075a150" loc="81:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x40300630" loc="53:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x4072ec18" loc="1197:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x40721770" loc="804:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x40743370" loc="1225:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x40741ab0" loc="1253:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x40434928" loc="61:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x406f6a88" loc="48:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x40722038" loc="1054:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x406f3dd0" loc="122:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x4071de40" loc="856:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x4054e4d8" loc="61:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x4075bc50" loc="79:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x40759550" loc="90:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x40738270" loc="1077:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x406f3130" loc="102:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x40710b40" loc="694:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x407171f8" loc="914:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x40735e50" loc="1121:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x40702010" loc="244:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x40705bb0" loc="191:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x40736268" loc="1101:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x40705340" loc="179:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x40701348" loc="267:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x40757350" loc="111:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x40735738" loc="1115:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x40733df8" loc="1143:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x40730540" loc="1171:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="IEEE_EUI64_LENGTH" ref="0x408903e8" loc="40:/home/morten/workspace/tinyos/tos/types/IeeeEui64.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x4070c730" loc="737:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x40740a80" loc="1264:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x4072d3e8" loc="928:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x40b015e0" loc="53:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x4066ced0" loc="28:/home/morten/workspace/tinyos/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x4071b220" loc="871:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x40b12188" loc="223:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x4071fe60" loc="834:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x40727e88" loc="1007:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x407390a8" loc="1065:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x406f5360" loc="60:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x406fe0a8" loc="310:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x406f5bb8" loc="72:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x40726058" loc="1010:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x40747ad8" loc="132:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x407360a8" loc="1098:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x40549480" loc="96:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x40723010" loc="1043:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x40719108" loc="892:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x4070d640" loc="724:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x406c2a08" loc="30:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x406f3550" loc="108:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x4071cad0" loc="865:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x407313c8" loc="1157:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x4071e1f8" loc="836:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x4072fac8" loc="1185:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x407280e8" loc="987:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x407441d8" loc="1213:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x407428e8" loc="1241:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x40711268" loc="676:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x406f5798" loc="66:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x4073d1d0" loc="1292:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="IEEE154_FCF_INTRAPAN" ref="0x408a5e78" loc="79:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x4070b950" loc="751:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x404a6388" loc="76:/home/morten/workspace/tinyos/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x40745a90" loc="1207:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x405526b0" loc="57:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x407421d0" loc="1235:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x406f2010" loc="125:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x4072c278" loc="942:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x40703138" loc="223:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x40721208" loc="801:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x40437a78" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x4070b5b0" loc="747:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x407258c8" loc="1026:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x40718718" loc="906:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x40728478" loc="989:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x40737b58" loc="1095:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x4069d3d8" loc="56:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="NUM_TASKS" ref="0x4069d200" loc="55:/home/morten/workspace/tinyos/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3125" name="TRAFFIC_MAX_BYTES" ref="0x4090ea68" loc="196:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioP.nc">
      <component-ref qname="TossimRadioP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="TRAFFIC_UPDATE_PERIOD" ref="0x4090e498" loc="195:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioP.nc">
      <component-ref qname="TossimRadioP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_CLIENT" ref="0x40926010" loc="47:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1048576" name="TICKS_PER_SECOND" ref="0x40926250" loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_ENTRY" ref="0x409bb980" loc="49:/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="grantedTask" ref="0x409dbea8" loc="69:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_RES" ref="0x409cf540" loc="63:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RES_GRANTING" ref="0x409cf0a8" loc="62:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="RES_BUSY" ref="0x409cf280" loc="62:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RES_IDLE" ref="0x409d0e50" loc="62:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PAYLOAD_OFFSET" ref="0x40a0dd18" loc="148:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="IEEE154_ACK_FRAME_VALUE" ref="0x40a38e70" loc="71:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52295" name="IEEE154_DATA_FRAME_MASK" ref="0x40a394a8" loc="59:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34881" name="IEEE154_DATA_FRAME_VALUE" ref="0x40a382b8" loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_ACK_FRAME_LENGTH" ref="0x40a38540" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IEEE154_ACK_FRAME_MASK" ref="0x40a389d8" loc="70:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="send" ref="0x40aaca50" loc="78:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_SENDDONE" ref="0x40aca038" loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="STATE_CANCELLED" ref="0x40aca260" loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_SENDING" ref="0x40acbde8" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40acbbd0" loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="STATE_SIGNAL" ref="0x40aca470" loc="66:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x40b500e8" loc="45:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x40b502b8" loc="46:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x40c10dd8" loc="74:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x40c2b4c8" loc="56:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x40c3bd10" loc="71:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x40c2b2c8" loc="55:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="STATE_TX_SEND" ref="0x40c70990" loc="69:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="STATE_TX_DONE" ref="0x40c70ba8" loc="70:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="STATE_TURN_ON" ref="0x40c70dc0" loc="71:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="stateDoneTask" ref="0x40c7ad80" loc="144:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendTask" ref="0x40c7a3d8" loc="189:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_TX_PENDING" ref="0x40c70558" loc="67:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="STATE_TURN_OFF" ref="0x40c6d010" loc="72:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="MAX_RETRIES" ref="0x40c8c1c0" loc="187:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40c70320" loc="66:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="deliverTask" ref="0x40c7baa8" loc="322:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_TX_RETRY" ref="0x40c70778" loc="68:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="STATE_CHANNEL" ref="0x40c6d228" loc="73:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="RECEIVE_QUEUE_SIZE" ref="0x40c80c50" loc="293:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="tasklet" ref="0x40c94bd8" loc="47:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_TX_PENDING_SECOND" ref="0x40ccf408" loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40cd0f00" loc="60:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="STATE_BARRIER" ref="0x40ccf858" loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="calcNextRandom" ref="0x40cd5940" loc="78:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_TX_PENDING_FIRST" ref="0x40ccf190" loc="61:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="STATE_TX_SENDING" ref="0x40ccf640" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="STATE_ACK_SEND" ref="0x40cfcaa0" loc="66:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_DATA_SEND" ref="0x40cfc660" loc="64:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40cfc438" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_ACK_WAIT" ref="0x40cfc880" loc="65:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_CCA_WAIT" ref="0x40d22540" loc="62:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_SEND" ref="0x40d22738" loc="63:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40d22320" loc="61:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="stateDoneTask" ref="0x40ded848" loc="119:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="ccaDoneTask" ref="0x40d67ef8" loc="322:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="NUM_CLIENTS" ref="0x40eb7e20" loc="48:/home/morten/workspace/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x40eb43e0" loc="169:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x40eb4cf8" loc="126:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x401bdea8" loc="126:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="intptr_t" ref="0x401bdea8"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x40684010" loc="134:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x40672938"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x40684010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x40b10560" loc="247:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b11c30"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x40b10560"/></typename>
      </type-tag>
    </typedef>
    <typedef name="network_header_t" ref="0x40669500" loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayer.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="network_header_t" ref="0x40669118"/>
        <typename><typedef-ref name="network_header_t" ref="0x40669500"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x4030a068" loc="201:/usr/include/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x4030a068"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x4002e6c8" loc="323:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x4002e6c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x40758298" loc="99:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40758010"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x40758298"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x402f2dd8" loc="152:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x402f2dd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x40677688" loc="34:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x406772d0"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x40677688"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_uint32_t" ref="0x4044c200" loc="56:/usr/include/_G_config.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_uint32_t" ref="0x4044c200"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int64_t" ref="0x402e6010" loc="47:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x402e6010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x402e26b0" loc="39:/usr/include/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x402e26b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x40672730" loc="129:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x40673c98"/>
        <typename><typedef-ref name="serial_header_t" ref="0x40672730"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x4066b390" loc="40:/home/morten/workspace/tinyos/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x4066b1c8"/>
        <typename><typedef-ref name="TMilli" ref="0x4066b390"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_int16_t" ref="0x4044d798" loc="53:/usr/include/_G_config.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_int16_t" ref="0x4044d798"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_char" ref="0x402de8f8" loc="31:/usr/include/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x402de8f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x40af8378" loc="111:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x40af8378"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x40b0c068" loc="278:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x40b0c068"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x402ece50" loc="189:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__intptr_t" ref="0x402ece50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x402eca08" loc="185:/usr/include/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x402e6510"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x402eca08"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x40af8df0" loc="116:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x40af8df0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x402f7820" loc="78:/usr/include/sys/select.h">
      <type-tag size="I:128" alignment="I:1"><struct-ref ref="0x402f7658"/>
        <typename><typedef-ref name="fd_set" ref="0x402f7820"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x404a68c8" loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x402ecc30" loc="186:/usr/include/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x402ecc30"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x402e8010" loc="149:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__time_t" ref="0x402e8010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0x402ec4f8" loc="180:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ssize_t" ref="0x402ec4f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x4034a720" loc="38:/usr/include/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x4034a720"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x402efc18" loc="72:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x402efc18"/></typename>
      </type-int>
    </typedef>
    <typedef name="link_metadata_t" ref="0x4067ae78" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayer.h">
      <type-tag size="I:4" alignment="I:1"><struct-ref name="link_metadata_t" ref="0x4067a8e8"/>
        <typename><typedef-ref name="link_metadata_t" ref="0x4067ae78"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x40b0f818" loc="262:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b0f2c0"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x40b0f818"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x4044ca18" loc="180:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x4044ca18"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x401baba8" loc="68:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x401baba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x4002a028"  loc="NONE">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40025f48"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x402e2d58" loc="42:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x402e2d58"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x4066bc10" loc="42:/home/morten/workspace/tinyos/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x4066ba48"/>
        <typename><typedef-ref name="TMicro" ref="0x4066bc10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="timesync_relative_t" ref="0x40d68918" loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="timesync_relative_t" ref="0x40d68918"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x402ec010" loc="177:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x402ec010"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x402efe68" loc="77:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="nlink_t" ref="0x402efe68"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x405e2ed8" loc="60:/usr/include/time.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.c">
        <short>&#10; Implementation of all of the Hash-Based Learning primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the Hash-Based Learning primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clock_t" ref="0x405e2ed8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x40b0ddb8" loc="277:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x40b0ddb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x40302708" loc="136:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:1"><union-ref ref="0x403024e0"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x40302708"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x40503c08" loc="65:/home/morten/workspace/tinyos/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><struct-ref name="heap" ref="0x40503650"/>
        <typename><typedef-ref name="heap_t" ref="0x40503c08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x402e6ec8" loc="136:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x402e6ec8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x402a6018" loc="400:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x404cdb68" loc="61:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:1"><struct-ref name="sim_log_channel" ref="0x404cd380"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x404cdb68"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x402ea7b0" loc="37:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x402ea7b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x40302bb0" loc="144:/usr/include/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x40302bb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x402f0010" loc="153:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x402f0010"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x4066c3c0" loc="11:/home/morten/workspace/tinyos/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x4066c3c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x40b0fb48" loc="265:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b0f2c0"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x40b0fb48"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x401bb0f0" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x401bb0f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x402e4430" loc="144:/usr/include/bits/types.h">
      <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x402e4268"/>
        <typename><typedef-ref name="__fsid_t" ref="0x402e4430"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x40b0fdf0" loc="269:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x40b0fdf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x40b0d610" loc="272:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x40b0d610"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x401bd9d8" loc="111:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x401bd9d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="timestamp_metadata_t" ref="0x4067a0c8" loc="41:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeStampingLayer.h">
      <type-tag size="I:4" alignment="I:1"><struct-ref name="timestamp_metadata_t" ref="0x4067b878"/>
        <typename><typedef-ref name="timestamp_metadata_t" ref="0x4067a0c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int_least64_t" ref="0x401bae28" loc="73:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x401bae28"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x40b2db08" loc="324:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b2d8e0"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40b2db08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x402e5f08" loc="143:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x402e5f08"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x402ded50" loc="33:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x402ded50"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x40af8b78" loc="115:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x40af8b78"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x40b0db30" loc="276:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x40b0db30"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x404aea18" loc="51:/home/morten/workspace/tinyos/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:26" alignment="I:1"><struct-ref name="sim_event" ref="0x404ae7b0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x4061a340" loc="67:/home/morten/workspace/tinyos/tos/types/TinyError.h">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x4061a340"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x402f54f8" loc="24:/usr/include/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x402f54f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x40b17238" loc="178:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b17010"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x40b17238"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x402e8710" loc="153:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x402e8710"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x402e5130" loc="137:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ino_t" ref="0x402e5130"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_uint16_t" ref="0x4044de30" loc="55:/usr/include/_G_config.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_uint16_t" ref="0x4044de30"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x401ba728" loc="66:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x401ba728"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x404517e8" loc="49:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
        <typename><typedef-ref name="FILE" ref="0x404517e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x40331ec0" loc="737:/usr/include/stdlib.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x40331ec0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x402b6d88" loc="40:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:1"><struct-ref name="__locale_struct" ref="0x402b1ef8"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x402b6d88"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x40754bc8" loc="161:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x40754bc8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x402e5600" loc="139:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x402e5600"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0x402b4010" loc="43:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:1"><struct-ref name="__locale_struct" ref="0x402b1ef8"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x402b4010"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x40673a90" loc="121:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:1"><struct-ref name="radio_stats" ref="0x406744b0"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x40673a90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x402f25b0" loc="92:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x402f25b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x40b0b7b0" loc="291:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x40b0b7b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x40b0a010" loc="294:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x40b0a010"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x402ef9d8" loc="67:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x402ef9d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x402ef120" loc="41:/usr/include/sys/types.h">
      <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x402e4268"/>
        <typename><typedef-ref name="fsid_t" ref="0x402ef120"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x406625e0" loc="59:/home/morten/workspace/tinyos/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x406623f8"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x406625e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x407546d8" loc="158:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40754330"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x407546d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x401b84b8" loc="37:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x401b84b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x404cd168" loc="54:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.c">
      <type-tag size="I:8" alignment="I:1"><struct-ref name="sim_log_output" ref="0x404cec68"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x404cd168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x402f8cf0" loc="49:/usr/include/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x402f8cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x402f5f28" loc="38:/usr/include/sys/select.h">
      <type-tag size="I:128" alignment="I:1"><struct-ref ref="0x402f5ae8"/>
        <typename><typedef-ref name="sigset_t" ref="0x402f5f28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ieee154_saddr_t" ref="0x408a9048" loc="36:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ieee154_saddr_t" ref="0x408a9048"/></typename>
      </type-int>
    </typedef>
    <typedef name="T32khz" ref="0x4066b7d0" loc="41:/home/morten/workspace/tinyos/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x4066b608"/>
        <typename><typedef-ref name="T32khz" ref="0x4066b7d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="resource_client_id_t" ref="0x409a4730" loc="33:/home/morten/workspace/tinyos/tos/types/Resource.h">
      <documentation loc="33:/home/morten/workspace/tinyos/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="resource_client_id_t" ref="0x409a4730"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_short" ref="0x402ea588" loc="36:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x402ea588"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x406770c8" loc="30:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioMsg.h">
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x406790e8"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x406770c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x4002e260" loc="149:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ptrdiff_t" ref="0x4002e260"/></typename>
      </type-int>
    </typedef>
    <typedef name="blkcnt_t" ref="0x402fe5f0" loc="235:/usr/include/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blkcnt_t" ref="0x402fe5f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x401ba230" loc="52:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401ba230"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x402a6968" loc="402:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x402a6968"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x402a4728" loc="389:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x401be0e8" loc="129:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uintptr_t" ref="0x401be0e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x402eedf8" loc="117:/usr/include/sys/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x402eedf8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x402e2010" loc="34:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_long" ref="0x402e2010"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x401bdc78" loc="113:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x401bdc78"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x40b0d388" loc="271:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x40b0d388"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x402e2900" loc="40:/usr/include/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x402e2900"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x402ea338" loc="35:/usr/include/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x402ea338"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x4074adc0" loc="120:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x4074adc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x401bbe08" loc="97:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast16_t" ref="0x401bbe08"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x40b0d8a8" loc="275:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x40b0d8a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x40b0c578" loc="280:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x40b0c578"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x404645b0" loc="91:/usr/include/stdio.h">
      <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x4044eb70"/>
        <typename><typedef-ref name="fpos_t" ref="0x404645b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x40b10218" loc="244:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b11c30"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x40b10218"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x402d4168" loc="102:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x402cff10"/>
        <typename><typedef-ref name="div_t" ref="0x402d4168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="test_msg_t" ref="0x4069f370" loc="13:src/PacketLinkTest.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="test_msg" ref="0x4048fef0"/>
        <typename><typedef-ref name="test_msg_t" ref="0x4069f370"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x405a0270" loc="6:/home/morten/workspace/tinyos/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:1"><struct-ref name="sim_gain_noise" ref="0x405a1db8"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x405a0270"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x4002e498" loc="211:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stddef.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x402e2468" loc="38:/usr/include/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x402e2468"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x402f5cb0" loc="32:/usr/include/bits/sigset.h">
      <type-tag size="I:128" alignment="I:1"><struct-ref ref="0x402f5ae8"/>
        <typename><typedef-ref name="__sigset_t" ref="0x402f5cb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x40af80f8" loc="110:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40afa970"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x40af80f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x402ec788" loc="184:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x402ec788"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x402e53c0" loc="138:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x402e53c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x4066d8e0" loc="6:/home/morten/workspace/tinyos/tos/types/AM.h">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x40684db8" loc="53:/home/morten/workspace/tinyos/tos/lib/tossim/platform_message.h">
      <type-tag size="I:12" alignment="I:1"><union-ref name="message_header" ref="0x406847e8"/>
        <typename><typedef-ref name="message_header_t" ref="0x40684db8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x40596010" loc="57:/home/morten/workspace/tinyos/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:1"><struct-ref name="gain_entry" ref="0x40598930"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x40596010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x4066c620" loc="12:/home/morten/workspace/tinyos/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x4066c620"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x402a1e50" loc="387:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x402a1e50"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x40754950" loc="160:/home/morten/workspace/tinyos/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x40754950"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x401bb468" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x401bb468"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x40458258" loc="384:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x40458258"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0x401b8db8" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x402f22e8" loc="76:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="time_t" ref="0x402f22e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x402a3918" loc="395:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x402a3918"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x402d4d60" loc="122:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:1"><struct-ref ref="0x402d4b38"/>
        <typename><typedef-ref name="lldiv_t" ref="0x402d4d60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="timesync_absolute_t" ref="0x40d68c48" loc="48:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="timesync_absolute_t" ref="0x40d68c48"/></typename>
      </type-int>
    </typedef>
    <typedef name="_IO_FILE" ref="0x4045c498" loc="341:/usr/include/libio.h">
      <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x4045c498"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x402fc480" loc="57:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:36" alignment="I:1"><union-ref ref="0x402fc258"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x402fc480"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x40459c98" loc="381:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x402e5cf8"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x40459c98"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x402ee4f0" loc="100:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x402ee4f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x402f2830" loc="104:/usr/include/time.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x402f2830"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x40306dc8" loc="195:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:1"><union-ref ref="0x40306ba0"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x40306dc8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x40af85f0" loc="112:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x40af85f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x402e62a0" loc="48:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x402e62a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x402e6a68" loc="134:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x402e6a68"/></typename>
      </type-int>
    </typedef>
    <typedef name="lpl_metadata_t" ref="0x4067a6b0" loc="41:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/LowPowerListeningLayer.h">
      <type-tag size="I:2" alignment="I:1"><struct-ref name="lpl_metadata_t" ref="0x4067a2f8"/>
        <typename><typedef-ref name="lpl_metadata_t" ref="0x4067a6b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x402a7258" loc="397:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x402a7258"/></typename>
      </type-int>
    </typedef>
    <typedef name="va_list" ref="0x404c7e48" loc="102:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stdarg.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40025f48"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x404c7e48"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__off_t" ref="0x402e5a78" loc="141:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__off_t" ref="0x402e5a78"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x401bbbe0" loc="91:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x401bbbe0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x402e7520" loc="169:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blkcnt_t" ref="0x402e7520"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x40676308" loc="50:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimRadioMsg.h">
      <type-tag size="I:10" alignment="I:1"><struct-ref name="tossim_metadata" ref="0x406778a0"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x40676308"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_id_t" ref="0x4066c168" loc="10:/home/morten/workspace/tinyos/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x4066c168"/></typename>
      </type-int>
    </typedef>
    <typedef name="ieee154_laddr_t" ref="0x408a9308" loc="37:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x408905d0"/>
        <typename><typedef-ref name="ieee154_laddr_t" ref="0x408a9308"/></typename>
      </type-tag>
    </typedef>
    <typedef name="intmax_t" ref="0x401be348" loc="139:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x401be348"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x40b11e58" loc="241:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b11c30"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40b11e58"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x40af88f8" loc="114:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40afa970"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x40af88f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x406845d8" loc="138:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x40684228"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x406845d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x402e7a58" loc="173:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x402e7a58"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x401ba010" loc="50:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401ba010"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x4044ed98" loc="26:/usr/include/_G_config.h">
      <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x4044eb70"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x4044ed98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x402f0378" loc="201:/usr/include/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x402f0378"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x40b0d100" loc="270:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x40b0d100"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x40b0b298" loc="287:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x40b0b298"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x4066dc80" loc="7:/home/morten/workspace/tinyos/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x4066dc80"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x402e7048" loc="161:/usr/include/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x402e7048"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x40683a50" loc="61:/home/morten/workspace/tinyos/tos/lib/tossim/platform_message.h">
      <type-tag size="I:10" alignment="I:1"><union-ref name="message_metadata" ref="0x40683630"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x40683a50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x40459360" loc="372:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0x402ec4f8"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x40459360"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x402f7a90" loc="85:/usr/include/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fd_mask" ref="0x402f7a90"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x402a3030" loc="391:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x404c54a8" loc="10:/home/morten/workspace/tinyos/tos/lib/tossim/hashtable.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x404c5240"/>
        <typename><typedef-ref name="hashtable_t" ref="0x404c54a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x402ef7b0" loc="62:/usr/include/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x402ef7b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x402e67a0" loc="57:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x402e67a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__swblk_t" ref="0x402e8958" loc="154:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__swblk_t" ref="0x402e8958"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x402f0a18" loc="203:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x402f0a18"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x402feb10" loc="243:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x402feb10"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x401bd538" loc="104:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x401bd538"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim64_t" ref="0x402e4b70" loc="147:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x402e4b70"/></typename>
      </type-int>
    </typedef>
    <typedef name="__key_t" ref="0x402e8b68" loc="155:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x402e8b68"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x402e8278" loc="150:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x402e8278"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x40af6010" loc="130:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40af7d10"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x40af6010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x40b0b010" loc="286:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x40b0b010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x4045b8f8" loc="364:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0x402ec4f8"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x4045b8f8"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x402a19f8" loc="386:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x402a19f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x401be9c0" loc="35:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x401be9c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x40b0ba30" loc="292:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x40b0ba30"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0x402f5110" loc="206:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="register_t" ref="0x402f5110"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x4030ae30" loc="216:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:1"><union-ref ref="0x4030ac08"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x4030ae30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x40b085c0" loc="309:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b08398"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40b085c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x40afab98" loc="108:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/morten/workspace/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40afa970"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40afab98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x402ee958" loc="110:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ssize_t" ref="0x402ee958"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x402e6510" loc="56:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x402e6510"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x401b8938" loc="39:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x401ba4a0" loc="59:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x401ba4a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x402ea9f0" loc="38:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_long" ref="0x402ea9f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x40750678" loc="94:/home/morten/workspace/tinyos/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x40750678"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x4042e878" loc="302:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x4042fdb0"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x4042e878"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x402a76d8" loc="398:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x402a76d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x402a3d98" loc="396:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x402a3d98"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x402fed98" loc="50:/usr/include/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_t" ref="0x402fed98"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x402e72b0" loc="164:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blksize_t" ref="0x402e72b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x401c4128" loc="292:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:1"><struct-ref ref="0x401beee0"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x401c4128"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x402e5848" loc="140:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__nlink_t" ref="0x402e5848"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x40b14048" loc="205:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b16aa8"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x40b14048"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__id_t" ref="0x402e4d98" loc="148:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x402e4d98"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least32_t" ref="0x401bb6c0" loc="79:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x401bb6c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x4044e6f8" loc="95:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x4044e4d0"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x4044e6f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x40683408" loc="57:/home/morten/workspace/tinyos/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x40683010"/>
        <typename><typedef-ref name="message_footer_t" ref="0x40683408"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x40b0cd20" loc="285:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x40b0cd20"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x402e77c0" loc="170:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x402e77c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x402fe880" loc="239:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x402fe880"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x402ee2c8" loc="88:/usr/include/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="off_t" ref="0x402ee2c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x402deb40" loc="32:/usr/include/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x402deb40"/></typename>
      </type-int>
    </typedef>
    <typedef name="ieee_eui64_t" ref="0x40890a60" loc="44:/home/morten/workspace/tinyos/tos/types/IeeeEui64.h">
      <documentation loc="34:/home/morten/workspace/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x408905d0"/>
        <typename><typedef-ref name="ieee_eui64_t" ref="0x40890a60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int64_t" ref="0x402a42d0" loc="388:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x402a42d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x402eac30" loc="39:/usr/include/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x402eac30"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x402e84e8" loc="151:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__suseconds_t" ref="0x402e84e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x4030a750" loc="210:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:20" alignment="I:1"><union-ref ref="0x4030a528"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x4030a750"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x40b0f4e8" loc="259:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b0f2c0"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x40b0f4e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x402e2240" loc="37:/usr/include/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x402e2240"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x4044d460" loc="31:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:1"><struct-ref ref="0x4044d238"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x4044d460"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x402e8db0" loc="158:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x402e8db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x401bd788" loc="110:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast16_t" ref="0x401bd788"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x40b0ca98" loc="284:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x40b0ca98"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x401be5e0" loc="141:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x401be5e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x4066df18" loc="8:/home/morten/workspace/tinyos/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x4066df18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x402e4678" loc="145:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clock_t" ref="0x402e4678"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x402a4ba0" loc="390:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x402e48d8" loc="146:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__rlim_t" ref="0x402e48d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x402eae98" loc="40:/usr/include/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x402eae98"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x401bd048" loc="98:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x401bd048"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x401ba978" loc="67:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x401ba978"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x402d4730" loc="110:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x402d4508"/>
        <typename><typedef-ref name="ldiv_t" ref="0x402d4730"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x402f0d68" loc="204:/usr/include/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x402f0d68"/></typename>
      </type-int>
    </typedef>
    <typedef name="flags_metadata_t" ref="0x4067b608" loc="42:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayer.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref name="flags_metadata_t" ref="0x4067b258"/>
        <typename><typedef-ref name="flags_metadata_t" ref="0x4067b608"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int16_t" ref="0x402f06c8" loc="202:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x402f06c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x40b19ea8" loc="163:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b19c80"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b19ea8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="timesync_footer_t" ref="0x40d659c8" loc="58:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h">
      <type-tag size="I:5" alignment="I:1"><nx_struct-ref name="timesync_footer_t" ref="0x40d68e88"/>
        <typename><typedef-ref name="timesync_footer_t" ref="0x40d659c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="activemessage_header_t" ref="0x4067b010" loc="43:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayer.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="activemessage_header_t" ref="0x40668b78"/>
        <typename><typedef-ref name="activemessage_header_t" ref="0x4067b010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x40b14390" loc="208:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b16aa8"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x40b14390"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x401bb968" loc="84:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x401bb968"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x402e2b28" loc="41:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x402e2b28"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_int32_t" ref="0x4044dad0" loc="54:/usr/include/_G_config.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_int32_t" ref="0x4044dad0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x403066d0" loc="189:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:1"><union-ref ref="0x40306448"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x403066d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x4034a940" loc="40:/usr/include/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="double_t" ref="0x4034a940"/></typename>
      </type-float>
    </typedef>
    <typedef name="__fd_mask" ref="0x402f8f28" loc="55:/usr/include/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fd_mask" ref="0x402f8f28"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x404a7ec0" loc="65:/home/morten/workspace/tinyos/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x402e7d18" loc="174:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x402e7d18"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x4054f0c8" loc="71:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:477" alignment="I:1"><struct-ref name="sim_noise_hash_t" ref="0x405514c8"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x4054f0c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x40451a88" loc="65:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:1"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
        <typename><typedef-ref name="__FILE" ref="0x40451a88"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x4044c568" loc="40:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stdarg.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40025f48"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x4044c568"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x402a7b58" loc="399:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x402a7b58"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x402e5cf8" loc="142:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x402e5cf8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x40b0bcb0" loc="293:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x40b0bcb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x402ec2d0" loc="178:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x402ec2d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x40b0c810" loc="283:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x40b0c810"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x40b0b520" loc="288:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x40b0b520"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x401b8b78" loc="44:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x401b8b78"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x401b8748" loc="38:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x401b8748"/></typename>
      </type-int>
    </typedef>
    <typedef name="ieee154_addr_t" ref="0x408a9ec0" loc="45:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x408a9c98"/>
        <typename><typedef-ref name="ieee154_addr_t" ref="0x408a9ec0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ulong" ref="0x402f2bb0" loc="151:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ulong" ref="0x402f2bb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x401bd2c0" loc="100:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x401bd2c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x402ee0a0" loc="82:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x402ee0a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x40682a30" loc="19:/home/morten/workspace/tinyos/tos/types/message.h">
      <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40683c30"/>
        <typename><typedef-ref name="message_t" ref="0x40682a30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x402a34a8" loc="392:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x402a34a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x40af5788" loc="146:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40af5560"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40af5788"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x402ef360" loc="46:/usr/include/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x402ef360"/></typename>
      </type-int>
    </typedef>
    <typedef name="ieee154_header_t" ref="0x40668248" loc="45:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.h">
      <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0x40669748"/>
        <typename><typedef-ref name="ieee154_header_t" ref="0x40668248"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__socklen_t" ref="0x402ea0d8" loc="192:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x402ea0d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x4050b168" loc="65:/home/morten/workspace/tinyos/tos/lib/tossim/heap.c">
      <type-tag size="I:12" alignment="I:1"><struct-ref name="node" ref="0x4050dce0"/>
        <typename><typedef-ref name="node_t" ref="0x4050b168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x402e6c98" loc="135:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x402e6c98"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x402a15a0" loc="385:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x402a15a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x4054d728" loc="83:/home/morten/workspace/tinyos/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:62" alignment="I:1"><struct-ref name="sim_noise_node_t" ref="0x4054f3b0"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x4054d728"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x402ee708" loc="105:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x402ee708"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x402ff298" loc="104:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:24" alignment="I:1"><union-ref ref="0x402ff010"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x402ff298"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x40548130" loc="122:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x40548130"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x40302048" loc="130:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:1"><union-ref ref="0x40304da8"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x40302048"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ieee154_panid_t" ref="0x40890d80" loc="35:/home/morten/workspace/tinyos/tos/types/Ieee154.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ieee154_panid_t" ref="0x40890d80"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_key_t" ref="0x40302968" loc="140:/usr/include/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x40302968"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x402ef588" loc="50:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ino_t" ref="0x402ef588"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x402eeba8" loc="116:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x402eeba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x4053c238" loc="63:/usr/include/sys/time.h">
      <documentation loc="32:/home/morten/workspace/tinyos/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x4053c238"/></typename>
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="timezone" ref="0x4053dbb0"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x402a64c0" loc="401:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x402a64c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x402f2048" loc="123:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x402f2048"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x402ff960" loc="110:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:1"><union-ref ref="0x402ff738"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x402ff960"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_slist_t" ref="0x402fcbb8" loc="70:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:1"><struct-ref name="__pthread_internal_slist" ref="0x402fc708"/>
        <typename><typedef-ref name="__pthread_slist_t" ref="0x402fcbb8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x40676598" loc="83:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/morten/workspace/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x40676598"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x40b16cd0" loc="202:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b16aa8"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40b16cd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TRadio" ref="0x4066be38" loc="10:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/RadioConfig.h">
      <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x4066ba48"/>
        <typename><typedef-ref name="TRadio" ref="0x4066be38"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x40b0c2f0" loc="279:/home/morten/workspace/tinyos/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x40b0c2f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_grantedTask" ref="0x409c0208" loc="69:/home/morten/workspace/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_send" ref="0x40aacd48" loc="78:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x40aff130" loc="74:/home/morten/workspace/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x40c35048" loc="71:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x40c2a188" loc="66:/home/morten/workspace/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:9" alignment="I:1"><struct-ref scoped="" ref="0x40c2bdf8"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x40c2a188"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_stateDoneTask" ref="0x40ca00a8" loc="144:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_deliverTask" ref="0x40c7bdb0" loc="322:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendTask" ref="0x40c7a6e0" loc="189:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_tasklet" ref="0x40c94ed8" loc="47:/home/morten/workspace/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-array elements="I:7" size="I:28" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_calcNextRandom" ref="0x40cd5c48" loc="78:/home/morten/workspace/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stateDoneTask" ref="0x40dedb50" loc="119:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_ccaDoneTask" ref="0x40ded238" loc="322:/home/morten/workspace/tinyos/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x40e063d8" loc="64:/home/morten/workspace/tinyos/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:47" alignment="I:1"><struct-ref name="receive_message" scoped="" ref="0x40e060f8"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40e063d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x40eb0968" loc="57:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:4" alignment="I:1"><struct-ref scoped="" ref="0x40eb07a0"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x40eb0968"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x40eb46e8" loc="169:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x40ef4010" loc="126:/home/morten/workspace/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
