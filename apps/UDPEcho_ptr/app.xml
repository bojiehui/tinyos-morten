<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="UDPEchoC" loc="36:UDPEchoC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/home/bo/tinyos-morten/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/bo/tinyos-morten/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/bo/tinyos-morten/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/bo/tinyos-morten/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/home/bo/tinyos-morten/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/home/bo/tinyos-morten/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/home/bo/tinyos-morten/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/home/bo/tinyos-morten/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/home/bo/tinyos-morten/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/bo/tinyos-morten/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/bo/tinyos-morten/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/home/bo/tinyos-morten/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="TossimRadioC" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioC.nc">
      <configuration/>
    </component>
    <component qname="TossimRadioP" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioP.nc">
      <module/>
    </component>
    <component qname="TossimRadioC.RadioAlarmC" loc="37(TossimRadioC.RadioAlarmC):/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmC.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmC.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.RadioAlarmC.RadioAlarmP" loc="37(TossimRadioC.RadioAlarmC.RadioAlarmP):/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.ActiveMessageLayerC" loc="35(TossimRadioC.ActiveMessageLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(TossimRadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/bo/tinyos-morten/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/bo/tinyos-morten/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimRadioC.AutoResourceAcquireLayerC" loc="35(TossimRadioC.AutoResourceAcquireLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.SendResourceC" loc="83(TossimRadioC.SendResourceC):/home/bo/tinyos-morten/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/bo/tinyos-morten/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.SendResourceC.Queue" loc="42(TossimRadioC.SendResourceC.Queue):/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.SendResourceC.Arbiter" loc="49(TossimRadioC.SendResourceC.Arbiter):/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.Ieee154MessageLayerC" loc="35(TossimRadioC.Ieee154MessageLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.TinyosNetworkLayerC" loc="50(TossimRadioC.TinyosNetworkLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.Ieee154PacketLayerC" loc="35(TossimRadioC.Ieee154PacketLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(TossimRadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.UniqueLayerC" loc="35(TossimRadioC.UniqueLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.UniqueLayerC.UniqueLayerP" loc="38(TossimRadioC.UniqueLayerC.UniqueLayerP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="TossimRadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(TossimRadioC.UniqueLayerC.NeighborhoodFlagC):/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.LowPowerListeningLayerC" loc="35(TossimRadioC.LowPowerListeningLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(TossimRadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.PacketLinkLayerC" loc="73(TossimRadioC.PacketLinkLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(TossimRadioC.PacketLinkLayerC.PacketLinkLayerP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.PacketLinkLayerC.DelayTimerC" loc="44(TossimRadioC.PacketLinkLayerC.DelayTimerC):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/bo/tinyos-morten/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/bo/tinyos-morten/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/bo/tinyos-morten/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4066b808"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b46428"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4066b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4066b808"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/bo/tinyos-morten/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/bo/tinyos-morten/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4066b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.MessageBufferLayerC" loc="35(TossimRadioC.MessageBufferLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(TossimRadioC.MessageBufferLayerC.MessageBufferLayerP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="TossimRadioC.TrafficMonitorLayerC" loc="35(TossimRadioC.TrafficMonitorLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.CollisionAvoidanceLayerC" loc="35(TossimRadioC.CollisionAvoidanceLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(TossimRadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/bo/tinyos-morten/tos/system/RandomC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/bo/tinyos-morten/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/bo/tinyos-morten/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimRadioC.SoftwareAckLayerC" loc="38(TossimRadioC.SoftwareAckLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.CsmaLayerC" loc="35(TossimRadioC.CsmaLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerC.nc">
      <instance number="0">
        <component-ref qname="CsmaLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.CsmaLayerC.CsmaLayerP" loc="38(TossimRadioC.CsmaLayerC.CsmaLayerP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <instance number="0">
        <component-ref qname="CsmaLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimRadioC.TimeStampingLayerC" loc="37(TossimRadioC.TimeStampingLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimRadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(TossimRadioC.TimeStampingLayerC.TimeStampingLayerP):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/bo/tinyos-morten/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/bo/tinyos-morten/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimRadioC.MetadataFlagsLayerC" loc="38(TossimRadioC.MetadataFlagsLayerC):/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimDriverLayerC" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerC.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimDriverLayerC.Driver" loc="39(TossimDriverLayerC.Driver):/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <instance number="0">
        <component-ref qname="TossimDriverLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TossimDriverLayerC.RadioAlarmC" loc="37(TossimDriverLayerC.RadioAlarmC):/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmC.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmC.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TossimDriverLayerC.RadioAlarmC.RadioAlarmP" loc="37(TossimDriverLayerC.RadioAlarmC.RadioAlarmP):/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="CpmModelC" loc="52:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AMPacketInjectorP" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/AMPacketInjectorP.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/AMPacketInjectorP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   December 22 2010&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/bo/tinyos-morten/tos/system/LedsC.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/bo/tinyos-morten/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/bo/tinyos-morten/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/bo/tinyos-morten/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UDPEchoP" loc="44:UDPEchoP.nc">
      <module/>
    </component>
    <component qname="UDPEchoC.TimerMilliC" loc="44(UDPEchoC.TimerMilliC):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC" loc="32:/home/bo/tinyos-morten/tos/lib/net/blip/IPStackC.nc">
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="5:/home/bo/tinyos-morten/tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="16:/home/bo/tinyos-morten/tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:/home/bo/tinyos-morten/tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:/home/bo/tinyos-morten/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPAddressC" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="26:/home/bo/tinyos-morten/tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="28:/home/bo/tinyos-morten/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="IPDispatchC" loc="30:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchC.nc">
      <documentation loc="23:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchC.nc">
        <short>&#10;&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/home/bo/tinyos-morten/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/bo/tinyos-morten/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154MessageC" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/Ieee154MessageC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketInjectorP" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/Ieee154PacketInjectorP.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/Ieee154PacketInjectorP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @author Markus Becker (IEEE 154 version)&#10; @date   December 22 2010&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchC.TimerMilliC" loc="44(IPDispatchC.TimerMilliC):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):/home/bo/tinyos-morten/tos/system/PoolC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
            <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):/home/bo/tinyos-morten/tos/system/PoolP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4124d978"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):/home/bo/tinyos-morten/tos/system/PoolC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:4"><struct-ref name="send_entry" ref="0x40f34010"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):/home/bo/tinyos-morten/tos/system/PoolP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4124d978"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):/home/bo/tinyos-morten/tos/system/QueueC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:12" alignment="I:4"><struct-ref name="send_entry" ref="0x40f34010"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):/home/bo/tinyos-morten/tos/system/PoolC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:4"><struct-ref name="send_info" ref="0x40eff538"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):/home/bo/tinyos-morten/tos/system/PoolP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4124d978"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="ICMPCoreP" loc="47:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <module/>
    </component>
    <component qname="IPPacketP" loc="7:/home/bo/tinyos-morten/tos/lib/net/blip/IPPacketP.nc">
      <module/>
    </component>
    <component qname="IPStackC.TimerMilliC" loc="44(IPStackC.TimerMilliC):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NoDhcpC" loc="42:/home/bo/tinyos-morten/tos/lib/net/blip/dhcp/NoDhcpC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/lib/net/blip/dhcp/NoDhcpC.nc">
        <short>&#10; Component for doing compile-time address allocation.</short>
        <long>&#10; Component for doing compile-time address allocation.  Wired by the&#10; stack, sets a static address based on IN6_PREFIX and TOS_NODE_ID on&#10; boot.  Useful for development or of you want to hard-code addresses.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UDPEchoC.UDPSend" loc="2(UDPEchoC.UDPSend):/home/bo/tinyos-morten/tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="4:/home/bo/tinyos-morten/tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="5:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="UDPEchoC.UDPReceive" loc="2(UDPEchoC.UDPReceive):/home/bo/tinyos-morten/tos/lib/net/blip/UdpSocketC.nc">
      <instance number="1">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC" loc="3:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingC.nc">
      <configuration/>
    </component>
    <component qname="RPLRankC" loc="73:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="75:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="39:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="44(RPLRoutingEngineC.Routing):/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="41(RPLDAORoutingEngineC.DAORouting):/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):/home/bo/tinyos-morten/tos/system/QueueC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x413152e0"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x41315568"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):/home/bo/tinyos-morten/tos/system/PoolC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x413152e0"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x41315568"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):/home/bo/tinyos-morten/tos/system/PoolP.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4124d978"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLOF0P" loc="1:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <module/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="UDPShellC" loc="25:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellC.nc">
      <configuration/>
    </component>
    <component qname="UDPShellC.UdpSocketC" loc="2(UDPShellC.UdpSocketC):/home/bo/tinyos-morten/tos/lib/net/blip/UdpSocketC.nc">
      <instance number="2">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UDPShellP" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <module/>
    </component>
    <component qname="ICMPPingC" loc="41:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPPingC.nc">
        <short>&#10; Provide an interface for pinging other motes.</short>
        <long>&#10; Provide an interface for pinging other motes.&#10;&#10; Replying to ICMP echos is built into all motes running blip;&#10; sending requests requires a component like this one.&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ICMPPingP" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <module/>
    </component>
    <component qname="ICMPPingC.TimerMilliC" loc="44(ICMPPingC.TimerMilliC):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RouteCmdC" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/shell/RouteCmdC.nc">
      <configuration/>
    </component>
    <component qname="RouteCmdP" loc="37:/home/bo/tinyos-morten/tos/lib/net/blip/shell/RouteCmdP.nc">
      <module/>
    </component>
    <component qname="RouteCmdC.ShellCommandC" loc="2(RouteCmdC.ShellCommandC):/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommandC.nc">
      <instance number="0">
        <component-ref qname="ShellCommandC"/>
        <arguments>
          <value cst="S:route">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RouteCmdC.ShellCommandC.ShellCommandP" loc="2(RouteCmdC.ShellCommandC.ShellCommandP):/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommandP.nc">
      <instance number="0">
        <component-ref qname="ShellCommandP"/>
        <arguments>
          <value cst="U:">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RouteCmdC.TimerMilliC" loc="44(RouteCmdC.TimerMilliC):/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ShellCommandC" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommandC.nc" abstract="">
      <parameters>
        <constant name="cmd_name" ref="0x41556088" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommandC.nc">
          <component-ref qname="ShellCommandC"/>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TossimDriverLayerP" loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b46428" loc="23:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b46428"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b465e8" loc="23:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4077e358" loc="41:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4077e580" loc="42:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4077e7a8" loc="43:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4077e998" loc="44:/home/bo/tinyos-morten/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ShellCommandP" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommandP.nc" abstract="">
      <parameters>
        <constant name="cmd_name" ref="0x41555478" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommandP.nc">
          <component-ref qname="ShellCommandP"/>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="41:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineP" loc="44:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x409a75a8" loc="42:/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/bo/tinyos-morten/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x4124d978" loc="41:/home/bo/tinyos-morten/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4124d978"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x4124db98" loc="41:/home/bo/tinyos-morten/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/bo/tinyos-morten/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/bo/tinyos-morten/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x41249eb0" loc="53:/home/bo/tinyos-morten/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41249eb0"/></type-var>
        </typedef>
        <constant name="size" ref="0x412460b8" loc="53:/home/bo/tinyos-morten/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CsmaLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x407c6068" loc="42:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x407c6290" loc="43:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x407c64b8" loc="44:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x407c66a8" loc="45:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c64e48" loc="46:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c64e48"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40c61068" loc="46:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4076e010" loc="40:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4076e228" loc="40:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4076e440" loc="40:/home/bo/tinyos-morten/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b23578" loc="46:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b23578"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x414d5ef8" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/bo/tinyos-morten/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x412711b8" loc="42:/home/bo/tinyos-morten/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x412711b8"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x412713e0" loc="42:/home/bo/tinyos-morten/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b686b8" loc="23:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b686b8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b68878" loc="23:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CsmaLayerP" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/bo/tinyos-morten/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/bo/tinyos-morten/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c8e618" loc="46:/home/bo/tinyos-morten/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c8e618"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmP" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc" abstract="">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmC.nc" abstract="">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmC.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/bo/tinyos-morten/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/bo/tinyos-morten/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x409ac7e8" loc="83:/home/bo/tinyos-morten/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="ForwardingEvents" loc="5:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x40f8f010" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="15:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @iph the ipv6 header of the packet&#10; @rhdr a routing header in the packet, or NULL if not present&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="V:" alignment="V:"><struct-ref name="ip6_route" ref="0x40f21618"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x40f90918" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="rhdr" ref="0x40f90b80" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="V:" alignment="V:"><struct-ref name="ip6_route" ref="0x40f21618"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x40f90e08" loc="30:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x40f903f8" loc="12:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x40f90010" loc="12:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x40f90298" loc="13:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x40f8fa20" loc="39:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="32:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per link frame sent to an address in the routing table.</short>
          <long>&#10; Signaled once per link frame sent to an address in the routing table.&#10;&#10; (isn't signaled for packets which don't have an entry in the&#10; routing table.)  Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:8" alignment="I:4"><struct-ref name="send_info" ref="0x40eff538"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40f8f668" loc="39:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x40f8f8c0" loc="39:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:8" alignment="I:4"><struct-ref name="send_info" ref="0x40eff538"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/home/bo/tinyos-morten/tos/lib/net/RootControl.nc">
      <documentation loc="35:/home/bo/tinyos-morten/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x40f65038" loc="43:/home/bo/tinyos-morten/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x40f69870" loc="41:/home/bo/tinyos-morten/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x40f69c68" loc="42:/home/bo/tinyos-morten/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/bo/tinyos-morten/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x409a9d30" loc="53:/home/bo/tinyos-morten/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/bo/tinyos-morten/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x409a6328" loc="61:/home/bo/tinyos-morten/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/bo/tinyos-morten/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40ce1238" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ce10e0" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40ce4c08" loc="44:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40859168" loc="113:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40859010" loc="113:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40859eb0" loc="138:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40859d58" loc="138:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40840860" loc="104:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40859678" loc="130:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/bo/tinyos-morten/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/bo/tinyos-morten/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/bo/tinyos-morten/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x409a8f28" loc="65:/home/bo/tinyos-morten/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/bo/tinyos-morten/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x409a8a68" loc="59:/home/bo/tinyos-morten/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/bo/tinyos-morten/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/bo/tinyos-morten/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/bo/tinyos-morten/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x4105e010" loc="48:/home/bo/tinyos-morten/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/bo/tinyos-morten/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40885010"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x408854a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x408cab10" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4087b978" loc="35:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4087b978"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4087bae0" loc="35:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4087bae0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40878cd8" loc="63:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4087bae0"/></type-var>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40878b80" loc="63:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40891790" loc="70:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40891638" loc="70:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40878188" loc="49:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40878030" loc="49:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408772a0" loc="78:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4087bae0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40891ee0" loc="78:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40877140" loc="78:/home/bo/tinyos-morten/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4087bae0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x408c7898" loc="79:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="75:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x408c8840" loc="61:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x408b05d0" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x408b0c98" loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b0b40" loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x408c7de8" loc="84:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="81:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x408c8e30" loc="67:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408c8350" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c81f8" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x408c7378" loc="73:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x40fafe00" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x40faf860" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x40fafac0" loc="19:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x40fafc98" loc="20:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40fabd78" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x40fab7b8" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40fab998" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x40fabc10" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40fab3c0" loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:8" alignment="I:4"><struct-ref name="send_info" ref="0x40eff538"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x40fab268" loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:8" alignment="I:4"><struct-ref name="send_info" ref="0x40eff538"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x408bdc70" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bdb18" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x408daa00" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408da8a8" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x408bff00" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bfda8" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408bf168" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bf010" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408bd6a8" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bd340" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408bd548" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408bf930" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bf5c8" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408bf7d0" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x408da428" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408da0c8" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408da2c8" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/bo/tinyos-morten/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/bo/tinyos-morten/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40735ae8" loc="60:/home/bo/tinyos-morten/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/bo/tinyos-morten/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/bo/tinyos-morten/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x4084e638" loc="59:/home/bo/tinyos-morten/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/bo/tinyos-morten/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4084e2c0" loc="59:/home/bo/tinyos-morten/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4084e4d8" loc="59:/home/bo/tinyos-morten/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x408726d8" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408726d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x408819a0" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881848" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40881380" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408726d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881228" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40872d50" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40872bf8" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40880170" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408726d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881dd0" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40880010" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408726d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41076628" loc="50:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41076628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x410ad2e0" loc="97:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
        <documentation loc="91:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41076628"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x41072548" loc="80:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
        <documentation loc="74:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x41076ac8" loc="61:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
        <documentation loc="52:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x41072b50" loc="89:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
        <documentation loc="82:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41076628"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x410729f8" loc="89:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41076628"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x41072010" loc="72:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
        <documentation loc="63:/home/bo/tinyos-morten/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/bo/tinyos-morten/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x406a0f20" loc="67:/home/bo/tinyos-morten/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/bo/tinyos-morten/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4069f450" loc="75:/home/bo/tinyos-morten/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/bo/tinyos-morten/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x40b76700" loc="38:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x40b76bd0" loc="44:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40b762e8" loc="32:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40b750c8" loc="50:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40b59800" loc="21:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b41738"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40b41960"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40b59df0" loc="27:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b41738"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40b41960"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40b59c98" loc="27:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b41738"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40b41960"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40aa7bc0" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40aa7a68" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40aa6038" loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40aa7168" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40aa7010" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40aa7690" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40aa7538" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x408c2490" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x408c2a98" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x408c0020" loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c1eb0" loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x408c1200" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c10a8" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x408c18f8" loc="60:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c17a0" loc="60:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x408e4988" loc="60:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x408e4168" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="tradio_size" ref="0x40669560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x408e4010" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="tradio_size" ref="0x40669560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408e4590" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x408d8a58" loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x408e4e00" loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="tradio_size" ref="0x40669560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="newParent" ref="0x413d1648" loc="42:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x413d1298" loc="41:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x4138ce40" loc="40:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/bo/tinyos-morten/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/bo/tinyos-morten/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4087c4c8" loc="53:/home/bo/tinyos-morten/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4087c4c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4087c9a8" loc="61:/home/bo/tinyos-morten/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/bo/tinyos-morten/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40852988" loc="65:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40852830" loc="65:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40867370" loc="78:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40867218" loc="78:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40865370" loc="126:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40865010" loc="126:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408651f0" loc="126:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408669a8" loc="106:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40866010" loc="94:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40867c90" loc="94:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40867e70" loc="94:/home/bo/tinyos-morten/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40ca6928" loc="44:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40ca3390" loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40ca39b8" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ca3860" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40ca3e08" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40ca6e48" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40ca2340" loc="74:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410a6010" loc="43:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410a6010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x410a5210" loc="73:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410a6010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x410a3168" loc="90:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
        <documentation loc="83:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410a6010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x410a3010" loc="90:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410a6010"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x401b5740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x401b5740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x410a3a60" loc="101:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
        <documentation loc="92:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410a6010"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x410a3908" loc="101:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x410a6db0" loc="65:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
        <documentation loc="60:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x410a58b8" loc="81:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
        <documentation loc="75:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410a6010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x410a64b0" loc="50:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x410a68f8" loc="58:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/bo/tinyos-morten/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40857280" loc="80:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40858d08" loc="80:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40858f20" loc="80:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40857118" loc="80:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40853e00" loc="135:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40853aa0" loc="135:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40853c80" loc="135:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40853540" loc="123:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40857f20" loc="96:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40857dc8" loc="96:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40856c28" loc="110:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408568d0" loc="110:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40856ac8" loc="110:/home/bo/tinyos-morten/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40aaba68" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40aab910" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40aaa760" loc="71:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40aaa608" loc="71:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40aaa168" loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40aaa010" loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40aaadf8" loc="80:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40aaaca0" loc="80:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40aab408" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40aab2b0" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40892168" loc="41:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40892010" loc="41:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x408864c8" loc="37:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40886ac8" loc="39:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40886970" loc="39:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408ad170" loc="45:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40892d38" loc="45:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408ad010" loc="45:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40892938" loc="43:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40892598" loc="43:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408927d8" loc="43:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x408adc90" loc="49:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408adb38" loc="49:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x408ab418" loc="51:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ab088" loc="51:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408ab2b8" loc="51:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408ad6e0" loc="47:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ad588" loc="47:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x408ab858" loc="53:/home/bo/tinyos-morten/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x41003bd0" loc="5:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x41000e40" loc="10:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x41000aa8" loc="8:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x41000950" loc="8:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x410004c0" loc="7:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40885010"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x40885d18"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x41000070" loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/bo/tinyos-morten/tos/interfaces/Random.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40cf54b8" loc="52:/home/bo/tinyos-morten/tos/interfaces/Random.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40cf5010" loc="46:/home/bo/tinyos-morten/tos/interfaces/Random.nc">
        <documentation loc="42:/home/bo/tinyos-morten/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x408df010" loc="70:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e0e60" loc="70:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x408e25f0" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e2498" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408e0320" loc="59:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x408e2e48" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e2ae8" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408e2ce8" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x408e6e30" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e6cd8" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x408e09a0" loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e0848" loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x40b805c0" loc="45:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b433b0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40b435d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b7fb80" loc="53:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3d618"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b3d840"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b7f0c8" loc="49:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3fea0"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40b3e128"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b7f6d0" loc="50:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3fea0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40b3e128"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b7f578" loc="50:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3fea0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40b3e128"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b7d1c0" loc="54:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3d618"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b3d840"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b7d068" loc="54:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3d618"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b3d840"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40b80be0" loc="46:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b433b0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40b435d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b80a88" loc="46:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b433b0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40b435d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x40f60d78" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x40f60d78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40f5d740" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40f5d3a8" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x40f60d78"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x40f5d250" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x40f60d78"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x408b69d0" loc="41:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b6878" loc="41:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x4086fb60" loc="65:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086f7c8" loc="65:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x4086fa00" loc="65:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x4086d650" loc="71:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086d4f8" loc="71:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x4086f2f0" loc="57:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40864ba8" loc="52:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40864a50" loc="52:/home/bo/tinyos-morten/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x4100cb48" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x4089f118"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x4100c5a8" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x4089f118"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x4100c808" loc="19:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x4100c9e0" loc="20:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x41006b20" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x41006560" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x41006740" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x410069b8" loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x41006168" loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:8" alignment="I:4"><struct-ref name="send_info" ref="0x40eff538"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x41006010" loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:8" alignment="I:4"><struct-ref name="send_info" ref="0x40eff538"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/bo/tinyos-morten/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40d0baa0" loc="53:/home/bo/tinyos-morten/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40d0baa0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40d34168" loc="64:/home/bo/tinyos-morten/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/bo/tinyos-morten/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40d0baa0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40d34010" loc="64:/home/bo/tinyos-morten/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40d0baa0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40950cc8" loc="50:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x4094f558" loc="60:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x4094f158" loc="55:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x409507d8" loc="45:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40950470" loc="45:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40950678" loc="45:/home/bo/tinyos-morten/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40a8ed18" loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
              <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a8eba0" loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40a8e548" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a8e3f0" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x408cf440" loc="131:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cf2e8" loc="131:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x408d0620" loc="120:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d04c8" loc="120:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x408d7498" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d7148" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x408d7338" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x408d5858" loc="75:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d5700" loc="75:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x408cc940" loc="156:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cc5e0" loc="156:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408cc7e0" loc="156:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x408d51c0" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d5068" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x408d0e18" loc="125:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d0ad8" loc="125:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x408d0cb8" loc="125:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x408d47e8" loc="88:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408d4470" loc="88:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408d4688" loc="88:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x408cc168" loc="151:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cc010" loc="151:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x408d7b00" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d79a8" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x408d3820" loc="99:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d36c8" loc="99:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x408d3170" loc="94:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408d4d78" loc="94:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408d3010" loc="94:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x408e8138" loc="178:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x408e9010" loc="162:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cce10" loc="162:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x408e9c80" loc="173:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x408cda80" loc="146:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cd720" loc="146:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408cd920" loc="146:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x408d5f08" loc="81:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d5db0" loc="81:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x408d0010" loc="115:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d1bf8" loc="115:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x408d1de8" loc="115:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x408cfc28" loc="136:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cf8d8" loc="136:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x408cfac8" loc="136:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408e8710" loc="184:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e85b8" loc="184:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x408d1060" loc="105:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d3d00" loc="105:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408d3ec8" loc="105:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x408c6c58" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c6b00" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x408e9720" loc="168:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e95c8" loc="168:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x408cd2a0" loc="141:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cd148" loc="141:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x408d1710" loc="110:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d15b8" loc="110:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x408b1388" loc="86:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x408b3eb8" loc="80:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408b3b40" loc="80:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408b3d58" loc="80:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x408b5df0" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b5c98" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x408b44d8" loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4380" loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x408b4e10" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408b4a98" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408b4cb0" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x408bae68" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x408b5730" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b5408" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408b55d0" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x408b35f8" loc="75:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b34a0" loc="75:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b50010" loc="56:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b50010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b50178" loc="56:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40b4d548" loc="109:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40b4e138" loc="78:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40b4ee00" loc="103:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40b4eab0" loc="103:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
          </variable>
          <variable name="dt" ref="0x40b4eca0" loc="103:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40b4e5a8" loc="88:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40b4d9d8" loc="116:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b507a8" loc="66:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40b50650" loc="66:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b50178"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b50c88" loc="73:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/bo/tinyos-morten/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x40fc1230" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fc10d8" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40fbea90" loc="56:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x40fbe938" loc="56:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x40fc04a0" loc="44:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fc0348" loc="44:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x40fc1860" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short> &#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fc1708" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40fc1e48" loc="39:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x40fc1cf0" loc="39:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x40fbe588" loc="54:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40fbe168" loc="52:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fbe010" loc="52:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x40fc0ac8" loc="50:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fc0970" loc="50:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/bo/tinyos-morten/tos/interfaces/Init.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40734718" loc="62:/home/bo/tinyos-morten/tos/interfaces/Init.nc">
        <documentation loc="53:/home/bo/tinyos-morten/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40b7c010" loc="41:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b7c010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40b7bf20" loc="74:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40b7ced0" loc="58:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b7c508" loc="48:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b7c010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b7b2f8" loc="62:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b7a398" loc="80:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b7ca90" loc="54:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b7c010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b7c938" loc="54:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b7c010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b7b700" loc="65:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b7baf8" loc="68:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @ author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x41305cd0" loc="52:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x41304210" loc="53:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x413040b8" loc="53:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x413045f0" loc="54:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x41308138" loc="42:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x413065d0" loc="46:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x41306478" loc="46:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x413049c8" loc="56:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x41308b60" loc="44:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x41306a30" loc="47:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x413058f8" loc="49:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x41306e98" loc="49:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x413050e8" loc="49:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x41305310" loc="50:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x41305538" loc="50:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x41305780" loc="50:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x41306010" loc="45:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x41308770" loc="43:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x41308618" loc="43:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x4130bd38" loc="41:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/bo/tinyos-morten/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4083fed8" loc="78:/home/bo/tinyos-morten/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/bo/tinyos-morten/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
              <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4083f990" loc="78:/home/bo/tinyos-morten/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4083fb70" loc="78:/home/bo/tinyos-morten/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4083fd50" loc="78:/home/bo/tinyos-morten/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x4093b1a8" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
              <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093b030" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x409be840" loc="79:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a7238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409be6e8" loc="79:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a7238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x409bf4c8" loc="53:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x409bfb88" loc="62:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a7238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409bfa30" loc="62:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a7238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x409be158" loc="70:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/bo/tinyos-morten/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x409a7238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x40f646f0" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:20" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x40f2d880"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40f641a8" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:20" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x40f2d880"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40f64388" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f64588" loc="19:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x40f65cd8" loc="12:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x40f65b80" loc="12:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x40f63010" loc="21:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:20" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x40f2d880"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:4"><struct-ref name="ip_iovec" ref="0x40f33328"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40f64b80" loc="21:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:20" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x40f2d880"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x40f64dd0" loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:4"><struct-ref name="ip_iovec" ref="0x40f33328"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x40f63c30" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:20" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x40f2d880"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x40f63468" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:20" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x40f2d880"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40f63648" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f63848" loc="30:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x40f63ac0" loc="30:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x40731e20" loc="44:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x40731cc8" loc="44:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x4082f010" loc="47:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x40816a68" loc="47:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x40816c40" loc="47:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40816e38" loc="47:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x4082f758" loc="49:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x4082f3a0" loc="48:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x407318f0" loc="43:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40816660" loc="46:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x40816290" loc="45:/home/bo/tinyos-morten/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="resolveAddress" ref="0x4100a318" loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue &#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x408846d0"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x408848f8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f8bf18" loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x4100a1b8" loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x408846d0"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x408848f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x4100abd0" loc="16:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="13:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match &#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4100a870" loc="16:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x4100aa70" loc="16:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x410093b0" loc="17:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x41009010" loc="17:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x41009250" loc="17:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b51ec0" loc="57:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b51ec0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b49038" loc="57:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b49038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b49520" loc="64:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b49038"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40b48010" loc="76:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40b49a48" loc="71:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b48438" loc="82:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/bo/tinyos-morten/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="1:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x412fd1a8" loc="20:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x412ff278" loc="4:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x412ff120" loc="4:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x412ff868" loc="7:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x412ff710" loc="7:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x412fe558" loc="14:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x412fe908" loc="15:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalcualateRank" ref="0x412fed30" loc="17:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x412fd750" loc="22:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x412fd5f8" loc="22:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x412ffca0" loc="9:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x412fe158" loc="11:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x408af558" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408af1f8" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x408af3f8" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x408af9d0" loc="58:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x408b7698" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b7540" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408b7ce0" loc="47:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b7b88" loc="47:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40751620" loc="44:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40751a08" loc="45:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4073de70" loc="42:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x407501f0" loc="47:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40751250" loc="43:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40751de0" loc="46:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4073d730" loc="40:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4073dac0" loc="41:/home/bo/tinyos-morten/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/bo/tinyos-morten/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40ef21a8" loc="61:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40ef25f0" loc="67:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40ef2a70" loc="72:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40ef12f8" loc="83:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40ef0010" loc="100:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ef04b8" loc="117:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40ef2e98" loc="77:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ef0bf8" loc="134:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40ef0aa0" loc="134:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40ef3d48" loc="56:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40ef1778" loc="89:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40ef1ba0" loc="94:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/bo/tinyos-morten/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="1:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x4130cd78" loc="2:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:24" alignment="I:4"><struct-ref ref="0x4130e040"/>
              <typename><typedef-ref name="parent_t" ref="0x4130e388"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x4130cc00" loc="2:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40ca13b8" loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ca1260" loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40c9f038" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ca1b10" loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ca19b8" loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ShellCommand" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
      <function command="" provided="0" name="getBuffer" ref="0x414e0410" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="len" ref="0x414e0298" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eval" ref="0x414e6e48" loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="argc" ref="0x414e6ae0" loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="argv" ref="0x414e6cc8" loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x414e0a90" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="str" ref="0x414e0798" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x414e0930" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x408731e0" loc="59:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40873088" loc="59:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40873cd8" loc="71:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40873b80" loc="71:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40871770" loc="85:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40871618" loc="85:/home/bo/tinyos-morten/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x408c58e0" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c5788" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x408c5200" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c50a8" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x408c5dd8" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x408c44e8" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c4390" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40896ae8" loc="120:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x408961c8" loc="97:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40887bb8" loc="88:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40896678" loc="102:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40894210" loc="128:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/bo/tinyos-morten/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x4089be10" loc="67:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4089b8b0" loc="67:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4089bac8" loc="67:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4089bca8" loc="67:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40898190" loc="122:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40899de0" loc="122:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40898010" loc="122:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40899880" loc="110:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4089a870" loc="83:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089a718" loc="83:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40899288" loc="97:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089aef8" loc="97:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40899128" loc="97:/home/bo/tinyos-morten/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RegisterShellCommand" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/shell/RegisterShellCommand.nc">
      <function event="" provided="0" name="getCommandName" ref="0x414de2c0" loc="3:/home/bo/tinyos-morten/tos/lib/net/blip/shell/RegisterShellCommand.nc">
        <interfacedef-ref qname="RegisterShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x40f92188" loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:48" alignment="I:4"><struct-ref name="route_entry" ref="0x40f9c558"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x40f92010" loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x40f93540" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:48" alignment="I:4"><struct-ref name="route_entry" ref="0x40f9c558"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x40f931b0" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x40f933c0" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x40f94c58" loc="16:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40f94b00" loc="16:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x40f93b78" loc="20:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:48" alignment="I:4"><struct-ref name="route_entry" ref="0x40f9c558"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40f93a00" loc="20:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x40f94610" loc="10:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
          <long>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x40f9add8" loc="10:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x40f94010" loc="10:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="next_hop" ref="0x40f94298" loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x40f944a0" loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x40dcd3e0" loc="48:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40dd0850" loc="48:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x40dd0a78" loc="49:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40dd0c50" loc="50:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x40dd0e88" loc="51:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x40dcd068" loc="52:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x40dcd260" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x40dccba8" loc="60:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dcca50" loc="60:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x40dcdcf8" loc="56:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x40dcc138" loc="57:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x40dcd8f8" loc="55:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40dcd7a0" loc="55:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x40dcc668" loc="59:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dcc510" loc="59:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x40dca168" loc="61:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dca010" loc="61:/home/bo/tinyos-morten/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x40fade28" loc="14:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x40fad678" loc="14:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fad850" loc="14:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
            </type-int>
          </variable>
          <variable name="first_type" ref="0x40fada88" loc="15:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x40fadcb8" loc="15:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40d20d70" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d20c18" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40d23a10" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d238b8" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40d20220" loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d23ea0" loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40d200c0" loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40d207e0" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d20688" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x408696a8" loc="65:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40869550" loc="65:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40874ab8" loc="46:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40874720" loc="46:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40874958" loc="46:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x4086bd18" loc="59:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086bbc0" loc="59:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4086b6a0" loc="53:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086b308" loc="53:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4086b540" loc="53:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x4086a010" loc="71:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40869e70" loc="71:/home/bo/tinyos-morten/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x4093d168" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093d010" loc="46:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4093c1e0" loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093c088" loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4093dad8" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093d780" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4093d978" loc="54:/home/bo/tinyos-morten/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x408687d0" loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408682f0" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40868198" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40868cd0" loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b61640" loc="55:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b61640"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40b5de80" loc="98:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40b5d5f0" loc="87:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b61b30" loc="61:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b61640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40b5c430" loc="104:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40b5c2d8" loc="104:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40b5c8c0" loc="110:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b5e9b8" loc="75:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b5e598" loc="70:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b5da58" loc="93:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b5e168" loc="67:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b61640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b5e010" loc="67:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b61640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b5edc0" loc="78:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b5d1c8" loc="81:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/bo/tinyos-morten/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4085d488" loc="177:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4085d330" loc="177:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40862da8" loc="88:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40862c50" loc="88:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4084fcf8" loc="68:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408623a8" loc="78:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40862250" loc="78:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4085f710" loc="121:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4085f3a8" loc="121:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4085f5b0" loc="121:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408609e8" loc="103:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40860680" loc="103:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40860888" loc="103:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4085ee28" loc="147:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4066c170"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4085ecd0" loc="147:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4085c978" loc="162:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4066c170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4085c648" loc="162:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4085c818" loc="162:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4066c170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4085e2f0" loc="136:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4085e198" loc="136:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4085a170" loc="187:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4085dda8" loc="187:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
                <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4085a010" loc="187:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4085a9e8" loc="195:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/bo/tinyos-morten/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/bo/tinyos-morten/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/bo/tinyos-morten/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40f99d68" loc="95:/home/bo/tinyos-morten/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/bo/tinyos-morten/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40f8c240" loc="105:/home/bo/tinyos-morten/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/bo/tinyos-morten/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/bo/tinyos-morten/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/bo/tinyos-morten/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x409c75a8" loc="90:/home/bo/tinyos-morten/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/bo/tinyos-morten/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x409c7aa8" loc="98:/home/bo/tinyos-morten/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/bo/tinyos-morten/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/bo/tinyos-morten/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/bo/tinyos-morten/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40030640" loc="57:/home/bo/tinyos-morten/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/bo/tinyos-morten/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40409010" loc="72:/home/bo/tinyos-morten/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/bo/tinyos-morten/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40030a80" loc="65:/home/bo/tinyos-morten/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/bo/tinyos-morten/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ICMPPing" loc="4:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
      <function event="" provided="0" name="pingDone" ref="0x41528b50" loc="10:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ping_rcv" ref="0x415287e0" loc="10:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
          <variable name="ping_n" ref="0x415289f0" loc="10:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="pingReply" ref="0x415283d8" loc="8:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:8" alignment="I:4"><struct-ref name="icmp_stats" ref="0x41281350"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="source" ref="0x41528010" loc="8:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="stats" ref="0x41528278" loc="8:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:8" alignment="I:4"><struct-ref name="icmp_stats" ref="0x41281350"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ping" ref="0x414dfb18" loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="target" ref="0x414df5c0" loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="period" ref="0x414df7d0" loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x414df9b0" loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40c99010" loc="59:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40c995e0" loc="72:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40c99c20" loc="79:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40c9cb50" loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="72:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x412e7480" loc="103:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x412e7a20" loc="108:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <documentation loc="106:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
          <short></short>
        </documentation>
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x412e78c8" loc="108:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x412eaa80" loc="95:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x412e7088" loc="101:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x412e8ef0" loc="101:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x412eb280" loc="75:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x412ebc28" loc="81:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x412ebad0" loc="81:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x412e8250" loc="98:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x412eae40" loc="96:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x412e8a88" loc="100:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x412e86d0" loc="100:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x412e8928" loc="100:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x412ea200" loc="84:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x412ea0a8" loc="84:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x412ea668" loc="91:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x412e6088" loc="110:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x412e7f08" loc="110:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x412eb648" loc="78:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40af00c0" loc="53:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40af00c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40aec820" loc="136:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40aee668" loc="83:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40aed800" loc="114:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40aed4b8" loc="114:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40aed6a0" loc="114:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40aed010" loc="98:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40aeb1a8" loc="151:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40aecc68" loc="144:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40aeeaf8" loc="92:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40af0718" loc="64:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40af05c0" loc="64:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40aec200" loc="129:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40aedea0" loc="129:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40aec0a0" loc="129:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40af0db0" loc="73:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40af0c58" loc="73:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40aee2a0" loc="78:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/bo/tinyos-morten/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x40f9beb0" loc="17:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f9bd58" loc="17:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40f97a70" loc="23:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x40f972c8" loc="23:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x40f974a0" loc="23:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f97688" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x40f97900" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <union loc="212:/usr/include/bits/pthreadtypes.h" ref="0x4030ac08" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x4030ad18" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4030ad78" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="320:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x41312010" defined="" size="I:24" alignment="I:4">
      <field name="nodeID" ref="0x41312120" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="successTx" ref="0x41312180" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="totalTx" ref="0x413121e0" bit-offset="I:144" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="etx" ref="0x41312240" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="132:/usr/include/bits/pthreadtypes.h" ref="0x403024e0" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x403025f0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40302650" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union loc="68:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f2cb10" defined="" size="I:8" alignment="I:4">
      <field name="ip6_un1" ref="0x40f2cc20" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="ip6_hdrctl" ref="0x40f2c010"/></type-tag>
      </field>
      <field name="ip6_un2_vfc" ref="0x40f2cc80" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </union>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b4010" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0x401b4270" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x401b42d0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <nx_struct name="network_header_t" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TinyosNetworkLayer.h" ref="0x406697a8" defined="" size="I:1" alignment="I:1">
      <field name="network" ref="0x40669ad8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x402a7b58"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="icmp6_echo_hdr" loc="54:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h" ref="0x412879b0" defined="" size="I:8" alignment="I:1">
      <field name="type" ref="0x412861d0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="code" ref="0x41286230" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="cksum" ref="0x41286290" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="ident" ref="0x412862f0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="seqno" ref="0x41286350" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="rpl_route" loc="237:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x4131df58" defined="" size="I:168" alignment="I:4">
      <field name="next_header" ref="0x4131bdb8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="hdr_ext_len" ref="0x4131be18" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="routing_type" ref="0x4131be78" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="segments_left" ref="0x4131bed8" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="compr" ref="0x4131bf38" bit-offset="I:32" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="pad" ref="0x4131bf98" bit-offset="I:36" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x4131a010" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="reserved1" ref="0x4131a070" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="addr" ref="0x4131a0d0" bit-offset="I:64" size="I:160">
        <type-array elements="I:10" size="I:160" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
        </type-array>
      </field>
    </struct>
    <union loc="206:/usr/include/bits/pthreadtypes.h" ref="0x4030a528" defined="" size="I:20" alignment="I:4">
      <field name="__size" ref="0x4030a638" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4030a698" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="290:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x413160f0" defined="" size="I:20" alignment="I:4">
      <field name="next_hop" ref="0x41316200" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="data" ref="0x41316260" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="76:/home/bo/tinyos-morten/tos/lib/tossim/tos.h" ref="0x404a6060" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="ieee154_fcf_mask_enums" loc="75:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.h" ref="0x40668b10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x405df2c0" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0x405df6f8" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0x402f8160"/></type-tag>
      </field>
      <field name="it_value" ref="0x405df758" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0x402f8160"/></type-tag>
      </field>
    </struct>
    <struct name="tossim_metadata" loc="36:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioMsg.h" ref="0x40677f20" defined="" size="I:16" alignment="I:4">
      <field name="strength" ref="0x40676780" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x402a15a0"/></typename>
        </type-int>
      </field>
      <field name="link" ref="0x406767e0" bit-offset="I:16" size="I:4">
        <type-tag size="I:4" alignment="I:2"><struct-ref name="link_metadata_t" ref="0x4067af58"/>
          <typename><typedef-ref name="link_metadata_t" ref="0x40678500"/></typename>
        </type-tag>
      </field>
      <field name="timestamp" ref="0x40676840" bit-offset="I:64" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="timestamp_metadata_t" ref="0x4067a338"/>
          <typename><typedef-ref name="timestamp_metadata_t" ref="0x4067a738"/></typename>
        </type-tag>
      </field>
      <field name="flags" ref="0x406768a0" bit-offset="I:96" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref name="flags_metadata_t" ref="0x4067b8d8"/>
          <typename><typedef-ref name="flags_metadata_t" ref="0x4067a0c8"/></typename>
        </type-tag>
      </field>
    </struct>
    <union loc="106:/usr/include/bits/pthreadtypes.h" ref="0x402ff738" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x402ff848" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x402ff8a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="gain_entry" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/sim_gain.h" ref="0x40598930" defined="" size="I:16" alignment="I:4">
      <field name="mote" ref="0x40598df8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x40598e58" bit-offset="I:32" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x40598eb8" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x40598930"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="ip6_metadata" loc="206:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f22628" defined="" size="I:12" alignment="I:2">
      <field name="sender" ref="0x40f229c0" bit-offset="I:0" size="I:10">
        <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x408846d0"/>
          <typename><typedef-ref name="ieee154_addr_t" ref="0x408848f8"/></typename>
        </type-tag>
      </field>
      <field name="lqi" ref="0x40f22a20" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/home/bo/tinyos-morten/tos/lib/tossim/sim_gain.c" ref="0x405a1db8" defined="" size="I:16" alignment="I:4">
      <field name="mean" ref="0x405a0158" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x405a01b8" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <enum loc="271:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x41319f08" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="deputy_scope"  loc="NONE" ref="0x4002dc28" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="69:/usr/include/bits/time.h" ref="0x402f86a8" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0x402f8a70" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0x402e8010"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x402f8ad0" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__suseconds_t" ref="0x402e84e8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="ieee154_fcf_type_enums" loc="84:/home/bo/tinyos-morten/tos/types/Ieee154.h" ref="0x4089c140" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="26:/home/bo/tinyos-morten/tos/types/AM.h" ref="0x4066cae8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="117:/usr/include/bits/pthreadtypes.h" ref="0x40304598" defined="" size="I:44" alignment="I:4">
      <field name="__lock" ref="0x403046a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x40304708" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x40304768" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x403047c8" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x40304828" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x40304888" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x403048e8" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x40304948" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="udp_hdr" loc="170:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f26a20" defined="" size="I:8" alignment="I:2">
      <field name="srcport" ref="0x40f25050" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="dstport" ref="0x40f250b0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="len" ref="0x40f25110" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="chksum" ref="0x40f25170" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="link_metadata_t" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayer.h" ref="0x4067af58" defined="" size="I:4" alignment="I:2">
      <field name="maxRetries" ref="0x406783e8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="retryDelay" ref="0x40678448" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0x4002eb18" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="118:/usr/include/stdlib.h" ref="0x402d3b38" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0x402d3c48" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x402d3ca8" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="14:/home/bo/tinyos-morten/tos/types/AM.h" ref="0x4066c778" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="icmp_stats" loc="100:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h" ref="0x41281350" defined="" size="I:8" alignment="I:4">
      <field name="seq" ref="0x412817a8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="ttl" ref="0x41281808" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rtt" ref="0x41281868" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="number"  loc="NONE" ref="0x4002acf0" size="V:" alignment="V:">
    </attribute>
    <enum loc="211:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b39e50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct ref="0x40025f48" size="V:" alignment="V:">
    </struct>
    <struct name="ieee154_frame_addr" loc="54:/home/bo/tinyos-morten/tos/types/Ieee154.h" ref="0x4089f118" defined="" size="I:22" alignment="I:2">
      <field name="ieee_src" ref="0x4089f6f0" bit-offset="I:0" size="I:10">
        <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x408846d0"/>
          <typename><typedef-ref name="ieee154_addr_t" ref="0x408848f8"/></typename>
        </type-tag>
      </field>
      <field name="ieee_dst" ref="0x4089f750" bit-offset="I:80" size="I:10">
        <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x408846d0"/>
          <typename><typedef-ref name="ieee154_addr_t" ref="0x408848f8"/></typename>
        </type-tag>
      </field>
      <field name="ieee_dstpan" ref="0x4089f7b0" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="iee154_fcf_addr_mode_enums" loc="91:/home/bo/tinyos-morten/tos/types/Ieee154.h" ref="0x4089cca0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="node" loc="62:/home/bo/tinyos-morten/tos/lib/tossim/heap.c" ref="0x4050dce0" defined="" size="I:12" alignment="I:4">
      <field name="data" ref="0x4050b050" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x4050b0b0" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="261:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x41319410" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="52:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b24e38" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_packet" loc="131:/home/bo/tinyos-morten/tos/lib/serial/Serial.h" ref="0x40684010" defined="" size="I:8" alignment="I:1">
      <field name="header" ref="0x40684498" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x40672330"/>
          <typename><typedef-ref name="serial_header_t" ref="0x40672d90"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x406844f8" bit-offset="I:64" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="43:/home/bo/tinyos-morten/tos/types/Leds.h" ref="0x40ef6148" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="integer"  loc="NONE" ref="0x4002ab88" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/home/bo/tinyos-morten/tos/lib/tossim/tos.h" ref="0x404c6a68" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/home/bo/tinyos-morten/tos/lib/tossim/platform_message.h" ref="0x406835f8" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x40683938" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x40677950"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x40677d08"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="300:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b55638" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x40b55748" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x40b557a8" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x40b55808" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x40b55868" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x40b558c8" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x40b55928" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b55988" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="94:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407247b0" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x407248c0" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x40724920" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x40724980" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="ieee_eui64" loc="42:/home/bo/tinyos-morten/tos/types/IeeeEui64.h" ref="0x40885010" defined="" size="I:8" alignment="I:1">
      <field name="data" ref="0x408853e8" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="144:/usr/include/bits/types.h" ref="0x402e4268" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x402e4378" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="transit_info_option_t" loc="134:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412e0138" defined="" size="I:24" alignment="I:4">
      <field name="type" ref="0x412e0af0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="option_length" ref="0x412e0b50" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="path_sequence" ref="0x412e0bb0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="path_control" ref="0x412e0c10" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="path_lifetime" ref="0x412e0c70" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="parent_address" ref="0x412e0cd0" bit-offset="I:64" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
    </struct>
    <enum loc="251:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x4131a4c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="315:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b54b80" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x40b54c90" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x40b54cf0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x40b54d50" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x40b54db0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x40b54e10" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x40b54e70" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b54ed0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <union name="message_metadata" loc="59:/home/bo/tinyos-morten/tos/lib/tossim/platform_message.h" ref="0x40683c18" defined="" size="I:16" alignment="I:4">
      <field name="tossim" ref="0x40683f80" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="tossim_metadata" ref="0x40677f20"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x40676958"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="dio_dest_prefix_t" loc="370:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x4130e5f0" defined="" size="I:8" alignment="I:4">
      <field name="type" ref="0x4130ea98" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x4130eaf8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x4130eb58" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <attribute name="combine"  loc="NONE" ref="0x4002d890" size="V:" alignment="V:">
      <field name="fn" ref="0x4002d9a0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="132:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x4073ad60" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="drand48_data" loc="418:/usr/include/stdlib.h" ref="0x40319460" defined="" size="I:24" alignment="I:4">
      <field name="__x" ref="0x40319e18" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x40319e78" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x40319ed8" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x40319f38" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x40319f98" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="40:/home/bo/tinyos-morten/tos/types/IeeeEui64.h" ref="0x40888bb8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="packed_lowmsg" loc="53:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h" ref="0x40f1d010" defined="" size="I:8" alignment="I:4">
      <field name="headers" ref="0x40f1d4a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="len" ref="0x40f1d500" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x40f1d560" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="__locale_struct" loc="28:/usr/include/xlocale.h" ref="0x402b1ef8" defined="" size="I:116" alignment="I:4">
      <field name="__locales" ref="0x402b6ac8" bit-offset="I:0" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="V:" alignment="V:"><struct-ref name="locale_data" ref="0x402b60d0"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x402b6b28" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x402b6b88" bit-offset="I:448" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x402b6be8" bit-offset="I:480" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x402b6c48" bit-offset="I:512" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/home/bo/tinyos-morten/tos/lib/serial/Serial.h" ref="0x40672330" defined="" size="I:8" alignment="I:1">
      <field name="dest" ref="0x40672b58" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x4066df20"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x40672bb8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x4066df20"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x40672c18" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x40672c78" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x4066dc88"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x40672cd8" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="126:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h" ref="0x4072b5f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timestamp_metadata_t" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeStampingLayer.h" ref="0x4067a338" defined="" size="I:4" alignment="I:4">
      <field name="timestamp" ref="0x4067a680" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
    </struct>
    <union name="message_header" loc="50:/home/bo/tinyos-morten/tos/lib/tossim/platform_message.h" ref="0x40684e00" defined="" size="I:12" alignment="I:1">
      <field name="tossim" ref="0x406832d0" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x40678708"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x40677748"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x40683330" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x40672330"/>
          <typename><typedef-ref name="serial_header_t" ref="0x40672d90"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="28:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatch.h" ref="0x40ef7c70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x402f8160" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0x402f84c0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0x402e8010"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x402f8520" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="191:/usr/include/bits/pthreadtypes.h" ref="0x40306ba0" defined="" size="I:8" alignment="I:4">
      <field name="__size" ref="0x40306cb0" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40306d10" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b4ca0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x401b4e50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="231:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b35568" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b35678" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b356d8" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b350d0"/></type-tag>
      </field>
    </union>
    <nx_struct name="udp_report" loc="38:UDPReport.h" ref="0x40f36980" defined="" size="I:35" alignment="I:1">
      <field name="seqno" ref="0x40f6c390" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="sender" ref="0x40f6c3f0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="ip" ref="0x40f6c450" bit-offset="I:32" size="I:9">
        <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x40f39a28"/>
          <typename><typedef-ref name="ip_statistics_t" ref="0x40f39e30"/></typename>
        </type-tag>
      </field>
      <field name="udp" ref="0x40f6c4b0" bit-offset="I:104" size="I:6">
        <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x40f36010"/>
          <typename><typedef-ref name="udp_statistics_t" ref="0x40f36298"/></typename>
        </type-tag>
      </field>
      <field name="icmp" ref="0x40f6c510" bit-offset="I:152" size="I:9">
        <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x40f37598"/>
          <typename><typedef-ref name="icmp_statistics_t" ref="0x40f37a00"/></typename>
        </type-tag>
      </field>
      <field name="route" ref="0x40f6c570" bit-offset="I:224" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref ref="0x40f38638"/>
          <typename><typedef-ref name="route_statistics_t" ref="0x40f38920"/></typename>
        </type-tag>
      </field>
    </nx_struct>
    <enum loc="11:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h" ref="0x40fa0d70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b4660" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0x401b48c0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x401b4920" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct name="dio_dodag_config_t" loc="190:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412db768" defined="" size="I:16" alignment="I:1">
      <field name="type" ref="0x412dad20" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x412dad80" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x412dade0" bit-offset="I:16" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="A" ref="0x412dae40" bit-offset="I:20" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="PCS" ref="0x412daea0" bit-offset="I:21" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="DIOIntDoubl" ref="0x412daf00" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="DIOIntMin" ref="0x412daf60" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="DIORedun" ref="0x412d9010" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="MaxRankInc" ref="0x412d9070" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="MinHopRankInc" ref="0x412d90d0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="ocp" ref="0x412d9130" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x412d9190" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="default_lifetime" ref="0x412d91f0" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="lifetime_unit" ref="0x412d92d0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="47:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c" ref="0x404ce828" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timezone" loc="57:/usr/include/sys/time.h" ref="0x4053dbb0" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x4053df08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x4053df68" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="117:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h" ref="0x406bda00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="60:/home/bo/tinyos-morten/tos/types/Ieee154.h" ref="0x4089f870" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="120:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b41738" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b41848" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b418a8" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b41318"/></type-tag>
      </field>
    </union>
    <struct loc="196:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b39010" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x40b39120" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x40b39180" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x40b391e0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x40b39240" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="67:/usr/include/sys/select.h" ref="0x402f7658" defined="" size="I:128" alignment="I:4">
      <field name="__fds_bits" ref="0x402f7768" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="long" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__fd_mask" ref="0x402f8f28"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_event" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/sim_event_queue.h" ref="0x404ae7b0" defined="" size="I:28" alignment="I:4">
      <field name="time" ref="0x404baa58" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x404baab8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="force" ref="0x404bab18" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x404bab78" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x404babd8" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x404bac38" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x404baca8" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x4044c770" size="V:" alignment="V:">
    </struct>
    <union loc="150:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3d618" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b3d728" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b3d788" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b3d0d0"/></type-tag>
      </field>
    </union>
    <nx_union name="timestamp_t" loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h" ref="0x40dae010" defined="" size="I:4" alignment="I:1">
      <field name="relative" ref="0x40dae500" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
          <typename><typedef-ref name="timesync_relative_t" ref="0x40db1780"/></typename>
        </type-int>
      </field>
      <field name="absolute" ref="0x40dae560" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="timesync_absolute_t" ref="0x40db1ab0"/></typename>
        </type-int>
      </field>
    </nx_union>
    <union loc="98:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b433b0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b434c0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b43520" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b44ef8"/></type-tag>
      </field>
    </union>
    <nx_struct name="tossim_footer" loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioMsg.h" ref="0x40677950" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x40677c50" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="206:/usr/include/libio.h" ref="0x40455398" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/bo/tinyos-morten/tos/lib/tossim/sim_packet.h" ref="0x406613f8" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum loc="35:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h" ref="0x4054ef10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="53:/usr/include/bits/pthreadtypes.h" ref="0x402fc258" defined="" size="I:36" alignment="I:4">
      <field name="__size" ref="0x402fc368" bit-offset="I:0" size="I:36">
        <type-array elements="I:36" size="I:36" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x402fc3c8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="dao_base_t" loc="151:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412df948" defined="" size="I:72" alignment="I:4">
      <field name="icmpv6" ref="0x412dea38" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><struct-ref name="icmpv6_header_t" ref="0x412e1010"/></type-tag>
      </field>
      <field name="instance_id" ref="0x412dea98" bit-offset="I:32" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref name="rpl_instance_id" ref="0x412e1cc0"/></type-tag>
      </field>
      <field name="k_bit" ref="0x412deaf8" bit-offset="I:40" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="d_bit" ref="0x412deb58" bit-offset="I:41" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x412debb8" bit-offset="I:48" bit-size="I:14">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="DAOsequence" ref="0x412dec18" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="dodagID" ref="0x412dec78" bit-offset="I:96" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="target_option" ref="0x412decd8" bit-offset="I:224" size="I:20">
        <type-tag size="I:20" alignment="I:4"><struct-ref name="target_option_t" ref="0x412e0e48"/></type-tag>
      </field>
      <field name="transit_info_option" ref="0x412ded38" bit-offset="I:384" size="I:24">
        <type-tag size="I:24" alignment="I:4"><struct-ref name="transit_info_option_t" ref="0x412e0138"/></type-tag>
      </field>
    </struct>
    <nx_struct name="radio_count_msg" loc="48:../TestMessage.h" ref="0x406cde48" defined="" size="I:26" alignment="I:1">
      <field name="counter" ref="0x406cb160" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="ist" ref="0x406cb1c0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="rssi" ref="0x406cb220" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x406cb280" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x406cb2e0" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="distance" ref="0x406cb340" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="senderID" ref="0x406cb3a0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="receiverID" ref="0x406cb400" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="voltage_sender" ref="0x406cb460" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="voltage_receiver" ref="0x406cb4c0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="crc_ok" ref="0x406cb520" bit-offset="I:112" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x406cb580" bit-offset="I:120" size="I:11">
        <type-array elements="I:11" size="I:11" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
            <typename><typedef-ref name="nx_int8_t" ref="0x402a15a0"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="route_entry" loc="24:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h" ref="0x40f9c558" defined="" size="I:48" alignment="I:4">
      <field name="valid" ref="0x40f9ce58" bit-offset="I:0" bit-size="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="key" ref="0x40f9ceb8" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
        </type-int>
      </field>
      <field name="prefix" ref="0x40f9cf18" bit-offset="I:64" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="prefixlen" ref="0x40f9cf78" bit-offset="I:192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="next_hop" ref="0x40f9b010" bit-offset="I:224" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="ifindex" ref="0x40f9b070" bit-offset="I:352" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="307:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x413133c0" defined="" size="I:48" alignment="I:4">
      <field name="nodeID" ref="0x413134d0" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="interfaceID" ref="0x41313530" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="DAOsequence" ref="0x41313590" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="DAOlifetime" ref="0x413135f0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="routeTag" ref="0x41313650" bit-offset="I:192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="RRlength" ref="0x413136b0" bit-offset="I:200" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="prefixLength" ref="0x41313710" bit-offset="I:208" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="prefix" ref="0x41313770" bit-offset="I:224" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="RRStack" ref="0x413137d0" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="__pthread_internal_slist" loc="67:/usr/include/bits/pthreadtypes.h" ref="0x402fc708" defined="" size="I:4" alignment="I:4">
      <field name="__next" ref="0x402fcb00" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x402fc708"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="150:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f29c90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="78:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h" ref="0x40f1cda8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="rpfx" loc="81:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h" ref="0x412844c8" defined="" size="I:32" alignment="I:1">
      <field name="type" ref="0x41282210" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x41282270" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="pfx_len" ref="0x412822d0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x41282330" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="valid_lifetime" ref="0x41282390" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
        </type-int>
      </field>
      <field name="preferred_lifetime" ref="0x412823f0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x41282450" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
        </type-int>
      </field>
      <field name="prefix" ref="0x412824b0" bit-offset="I:128" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="35:../TestMessage.h" ref="0x406cf660" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="icmp6_hdr" loc="144:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f29690" defined="" size="I:4" alignment="I:2">
      <field name="type" ref="0x40f29b10" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="code" ref="0x40f29b70" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="cksum" ref="0x40f29bd0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="234:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b350d0" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x40b351e0" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x40b35240" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b352a0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x40b35300" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x40b35360" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="312:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b530d0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b531e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b53240" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b54b80"/></type-tag>
      </field>
    </union>
    <struct loc="31:/home/bo/tinyos-morten/tos/lib/net/blip/table.h" ref="0x4107f490" defined="" size="I:8" alignment="I:4">
      <field name="data" ref="0x4107f5a0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="elt_len" ref="0x4107f600" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="n_elts" ref="0x4107f660" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="136:/home/bo/tinyos-morten/tos/lib/serial/Serial.h" ref="0x40684840" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x40684b38" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="93:/usr/include/sys/time.h" ref="0x405492b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="120:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x4073a140" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="170:/usr/include/bits/pthreadtypes.h" ref="0x40307b28" defined="" size="I:32" alignment="I:4">
      <field name="__lock" ref="0x40307c38" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x40307c98" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x40307cf8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x40307d58" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x40307db8" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x40307e18" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__flags" ref="0x40307e78" bit-offset="I:192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__shared" ref="0x40307ed8" bit-offset="I:200" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad1" ref="0x40307f38" bit-offset="I:208" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad2" ref="0x40307f98" bit-offset="I:216" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__writer" ref="0x40306010" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atmostonce" loc="97:/home/bo/tinyos-morten/tos/lib/tossim/tos.h" ref="0x404c6668" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="dio_metric_header_t" loc="207:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412d9470" defined="" size="I:4" alignment="I:1">
      <field name="routing_obj_type" ref="0x4131e2c8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x4131e328" bit-offset="I:8" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="R_flag" ref="0x4131e388" bit-offset="I:10" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="G_flag" ref="0x4131e3e8" bit-offset="I:11" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="A_flag" ref="0x4131e448" bit-offset="I:12" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="O_flag" ref="0x4131e4a8" bit-offset="I:14" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="C_flag" ref="0x4131e508" bit-offset="I:15" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="object_len" ref="0x4131e568" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct loc="62:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h" ref="0x40f38638" defined="" size="I:7" alignment="I:1">
      <field name="hop_limit" ref="0x40f38748" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="parent" ref="0x40f387a8" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="parent_metric" ref="0x40f38808" bit-offset="I:24" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="parent_etx" ref="0x40f38868" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="65:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h" ref="0x406c2470" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h" ref="0x405444b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="104:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40724b98" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="39:/home/bo/tinyos-morten/tos/types/Ieee154.h" ref="0x408846d0" defined="" size="I:10" alignment="I:2">
      <field name="ieee_mode" ref="0x408847e0" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ieee_addr" ref="0x40884840" bit-offset="I:16" size="I:8">
        <type-tag size="I:8" alignment="I:2"><union-ref ref="0x408843c0"/></type-tag>
      </field>
    </struct>
    <enum loc="190:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h" ref="0x40f3b4b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="170:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3c4a8" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x40b3c5b8" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x40b3c618" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x40b3c678" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x40b3c6d8" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b3c738" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x40b3c798" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="tcp_hdr" loc="191:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f23570" defined="" size="I:20" alignment="I:4">
      <field name="srcport" ref="0x40f221b8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="dstport" ref="0x40f22218" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="seqno" ref="0x40f22278" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="ackno" ref="0x40f222d8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="offset" ref="0x40f22338" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x40f22398" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="window" ref="0x40f223f8" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="chksum" ref="0x40f22458" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="urgent" ref="0x40f224b8" bit-offset="I:144" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="hwevent"  loc="NONE" ref="0x4002d448" size="V:" alignment="V:">
    </attribute>
    <union loc="297:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b55b30" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b55c40" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b55ca0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b55638"/></type-tag>
      </field>
    </union>
    <enum loc="673:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h" ref="0x406eb590" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_FILE" loc="271:/usr/include/libio.h" ref="0x404515a8" defined="" size="I:148" alignment="I:4">
      <field name="_flags" ref="0x4045d640" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x4045d6a0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x4045d700" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x4045d760" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x4045d7c0" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x4045d820" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x4045d880" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x4045d8e0" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x4045d940" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x4045d9a0" bit-offset="I:288" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x4045da00" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x4045da60" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x4045dac0" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0x4044cbf0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x4045dba0" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x4045dc00" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x4045dc60" bit-offset="I:480" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x4045dcc0" bit-offset="I:512" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0x402e5a78"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x4045dd20" bit-offset="I:544" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x4045dd80" bit-offset="I:560" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x4045dde0" bit-offset="I:568" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x4045de40" bit-offset="I:576" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x4044ca18"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x4045dea0" bit-offset="I:608" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x402e5cf8"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x4045df00" bit-offset="I:672" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x4045df60" bit-offset="I:704" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x4045b010" bit-offset="I:736" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x4045b170" bit-offset="I:768" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x4045b1d0" bit-offset="I:800" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x4045b230" bit-offset="I:832" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x4045b290" bit-offset="I:864" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="dio_prefix_t" loc="226:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x4131edc8" defined="" size="I:28" alignment="I:4">
      <field name="type" ref="0x4131db78" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="suboption_len" ref="0x4131dbd8" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x4131dc38" bit-offset="I:24" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="preference" ref="0x4131dc98" bit-offset="I:27" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="reserved2" ref="0x4131dcf8" bit-offset="I:29" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="lifetime" ref="0x4131dd58" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
        </type-int>
      </field>
      <field name="prefix_len" ref="0x4131ddb8" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="prefix" ref="0x4131de18" bit-offset="I:96" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
    </struct>
    <struct name="hashtable" ref="0x404c5240" size="V:" alignment="V:">
    </struct>
    <struct name="lpl_metadata_t" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/LowPowerListeningLayer.h" ref="0x4067a968" defined="" size="I:2" alignment="I:2">
      <field name="sleepint" ref="0x4067ac68" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="63:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b203e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="heap" loc="61:/home/bo/tinyos-morten/tos/lib/tossim/heap.h" ref="0x40503650" defined="" size="I:12" alignment="I:4">
      <field name="size" ref="0x40503a90" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x40503af0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x40503b50" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x4002dd90" size="V:" alignment="V:">
    </attribute>
    <struct name="sockaddr_in6" loc="54:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f2d880" defined="" size="I:20" alignment="I:4">
      <field name="sin6_port" ref="0x40f2dc80" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="sin6_addr" ref="0x40f2dce0" bit-offset="I:32" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
    </struct>
    <struct name="lowpan_reconstruct" loc="59:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h" ref="0x40f1d6f8" defined="" size="I:36" alignment="I:4">
      <field name="r_tag" ref="0x40f1c4d0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="r_source_key" ref="0x40f1c530" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="r_size" ref="0x40f1c590" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="r_buf" ref="0x40f1c5f0" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="r_bytes_rcvd" ref="0x40f1c650" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="r_timeout" ref="0x40f1c6b0" bit-offset="I:112" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="r_app_len" ref="0x40f1c710" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="r_transport_header" ref="0x40f1c770" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="r_meta" ref="0x40f1c7d0" bit-offset="I:192" size="I:12">
        <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x40f22628"/></type-tag>
      </field>
    </struct>
    <struct name="_IO_marker" loc="186:/usr/include/libio.h" ref="0x4044cbf0" defined="" size="I:12" alignment="I:4">
      <field name="_next" ref="0x40455130" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0x4044cbf0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x40455190" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x404551f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="48:/usr/include/ctype.h" ref="0x4042bc18" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="202:/usr/include/math.h" ref="0x4042f390" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="185:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3ccc0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="41:/home/bo/tinyos-morten/tos/lib/timer/Timer.h" ref="0x4066b200" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x4066b310" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="random_data" loc="349:/usr/include/stdlib.h" ref="0x40308d80" defined="" size="I:28" alignment="I:4">
      <field name="fptr" ref="0x4030c6a0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x4030c700" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x4030c760" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x4030c7c0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x4030c820" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x4030c880" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x4030c8e0" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="43:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x4072a580" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="82:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b1e208" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ip6_hdrctl" loc="69:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f2c010" defined="" size="I:8" alignment="I:4">
      <field name="ip6_un1_flow" ref="0x40f2c728" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="ip6_un1_plen" ref="0x40f2c788" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="ip6_un1_nxt" ref="0x40f2c7e8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ip6_un1_hlim" ref="0x40f2c848" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="76:/usr/include/bits/pthreadtypes.h" ref="0x402ff010" defined="" size="I:24" alignment="I:4">
      <field name="__data" ref="0x402ff120" bit-offset="I:0" size="I:24">
        <type-tag size="I:24" alignment="I:4"><struct-ref name="__pthread_mutex_s" ref="0x402fce28"/></type-tag>
      </field>
      <field name="__size" ref="0x402ff180" bit-offset="I:0" size="I:24">
        <type-array elements="I:24" size="I:24" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x402ff1e0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h" ref="0x40fa07b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="115:/usr/include/bits/pthreadtypes.h" ref="0x40304da8" defined="" size="I:48" alignment="I:4">
      <field name="__data" ref="0x40304eb8" bit-offset="I:0" size="I:44">
        <type-tag size="I:44" alignment="I:4"><struct-ref ref="0x40304598"/></type-tag>
      </field>
      <field name="__size" ref="0x40304f18" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40304f78" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x405e01d8" defined="" size="I:44" alignment="I:4">
      <field name="tm_sec" ref="0x405e0d60" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x405e0dc0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x405e0e20" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x405e0e80" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x405e0ee0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x405e0f40" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x405e0fa0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x405df018" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x405df078" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x405df0d8" bit-offset="I:288" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_zone" ref="0x405df138" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <enum loc="51:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40729010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="94:/home/bo/tinyos-morten/tos/lib/serial/Serial.h" ref="0x406753e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="280:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x41318ee0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="98:/usr/include/stdlib.h" ref="0x402d4f10" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x402d3050" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x402d30b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c" ref="0x404cec68" defined="" size="I:8" alignment="I:4">
      <field name="num" ref="0x404cd050" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x404cd0b0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
              <typename><typedef-ref name="FILE" ref="0x404517e8"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="51:/home/bo/tinyos-morten/tos/types/TinyError.h" ref="0x404099a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="250:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b34b90" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b34ca0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b34d00" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b34770"/></type-tag>
      </field>
    </union>
    <struct name="dio_base_t" loc="163:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412dee80" defined="" size="I:28" alignment="I:4">
      <field name="icmpv6" ref="0x412ddda0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><struct-ref name="icmpv6_header_t" ref="0x412e1010"/></type-tag>
      </field>
      <field name="instance_id" ref="0x412dde00" bit-offset="I:32" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref name="rpl_instance_id" ref="0x412e1cc0"/></type-tag>
      </field>
      <field name="version" ref="0x412dde60" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="dagRank" ref="0x412ddec0" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x412ddf20" bit-offset="I:64" size="I:1">
        <type-tag size="I:1" alignment="I:1"><union-ref ref="0x412dd760"/></type-tag>
      </field>
      <field name="dtsn" ref="0x412ddf80" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="reserved2" ref="0x412db010" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="dodagID" ref="0x412db070" bit-offset="I:96" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
    </struct>
    <struct name="send_entry" loc="42:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatch.h" ref="0x40f34010" defined="" size="I:12" alignment="I:4">
      <field name="info" ref="0x40f34600" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="send_info" ref="0x40eff538"/></type-tag>
        </type-pointer>
      </field>
      <field name="frame_addr" ref="0x40f34660" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x4089f118"/></type-tag>
        </type-pointer>
      </field>
      <field name="msg" ref="0x40f346c0" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
            <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="42:/home/bo/tinyos-morten/tos/lib/timer/Timer.h" ref="0x4066b640" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x4066b750" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="86:/usr/include/wchar.h" ref="0x4044e1e0" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x4044e2f0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x4044e350" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <enum loc="25:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h" ref="0x412539b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="109:/home/bo/tinyos-morten/tos/lib/serial/Serial.h" ref="0x40674b00" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x40673c60" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x40673cc0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x40673d20" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x40673d80" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x40673de0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x40673e40" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x40673ea0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x40673f00" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x40673f60" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x40672010" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x40672070" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b7010" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x401b7298" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x401b72f8" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x401b7358" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b5b80" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="send_info" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatch.h" ref="0x40eff538" defined="" size="I:8" alignment="I:4">
      <field name="upper_data" ref="0x40effcf0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="link_fragments" ref="0x40effd50" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="link_transmissions" ref="0x40effdb0" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="failed" ref="0x40effe10" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="_refcount" ref="0x40effe70" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="icmpv6_header_t" loc="115:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412e1010" defined="" size="I:4" alignment="I:1">
      <field name="type" ref="0x412e14c8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="code" ref="0x412e1528" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="checksum" ref="0x412e1588" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="atleastonce" loc="98:/home/bo/tinyos-morten/tos/lib/tossim/tos.h" ref="0x404c6868" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="144:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407399a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct loc="92:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h" ref="0x41282df8" defined="" size="I:8" alignment="I:1">
      <field name="type" ref="0x41282f08" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x41282f68" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="metric" ref="0x41281010" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="seqno" ref="0x41281070" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="pad" ref="0x412810d0" bit-offset="I:48" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="locale_data" ref="0x402b60d0" size="V:" alignment="V:">
    </struct>
    <struct loc="43:/home/bo/tinyos-morten/tos/lib/timer/Timer.h" ref="0x4066ba80" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x4066bb90" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct loc="69:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h" ref="0x40f37598" defined="" size="I:9" alignment="I:1">
      <field name="sol_rx" ref="0x40f376a8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="sol_tx" ref="0x40f37708" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="adv_rx" ref="0x40f37768" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="adv_tx" ref="0x40f377c8" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="echo_rx" ref="0x40f37828" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="echo_tx" ref="0x40f37888" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="unk_rx" ref="0x40f378e8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="rx" ref="0x40f37948" bit-offset="I:56" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="itimerval" loc="109:/usr/include/sys/time.h" ref="0x40549ab0" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0x40549ee8" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0x402f86a8"/></type-tag>
      </field>
      <field name="it_value" ref="0x40549f48" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0x402f86a8"/></type-tag>
      </field>
    </struct>
    <enum loc="138:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407393d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="75:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b1fa28" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="56:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h" ref="0x406c33b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="in6_addr" loc="41:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f30d00" defined="" size="I:16" alignment="I:4">
      <field name="in6_u" ref="0x40f2d720" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><union-ref ref="0x40f2d400"/></type-tag>
      </field>
    </struct>
    <struct name="ip6_hdr" loc="67:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f2de18" defined="" packed="" size="I:40" alignment="I:1">
      <field name="ip6_ctlun" ref="0x40f2b160" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><union-ref ref="0x40f2cb10"/></type-tag>
      </field>
      <field name="ip6_src" ref="0x40f2b1c0" bit-offset="I:64" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="ip6_dst" ref="0x40f2b220" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
    </struct>
    <union loc="168:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412dd760" defined="" size="I:1" alignment="I:1">
      <field name="flags_chunk" ref="0x412dd870" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </union>
    <struct loc="29:/usr/include/bits/sigset.h" ref="0x402f5ae8" defined="" size="I:128" alignment="I:4">
      <field name="__val" ref="0x402f5bf8" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="25:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h" ref="0x406cbbf0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="lowpan_ctx" loc="72:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h" ref="0x40f1c918" defined="" size="I:4" alignment="I:2">
      <field name="tag" ref="0x40f1cc88" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="offset" ref="0x40f1cce8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b5228" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x401b53d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="83:/usr/include/wchar.h" ref="0x4044e4d0" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x4044e5e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x4044e640" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x4044e1e0"/></type-tag>
      </field>
    </struct>
    <struct name="sigevent" ref="0x405df8a0" size="V:" alignment="V:">
    </struct>
    <struct loc="44:/home/bo/tinyos-morten/tos/lib/timer/Timer.h" ref="0x4066bec0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x40669010" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="167:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3c938" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b3ca48" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b3caa8" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b3c4a8"/></type-tag>
      </field>
    </union>
    <enum loc="17:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h" ref="0x40f9d5b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ip6_packet" loc="228:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f22b78" defined="" size="I:44" alignment="I:4">
      <field name="ip6_data" ref="0x40f22f98" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="ip_iovec" ref="0x40f33328"/></type-tag>
        </type-pointer>
      </field>
      <field name="ip6_hdr" ref="0x40f21010" bit-offset="I:32" size="I:40">
        <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
      </field>
    </struct>
    <struct loc="22:/usr/include/_G_config.h" ref="0x4044eb70" defined="" size="I:12" alignment="I:4">
      <field name="__pos" ref="0x4044ec80" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0x402e5a78"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x4044ece0" bit-offset="I:32" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x4044e4d0"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x4044e6f8"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="180:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f25240" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b5740" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="dio_etx_t" loc="218:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x4131e6a8" defined="" size="I:2" alignment="I:1">
      <field name="etx" ref="0x4131e8f8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="123:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b41318" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x40b41428" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x40b41488" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x40b414e8" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x40b41548" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b415a8" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="265:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x41319720" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="102:/home/bo/tinyos-morten/tos/lib/serial/Serial.h" ref="0x40675ef0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="193:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b39448" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b39558" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b395b8" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b39010"/></type-tag>
      </field>
    </union>
    <attribute name="spontaneous"  loc="NONE" ref="0x4002d728" size="V:" alignment="V:">
    </attribute>
    <struct loc="150:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x407389e8" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x40738af8" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x40738b58" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x40738bb8" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x40738c18" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x40738c78" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x40738cd8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="106:/usr/include/stdlib.h" ref="0x402d3508" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x402d3618" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x402d3678" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct loc="40:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h" ref="0x40f39a28" defined="" size="I:9" alignment="I:1">
      <field name="sent" ref="0x40f39b38" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="forwarded" ref="0x40f39b98" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="rx_drop" ref="0x40f39bf8" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="tx_drop" ref="0x40f39c58" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="fw_drop" ref="0x40f39cb8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="rx_total" ref="0x40f39d18" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="encfail" ref="0x40f39d78" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="dis_base_t" loc="121:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412e16d0" defined="" size="I:6" alignment="I:2">
      <field name="icmpv6" ref="0x412e1ae8" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><struct-ref name="icmpv6_header_t" ref="0x412e1010"/></type-tag>
      </field>
      <field name="reserved" ref="0x412e1b48" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="ip_iovec" loc="11:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/iovec.h" ref="0x40f33328" defined="" size="I:12" alignment="I:4">
      <field name="iov_base" ref="0x40f33870" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="iov_len" ref="0x40f338d0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
        </type-int>
      </field>
      <field name="iov_next" ref="0x40f33930" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="ip_iovec" ref="0x40f33328"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="295:/usr/include/math.h" ref="0x4042fdb0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="31:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h" ref="0x41287010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="295:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x41316978" defined="" size="I:64" alignment="I:4">
      <field name="iphdr" ref="0x41316a88" bit-offset="I:0" size="I:40">
        <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
      </field>
      <field name="retries" ref="0x41316ae8" bit-offset="I:320" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="packet" ref="0x41316b48" bit-offset="I:352" size="I:20">
        <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x413160f0"/>
          <typename><typedef-ref name="rpl_data_packet_t" ref="0x41316318"/></typename>
        </type-tag>
      </field>
    </struct>
    <union loc="43:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f2d400" defined="" size="I:16" alignment="I:4">
      <field name="u6_addr8" ref="0x40f2d510" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="u6_addr16" ref="0x40f2d570" bit-offset="I:0" size="I:16">
        <type-array elements="I:8" size="I:16" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="u6_addr32" ref="0x40f2d5d0" bit-offset="I:0" size="I:16">
        <type-array elements="I:4" size="I:16" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
          </type-int>
        </type-array>
      </field>
    </union>
    <struct name="ip6_ext" loc="109:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f2b368" defined="" size="I:2" alignment="I:1">
      <field name="ip6e_nxt" ref="0x40f2b708" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ip6e_len" ref="0x40f2b768" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="unsafe"  loc="NONE" ref="0x4002def8" size="V:" alignment="V:">
    </attribute>
    <nx_struct name="radv" loc="62:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h" ref="0x41286708" defined="" size="I:16" alignment="I:1">
      <field name="type" ref="0x41285548" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="code" ref="0x412855a8" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="cksum" ref="0x41285608" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="hlim" ref="0x41285668" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x412856c8" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="lifetime" ref="0x41285728" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="reachable_time" ref="0x41285788" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
        </type-int>
      </field>
      <field name="retrans_time" ref="0x412857e8" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
        </type-int>
      </field>
      <field name="options" ref="0x41285848" bit-offset="I:128" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct loc="288:/usr/include/inttypes.h" ref="0x401bfee0" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0x401c4010" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x401c4070" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="49:/home/bo/tinyos-morten/tos/types/Ieee154.h" ref="0x40884a38" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct loc="81:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h" ref="0x40f36010" defined="" size="I:6" alignment="I:1">
      <field name="sent" ref="0x40f36120" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="rcvd" ref="0x40f36180" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="cksum" ref="0x40f361e0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="334:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x413114a0" defined="" packed="" size="I:8" alignment="I:1">
      <field name="ip6_ext_outer" ref="0x413115b0" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><struct-ref name="ip6_ext" ref="0x40f2b368"/></type-tag>
      </field>
      <field name="ip6_ext_inner" ref="0x41311610" bit-offset="I:16" size="I:2">
        <type-tag size="I:2" alignment="I:1"><struct-ref name="ip6_ext" ref="0x40f2b368"/></type-tag>
      </field>
      <field name="bitflag" ref="0x41311670" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="instance_id" ref="0x413116d0" bit-offset="I:40" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref name="rpl_instance_id" ref="0x412e1cc0"/></type-tag>
      </field>
      <field name="senderRank" ref="0x41311730" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="flags_metadata_t" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MetadataFlagsLayer.h" ref="0x4067b8d8" defined="" size="I:1" alignment="I:1">
      <field name="flags" ref="0x4067a010" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="87:/home/bo/tinyos-morten/tos/lib/serial/Serial.h" ref="0x40676da8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="110:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412e2918" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="activemessage_header_t" loc="40:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageLayer.h" ref="0x4067b2a0" defined="" size="I:1" alignment="I:1">
      <field name="type" ref="0x4067b5d8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="timesync_footer_t" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h" ref="0x40db1cf0" defined="" size="I:5" alignment="I:1">
      <field name="type" ref="0x40dae760" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x40dae7c0" bit-offset="I:8" size="I:4">
        <type-tag size="I:4" alignment="I:1"><nx_union-ref name="timestamp_t" ref="0x40dae010"/></type-tag>
      </field>
    </nx_struct>
    <struct name="target_option_t" loc="143:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412e0e48" defined="" size="I:20" alignment="I:4">
      <field name="type" ref="0x412df680" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="option_length" ref="0x412df6e0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x412df740" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="prefix_length" ref="0x412df7a0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="target_prefix" ref="0x412df800" bit-offset="I:32" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
    </struct>
    <enum loc="58:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x40729618" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="136:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3f950" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x40b3fa60" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x40b3fac0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x40b3fb20" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x40b3fb80" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x40b3fbe0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x40b3fc40" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x40b3fca0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x40b3fd00" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b7d98" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="tlv_hdr" loc="114:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f2b890" defined="" size="I:2" alignment="I:1">
      <field name="type" ref="0x40f2bbd0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="len" ref="0x40f2bc30" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="ip6_packet_headers" loc="233:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f211a8" defined="" size="I:24" alignment="I:4">
      <field name="hdr_ip6" ref="0x40f21c20" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40f2de18"/></type-tag>
        </type-pointer>
      </field>
      <field name="hdr_hop" ref="0x40f21c80" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="ip6_ext" ref="0x40f2b368"/></type-tag>
        </type-pointer>
      </field>
      <field name="hdr_route" ref="0x40f21ce0" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="V:" alignment="V:"><struct-ref name="ip6_route" ref="0x40f21618"/></type-tag>
        </type-pointer>
      </field>
      <field name="hdr_dest" ref="0x40f21d40" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="ip6_ext" ref="0x40f2b368"/></type-tag>
        </type-pointer>
      </field>
      <field name="u_hdr" ref="0x40f21da0" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="u_data" ref="0x40f21e00" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_FILE_plus" ref="0x4045b680" size="V:" alignment="V:">
    </struct>
    <enum loc="63:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c" ref="0x404cdca8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="exception" loc="320:/usr/include/math.h" ref="0x4042dd40" defined="" size="I:32" alignment="I:4">
      <field name="type" ref="0x4042b2b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x4042b310" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x4042b370" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x4042b3d0" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x4042b430" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c" ref="0x404cd380" defined="" size="I:16" alignment="I:4">
      <field name="name" ref="0x404cd990" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x404cd9f0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x404cda50" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x404cdab0" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
              <typename><typedef-ref name="FILE" ref="0x404517e8"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct loc="153:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3d0d0" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x40b3d1e0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x40b3d240" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x40b3d2a0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x40b3d300" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x40b3d360" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x40b3d3c0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x40b3d420" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x40b3d480" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="dio_latency_t" loc="222:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x4131ea60" defined="" size="I:4" alignment="I:4">
      <field name="latency" ref="0x4131ec68" bit-offset="I:0" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
    </struct>
    <struct loc="101:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b44ef8" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x40b43050" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x40b430b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x40b43110" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x40b43170" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x40b431d0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="41:/home/bo/tinyos-morten/tos/types/Ieee154.h" ref="0x408843c0" defined="" size="I:8" alignment="I:2">
      <field name="saddr" ref="0x408844d0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
        </type-int>
      </field>
      <field name="laddr" ref="0x40884530" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40885010"/>
          <typename><typedef-ref name="ieee154_laddr_t" ref="0x40885d18"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="C"  loc="NONE" ref="0x4002d2e0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h" ref="0x405514c8" defined="" size="I:480" alignment="I:4">
      <field name="key" ref="0x40551df8" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x40551e58" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x40551eb8" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x40551f18" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x40551f78" bit-offset="I:256" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x4054f010" bit-offset="I:288" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <struct name="dio_body_t" loc="184:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412db1b8" defined="" size="I:2" alignment="I:1">
      <field name="type" ref="0x412db570" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="container_len" ref="0x412db5d0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="90:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b1eba8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h" ref="0x4073a6f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="macro"  loc="NONE" ref="0x4002da58" size="V:" alignment="V:">
      <field name="macro_name" ref="0x4002db68" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <union loc="133:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3fea0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b3e010" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b3e070" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b3f950"/></type-tag>
      </field>
    </union>
    <enum loc="121:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h" ref="0x40f2bd00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/home/bo/tinyos-morten/tos/types/message.h" ref="0x40682248" defined="" size="I:120" alignment="I:1">
      <field name="header" ref="0x40682e00" bit-offset="I:0" size="I:12">
        <type-array elements="I:12" size="I:12" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x40682e60" bit-offset="I:96" size="I:90">
        <type-array elements="I:90" size="I:90" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x40682ec0" bit-offset="I:816" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x40682f20" bit-offset="I:832" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="15:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioMsg.h" ref="0x40678708" defined="" size="I:12" alignment="I:1">
      <field name="length" ref="0x406773f0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x40677450" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x406774b0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x402a7b58"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x40677510" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x40677570" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x406775d0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x40677630" bit-offset="I:80" size="I:1">
        <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="network_header_t" ref="0x406697a8"/>
          <typename><typedef-ref name="network_header_t" ref="0x40669b90"/></typename>
        </type-tag>
      </field>
      <field name="type" ref="0x40677690" bit-offset="I:88" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="ieee154_header_t" loc="38:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.h" ref="0x40669dd8" defined="" size="I:9" alignment="I:1">
      <field name="fcf" ref="0x40668678" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x406686d8" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x402a7b58"/></typename>
        </type-int>
      </field>
      <field name="destpan" ref="0x40668738" bit-offset="I:24" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x40668798" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x406687f8" bit-offset="I:56" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="74:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h" ref="0x406c2ce8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ip6_route" ref="0x40f21618" size="V:" alignment="V:">
    </struct>
    <struct name="rpl_instance_id" loc="126:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412e1cc0" defined="" size="I:1" alignment="I:1">
      <field name="id" ref="0x412e1ef0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="301:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x413152e0" defined="" size="I:128" alignment="I:4">
      <field name="s_pkt" ref="0x413153f0" bit-offset="I:0" size="I:44">
        <type-tag size="I:44" alignment="I:4"><struct-ref name="ip6_packet" ref="0x40f22b78"/></type-tag>
      </field>
      <field name="dao_base" ref="0x41315450" bit-offset="I:352" size="I:72">
        <type-tag size="I:72" alignment="I:4"><struct-ref name="dao_base_t" ref="0x412df948"/></type-tag>
      </field>
      <field name="v" ref="0x413154b0" bit-offset="I:928" size="I:12">
        <type-array elements="I:1" size="I:12" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="ip_iovec" ref="0x40f33328"/></type-tag>
        </type-array>
      </field>
    </struct>
    <enum loc="25:/home/bo/tinyos-morten/tos/lib/net/blip/shell/Shell.h" ref="0x414e61f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="98:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x412e5180" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="ieee154_fcf_enums" loc="74:/home/bo/tinyos-morten/tos/types/Ieee154.h" ref="0x4089fc98" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="27:/usr/include/_G_config.h" ref="0x4044d238" defined="" size="I:16" alignment="I:4">
      <field name="__pos" ref="0x4044d348" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x402e5cf8"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x4044d3a8" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x4044e4d0"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x4044e6f8"/></typename>
        </type-tag>
      </field>
    </struct>
    <struct name="sim_noise_node_t" loc="73:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h" ref="0x4054f3b0" defined="" size="I:68" alignment="I:4">
      <field name="key" ref="0x4054d370" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x4054d3d0" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x4054d430" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x4054d490" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x4054d4f0" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x404c5240"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x4054d550" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x4054d5b0" bit-offset="I:448" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x4054d610" bit-offset="I:480" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x4054d670" bit-offset="I:512" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="rsol" loc="74:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h" ref="0x41285ab0" defined="" size="I:8" alignment="I:1">
      <field name="type" ref="0x41284140" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="code" ref="0x412841a0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
        </type-int>
      </field>
      <field name="cksum" ref="0x41284200" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x41284260" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="95:/usr/include/bits/pthreadtypes.h" ref="0x40301690" defined="" size="I:4" alignment="I:4">
      <field name="__spins" ref="0x403017a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__list" ref="0x40301800" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x402fc708"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0x402fcbb8"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="327:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x41312798" defined="" size="I:8" alignment="I:4">
      <field name="key" ref="0x413128a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
        </type-int>
      </field>
      <field name="lifetime" ref="0x41312908" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="54:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h" ref="0x40737420" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="253:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b34770" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x40b34880" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x40b348e0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x40b34940" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x40b349a0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="359:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h" ref="0x4130e040" defined="" size="I:24" alignment="I:4">
      <field name="parentIP" ref="0x4130e150" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
      </field>
      <field name="rank" ref="0x4130e1b0" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="etx" ref="0x4130e210" bit-offset="I:144" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="etx_hop" ref="0x4130e270" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </field>
      <field name="valid" ref="0x4130e2d0" bit-offset="I:176" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct loc="87:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h" ref="0x40f365f0" defined="" size="I:2" alignment="I:1">
      <field name="lsn" ref="0x40f36700" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x4002d5b8" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0x401b76e8" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x401b7970" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x401b79d0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x401b7a30" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="150:/usr/include/bits/pthreadtypes.h" ref="0x40306448" defined="" size="I:32" alignment="I:4">
      <field name="__data" ref="0x40306558" bit-offset="I:0" size="I:32">
        <type-tag size="I:32" alignment="I:4"><struct-ref ref="0x40307b28"/></type-tag>
      </field>
      <field name="__size" ref="0x403065b8" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40306618" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="42:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h" ref="0x4069e940" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__pthread_mutex_s" loc="78:/usr/include/bits/pthreadtypes.h" ref="0x402fce28" defined="" size="I:24" alignment="I:4">
      <field name="__lock" ref="0x40301960" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x403019c0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x40301a20" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x40301a80" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x40301ae0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x40301b40" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__list" ref="0x40301ba0" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x402fc708"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0x402fcbb8"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="53:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x4069d368" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="192:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioP.nc" ref="0x40902270" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimRadioP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc" ref="0x40922b10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="RadioAlarmP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="69:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc" ref="0x409d6758" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="49:/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc" ref="0x409c1278" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="62:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc" ref="0x409d26f0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="63:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc" ref="0x409d2da0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="147:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" ref="0x40a24128" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" ref="0x40a4e0c0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="77:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" ref="0x40af65e8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="60:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" ref="0x40ae90d0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="71:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c69e20" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc" ref="0x40c3dee8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x40b783f0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c5adf8" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x40c5af08" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x40c5af68" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x40c59010" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x40c59070" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x40c590d0" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c5a0b0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/home/bo/tinyos-morten/tos/lib/rfxlink/util/TaskletC.nc" ref="0x40cedce8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TaskletC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="326:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40ca4c80" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="189:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c9e5a8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="144:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c9ef50" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40c9a160" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="295:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40cd7040" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="187:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" ref="0x40cb7010" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="78:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" ref="0x40cfd3a8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="58:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" ref="0x40cf9580" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="61:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" ref="0x40d22918" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="59:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerP.nc" ref="0x40d5cc70" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="327:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc" ref="0x40daf950" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="122:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc" ref="0x40e39320" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc" ref="0x40e55a58" defined="" scoped="" size="I:48" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x40e53b18" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x40e53b78" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x40e53bd8" bit-offset="I:96" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x40e53c38" bit-offset="I:160" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x40e53c98" bit-offset="I:224" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x40e53cf8" bit-offset="I:288" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x401b84b8"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x40e53d58" bit-offset="I:296" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x40e53db8" bit-offset="I:304" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x40e53e18" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
            <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x40e53e78" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x40e55a58"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40e55d38"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="423:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc" ref="0x41083f60" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="111:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc" ref="0x411c1d90" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc" ref="0x412d76c0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="UdpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc" ref="0x412d52e8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="UdpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="350:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc" ref="0x412e3010" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="RPLRankP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="124:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc" ref="0x413facb0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="171:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc" ref="0x413fb048" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="125:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc" ref="0x413fa418" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="126:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc" ref="0x413fb968" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="123:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc" ref="0x413f9568" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="101:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc" ref="0x414b3918" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="184:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc" ref="0x414b3010" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct name="cmd_name" loc="70:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc" ref="0x41527570" defined="" scoped="" size="I:11" alignment="I:1">
      <component-ref qname="UDPShellP"/>
      <field name="c_len" ref="0x41527960" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </field>
      <field name="c_name" ref="0x415279c0" bit-offset="I:8" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="52:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc" ref="0x414ddcd0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="cmd_builtin" loc="74:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc" ref="0x41527b10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="UDPShellP"/>
      <field name="action" ref="0x415261f0" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:4" alignment="I:4">
                <type-pointer size="I:4" alignment="I:4">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <enum loc="57:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc" ref="0x414dc380" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="44:/home/bo/tinyos-morten/tos/lib/net/blip/shell/RouteCmdP.nc" ref="0x41567e90" defined="" scoped="" size="I:8" alignment="I:4">
      <component-ref qname="RouteCmdP"/>
      <field name="ifindex" ref="0x41567fa0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x41566018" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="6:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommandC.nc" ref="0x41556958" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="ShellCommandC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="randCM" ref="0x405c05b8" loc="39:/home/bo/tinyos-morten/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x4063d700" loc="283:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x4055abe0" loc="52:/home/bo/tinyos-morten/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="test" ref="0x405c0ab0" loc="41:/home/bo/tinyos-morten/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="ist" ref="0x406ce9a0" loc="46:../TestMessage.h">
      <type-array elements="I:24" size="I:48" alignment="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="__timezone" ref="0x405e65b8" loc="278:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="channelTable" ref="0x404cb8a0" loc="68:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x404c5240"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x405f9a18" loc="58:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:68000" alignment="I:4">
        <type-tag size="I:68" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0x4054f3b0"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x4054d728"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x404cb5e8" loc="67:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c">
      <type-array elements="I:339" size="I:2712" alignment="I:4">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0x404cec68"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x404cd168"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x405e6178" loc="276:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x405c0158" loc="39:/home/bo/tinyos-morten/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x405e40e0" loc="292:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x40530c80" loc="44:/home/bo/tinyos-morten/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/bo/tinyos-morten/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0x40503650"/>
        <typename><typedef-ref name="heap_t" ref="0x40503c08"/></typename>
      </type-tag>
    </variable>
    <variable name="ROOT_RANK" ref="0x4131a2a0" loc="250:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <documentation loc="68:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x4057f990" loc="54:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x405fcd28" loc="51:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randC" ref="0x405c02c8" loc="39:/home/bo/tinyos-morten/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x405f9648" loc="56:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="csmaLow" ref="0x40580510" loc="47:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x40580db8" loc="50:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="heap" ref="0x41082b50" loc="39:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip_malloc.h">
      <type-array elements="I:1500" size="I:1500" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="numTotal" ref="0x405f9348" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x405e6eb0" loc="291:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x4057f110" loc="51:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x4045b930" loc="346:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x4045b680"/></type-tag>
    </variable>
    <variable name="randCD" ref="0x405c0440" loc="39:/home/bo/tinyos-morten/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="j97" ref="0x405c08d8" loc="40:/home/bo/tinyos-morten/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x404a65f8" loc="78:/home/bo/tinyos-morten/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x404aca20" loc="28:/usr/include/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="tzname" ref="0x405e6868" loc="283:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x4050da88" loc="58:/home/bo/tinyos-morten/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x4002a128"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x4045bf20" loc="348:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x4045b680"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x40580298" loc="46:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x4057f3f0" loc="52:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x407205c8" loc="51:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x405a0ab0" loc="10:/home/bo/tinyos-morten/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:4">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0x405a1db8"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x405a0270"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x4045bc28" loc="347:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x4045b680"/></type-tag>
    </variable>
    <variable name="csmaInitLow" ref="0x40580010" loc="45:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x405f90c0" loc="52:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_ticks" ref="0x4055a998" loc="51:/home/bo/tinyos-morten/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
      </type-int>
    </variable>
    <variable name="__daylight" ref="0x405e6388" loc="277:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x40464de8" loc="147:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x405a0698" loc="9:/home/bo/tinyos-morten/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:4004" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x40598930"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x40596010"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x404ac768" loc="27:/usr/include/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x404648c8" loc="145:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x4056e2b8" loc="183:/home/bo/tinyos-morten/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x4055ade0" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x4042db60" loc="307:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x4042fdb0"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x4042d878"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x405a0ca8" loc="11:/home/bo/tinyos-morten/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x4042f210" loc="161:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x40581d00" loc="44:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdout" ref="0x40464b58" loc="146:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x4057fc30" loc="55:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x405807f0" loc="48:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x4057f6d8" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x40580ad0" loc="49:/home/bo/tinyos-morten/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x405c0780" loc="40:/home/bo/tinyos-morten/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x4069b470" loc="66:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x4069de90" loc="60:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x4069dc80" loc="59:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x4069b198" loc="61:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x4069b7e0" loc="67:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x408189a8" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x40818548" loc="51:/home/bo/tinyos-morten/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x40818320" loc="50:/home/bo/tinyos-morten/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x40818730" loc="52:/home/bo/tinyos-morten/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="currentEvent" ref="0x409214f8" loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="client" ref="0x40921180" loc="55:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x4098b640" loc="67:/home/bo/tinyos-morten/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x4098b418" loc="66:/home/bo/tinyos-morten/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x4098b148" loc="65:/home/bo/tinyos-morten/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="pending" ref="0x40996478" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="AutoResourceAcquireLayerC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="qTail" ref="0x409c1bd8" loc="53:/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="resQ" ref="0x409c16f0" loc="51:/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="qHead" ref="0x409c18f8" loc="52:/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="resId" ref="0x409d1460" loc="66:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="state" ref="0x409d1160" loc="65:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="reqResId" ref="0x409d1768" loc="67:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="receivedNumbers" ref="0x40a9f7c8" loc="93:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-array elements="I:5" size="I:5" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sequenceNumber" ref="0x40aa69d8" loc="61:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="ages" ref="0x40ab5550" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-array elements="I:5" size="I:5" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="nodes" ref="0x40ab52b8" loc="49:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-array elements="I:5" size="I:10" alignment="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="flags" ref="0x40ab57f0" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-array elements="I:5" size="I:5" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="time" ref="0x40ab59f0" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="last" ref="0x40ab5bf0" loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="totalRetries" ref="0x40ae80e8" loc="70:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="state" ref="0x40ae9af0" loc="68:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="currentMsg" ref="0x40ae9e50" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="base" ref="0x40b782b0" loc="40:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x40b75f10" loc="39:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x40b75d18" loc="38:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x40b78080" loc="39:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x40baf328" loc="80:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x40baf048" loc="74:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x40c1e940" loc="480:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x40bc6858" loc="185:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x40bb3560" loc="58:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x40bb3268" loc="57:/home/bo/tinyos-morten/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x40c4cb80" loc="55:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x40c4cd98" loc="56:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x40c596e8" loc="69:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x40c59488" loc="68:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x40c5adf8"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x40c59188"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="retries" ref="0x40cb8dc0" loc="184:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="txError" ref="0x40cb8ba8" loc="183:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
      </type-int>
    </variable>
    <variable name="txMsg" ref="0x40cb8990" loc="182:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x40c9a010" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="receiveQueueHead" ref="0x40cd7c38" loc="303:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="receiveQueueData" ref="0x40cd7610" loc="300:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="I:3" size="I:360" alignment="I:1">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="receiveQueue" ref="0x40cd79c0" loc="301:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
            <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="receiveQueueSize" ref="0x40cd7eb0" loc="304:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="nextRandom" ref="0x40cf4598" loc="77:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="txBarrier" ref="0x40cf7558" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="txMsg" ref="0x40cf7318" loc="68:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x40cf9430" loc="57:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="seed" ref="0x40d31010" loc="52:/home/bo/tinyos-morten/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="txMsg" ref="0x40d213a8" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x40d227c8" loc="60:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="ackMsg" ref="0x40d215d0" loc="70:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
        <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
      </type-tag>
    </variable>
    <variable name="txMsg" ref="0x40d5c918" loc="56:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="state" ref="0x40d5cb20" loc="58:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="sendEvent" ref="0x40dcf570" loc="82:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
      </type-tag>
    </variable>
    <variable name="buffer" ref="0x40dcf798" loc="84:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
        <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x40dcfa28" loc="85:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sending" ref="0x40dcf318" loc="81:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x40dcad68" loc="78:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x40dcf010" loc="80:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="collision" ref="0x40e6b560" loc="201:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x40e55010" loc="59:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x40e6b010" loc="198:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x40e55860" loc="62:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x40e6bc10" loc="203:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x40e52180" loc="79:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x40e55a58"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40e55d38"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x40e6b878" loc="202:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x40e6b238" loc="200:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x40e55508" loc="61:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x40e56d28" loc="58:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x40e55228" loc="60:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="injectionMsg" ref="0x40ed44f8" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/AMPacketInjectorP.nc">
      <component-ref qname="AMPacketInjectorP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="injectionBuffer" ref="0x40ed4270" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/AMPacketInjectorP.nc">
      <component-ref qname="AMPacketInjectorP"/>
      <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
        <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
      </type-tag>
    </variable>
    <variable name="sequence_nr" ref="0x40f5b2b8" loc="75:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="payload" ref="0x40f5b068" loc="74:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-tag size="I:26" alignment="I:1"><nx_struct-ref name="radio_count_msg" ref="0x406cde48"/>
        <typename><typedef-ref name="radio_count_msg_t" ref="0x406cb638"/></typename>
      </type-tag>
    </variable>
    <variable name="route_dest" ref="0x40f5cdb8" loc="73:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-tag size="I:20" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x40f2d880"/></type-tag>
    </variable>
    <variable name="timerStarted" ref="0x40f5c8c0" loc="71:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="stats" ref="0x40f5cb18" loc="72:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-tag size="I:35" alignment="I:1"><nx_struct-ref name="udp_report" ref="0x40f36980"/></type-tag>
    </variable>
    <variable name="last_key" ref="0x40fa6938" loc="56:/home/bo/tinyos-morten/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
      </type-int>
    </variable>
    <variable name="routing_table" ref="0x40fa66e8" loc="54:/home/bo/tinyos-morten/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-array elements="I:35" size="I:1680" alignment="I:4">
        <type-tag size="I:48" alignment="I:4"><struct-ref name="route_entry" ref="0x40f9c558"/></type-tag>
      </type-array>
    </variable>
    <variable name="m_short_addr" ref="0x41052950" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_valid_addr" ref="0x410526e0" loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="m_addr" ref="0x41052c58" loc="35:/home/bo/tinyos-morten/tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="m_saddr" ref="0x4105e768" loc="12:/home/bo/tinyos-morten/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
      </type-int>
    </variable>
    <variable name="m_panid" ref="0x4105e9d0" loc="13:/home/bo/tinyos-morten/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
      </type-int>
    </variable>
    <variable name="current_local_label" ref="0x411c0a38" loc="118:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="recon_cache" ref="0x411bf048" loc="132:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <documentation loc="128:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
        <short></short>
      </documentation>
      <component-ref qname="IPDispatchP"/>
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x4107f490"/>
        <typename><typedef-ref name="table_t" ref="0x4107f718"/></typename>
      </type-tag>
    </variable>
    <variable name="radioBusy" ref="0x411c07a8" loc="117:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="state" ref="0x411c04b0" loc="116:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="recon_data" ref="0x411bf468" loc="136:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-array elements="I:3" size="I:108" alignment="I:4">
        <type-tag size="I:36" alignment="I:4"><struct-ref name="lowpan_reconstruct" ref="0x40f1d6f8"/></type-tag>
      </type-array>
    </variable>
    <variable name="stats" ref="0x411c0d38" loc="119:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x40f39a28"/>
        <typename><typedef-ref name="ip_statistics_t" ref="0x40f39e30"/></typename>
      </type-tag>
    </variable>
    <variable name="injectionMsg" ref="0x41220d08" loc="53:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/Ieee154PacketInjectorP.nc">
      <component-ref qname="Ieee154PacketInjectorP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
          <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="injectionBuffer" ref="0x41220a80" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/Ieee154PacketInjectorP.nc">
      <component-ref qname="Ieee154PacketInjectorP"/>
      <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
        <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
      </type-tag>
    </variable>
    <variable name="index" ref="0x41243010" loc="61:/home/bo/tinyos-morten/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x41243540" loc="62:/home/bo/tinyos-morten/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41249eb0"/></type-var>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="free" ref="0x41245dc0" loc="60:/home/bo/tinyos-morten/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="pool" ref="0x412437f8" loc="63:/home/bo/tinyos-morten/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41249eb0"/></type-var>
      </type-array>
    </variable>
    <variable name="tail" ref="0x4126ec60" loc="50:/home/bo/tinyos-morten/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x4126ef08" loc="51:/home/bo/tinyos-morten/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x4126e7b8" loc="48:/home/bo/tinyos-morten/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x412711b8"/></type-var>
      </type-array>
      <attribute-value>
        <attribute-ref name="one_nok" ref="0x401b5b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="one_nok" ref="0x401b5b80"/></type-tag>
        </value-structured>
      </attribute-value>
    </variable>
    <variable name="head" ref="0x4126e9b8" loc="49:/home/bo/tinyos-morten/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="last_localport" ref="0x412d59c8" loc="33:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="local_ports" ref="0x412d51a8" loc="27:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-array elements="I:3" size="I:6" alignment="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="stats" ref="0x412d7e18" loc="26:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x40f36010"/>
        <typename><typedef-ref name="udp_statistics_t" ref="0x40f36298"/></typename>
      </type-tag>
    </variable>
    <variable name="m_running" ref="0x4133f5b8" loc="122:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="ROOT" ref="0x4133f2e8" loc="121:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="parentNum" ref="0x412fc440" loc="101:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="parentChanges" ref="0x412fc168" loc="100:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="Prf" ref="0x41340988" loc="117:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="METRICID" ref="0x41340010" loc="113:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="etxConstraint" ref="0x41341048" loc="107:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="ignore" ref="0x4133f048" loc="120:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="hasOF" ref="0x413406e0" loc="116:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="OCP" ref="0x41340210" loc="114:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="VERSION" ref="0x412fc710" loc="102:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="nodeEtx" ref="0x412fc9e0" loc="103:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="alpha" ref="0x41340c38" loc="118:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="minRank" ref="0x41301860" loc="96:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="DODAG_MAX" ref="0x41341d10" loc="112:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="DODAGID" ref="0x41341a20" loc="111:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="nodeRank" ref="0x41301530" loc="95:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="beta" ref="0x41340e38" loc="119:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="myQDelay" ref="0x41340448" loc="115:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="MAX_RANK_INCREASE" ref="0x412fcd18" loc="104:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="leafState" ref="0x41301b80" loc="97:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="prevParent" ref="0x41301ec0" loc="99:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="hasConstraint" ref="0x413415b0" loc="109:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-array elements="I:2" size="I:2" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="latencyConstraint" ref="0x413412d8" loc="108:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="parentSet" ref="0x4133f958" loc="124:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-array elements="I:20" size="I:480" alignment="I:4">
        <type-tag size="I:24" alignment="I:4"><struct-ref ref="0x4130e040"/>
          <typename><typedef-ref name="parent_t" ref="0x4130e388"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="ROOT_ADDR" ref="0x413cc4f8" loc="112:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="DEF_PREFIX" ref="0x413cc010" loc="109:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="DAG_PREF" ref="0x413d0ac0" loc="91:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="DODAGVersionNumber" ref="0x413d0460" loc="89:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="DTSN" ref="0x413ce2b8" loc="102:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="hasDODAG" ref="0x4138aec0" loc="81:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="MinHopRankInc" ref="0x413cfca0" loc="99:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="tricklePeriod" ref="0x413d1f08" loc="75:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="countdio" ref="0x413ce598" loc="104:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="UNICAST_DIO" ref="0x413cec48" loc="107:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="MULTICAST_ADDR" ref="0x413cc798" loc="113:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="RPLInstanceID" ref="0x413d2e40" loc="87:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="DIOIntMin" ref="0x413cf6c0" loc="97:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="INCONSISTENCY_COUNT" ref="0x413ea5f0" loc="347:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="MaxRankInc" ref="0x413ce010" loc="100:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="DIOIntDouble" ref="0x413cf3e8" loc="96:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="sentDIOFlag" ref="0x4138a3a0" loc="77:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="I_AM_ROOT" ref="0x4138a670" loc="78:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="doubleCounter" ref="0x413cf0f0" loc="94:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="node_rank" ref="0x413d24b8" loc="83:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="LOWRANK" ref="0x413d27e8" loc="84:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="UNICAST_DIO_ADDR" ref="0x413cca50" loc="114:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="running" ref="0x4138abf8" loc="80:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="DODAGID" ref="0x413d0158" loc="88:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="redunCounter" ref="0x413d0db8" loc="93:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="countdis" ref="0x413ce978" loc="105:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="MOP" ref="0x413d06f8" loc="90:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="randomTime" ref="0x4138a178" loc="76:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="riskHigh" ref="0x413d21c0" loc="82:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="ADDR_MY_IP" ref="0x413cc288" loc="111:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="DIORedun" ref="0x413cf990" loc="98:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="I_AM_LEAF" ref="0x4138a940" loc="79:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="GROUND_STATE" ref="0x413d2b40" loc="85:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="dao_double_count" ref="0x41458cc0" loc="69:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="init_daorank" ref="0x41456318" loc="78:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="DTSN" ref="0x41457cb0" loc="76:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="m_running" ref="0x414555f8" loc="86:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="count" ref="0x41452118" loc="99:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="downwards_table_count" ref="0x414552b8" loc="85:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="PATH_CONTROL" ref="0x41456b68" loc="82:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="downwards_table" ref="0x41455010" loc="84:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-array elements="I:35" size="I:280" alignment="I:4">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x41312798"/>
          <typename><typedef-ref name="downwards_table_t" ref="0x413129c0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="remove_time" ref="0x41457610" loc="74:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="dao_rate" ref="0x41457010" loc="70:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="delay_dao" ref="0x414572f8" loc="71:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="dao_table_pos" ref="0x414579f8" loc="75:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="daoseq" ref="0x41456010" loc="77:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="MY_ADDR" ref="0x41456618" loc="79:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="PATH_SEQUENCE" ref="0x41456870" loc="81:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </variable>
    <variable name="newParent" ref="0x414bd3e8" loc="23:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="parentChanges" ref="0x414beb20" loc="20:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="nodeEtx" ref="0x414bd128" loc="22:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="nodeRank" ref="0x414be270" loc="15:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="minMetric" ref="0x414be5b8" loc="16:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="prevParent" ref="0x414be8a8" loc="17:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="desiredParent" ref="0x414bee30" loc="21:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="min_hop_rank_inc" ref="0x414bd728" loc="24:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="builtin_actions" ref="0x4150b0b8" loc="199:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="cmd_builtin" scoped="" ref="0x41527b10"/></type-tag>
      </type-array>
    </variable>
    <variable name="reply_buf" ref="0x41523da8" loc="101:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="ping_summary" ref="0x415219f8" loc="104:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-qualified const="">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-qualified>
      </type-pointer>
    </variable>
    <variable name="help_str" ref="0x41521010" loc="102:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="ping_fmt" ref="0x41521508" loc="103:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-qualified const="">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-qualified>
      </type-pointer>
    </variable>
    <variable name="session_active" ref="0x414dd450" loc="47:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </variable>
    <variable name="boot_time" ref="0x414dd970" loc="49:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </variable>
    <variable name="ident_string" ref="0x41521ed8" loc="105:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="externals" ref="0x415264d0" loc="78:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-array elements="I:1" size="I:11" alignment="I:1">
        <type-tag size="I:11" alignment="I:1"><struct-ref name="cmd_name" scoped="" ref="0x41527570"/></type-tag>
      </type-array>
    </variable>
    <variable name="session_endpoint" ref="0x414dd730" loc="48:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-tag size="I:20" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x40f2d880"/></type-tag>
    </variable>
    <variable name="uptime" ref="0x414ddb90" loc="50:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x401bb4a0"/></typename>
      </type-int>
    </variable>
    <variable name="builtins" ref="0x4150d858" loc="194:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-array elements="I:5" size="I:55" alignment="I:1">
        <type-tag size="I:11" alignment="I:1"><struct-ref name="cmd_name" scoped="" ref="0x41527570"/></type-tag>
      </type-array>
    </variable>
    <variable name="ping_n" ref="0x4153aba8" loc="43:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="ping_dest" ref="0x41539170" loc="44:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x40f30d00"/></type-tag>
    </variable>
    <variable name="ping_ident" ref="0x4153aed8" loc="43:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="ping_rcv" ref="0x4153ad38" loc="43:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="ping_seq" ref="0x4153aa30" loc="43:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </variable>
    <variable name="cur_entry" ref="0x415638f8" loc="58:/home/bo/tinyos-morten/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="header" ref="0x41567880" loc="43:/home/bo/tinyos-morten/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="ifaces" ref="0x41566168" loc="47:/home/bo/tinyos-morten/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-array elements="I:3" size="I:24" alignment="I:4">
        <type-tag size="I:8" alignment="I:4"><struct-ref scoped="" ref="0x41567e90"/></type-tag>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x40708530" loc="1075:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x406fead8" loc="943:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x40703570" loc="1132:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x4070ad40" loc="1058:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x40725240" loc="85:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x406db568" loc="140:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x406c6850" loc="81:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x406f5438" loc="786:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x40720200" loc="1299:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x40739010" loc="133:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x40b37758" loc="222:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LEDS_LED4" ref="0x40ef3010" loc="48:/home/bo/tinyos-morten/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x407266a0" loc="80:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x406e61f8" loc="705:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x406ff640" loc="924:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x40704e50" loc="1126:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x40717568" loc="1154:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x40700d58" loc="919:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x40715c70" loc="1182:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x40707e50" loc="1093:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x407051c0" loc="1106:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x406ed0e8" loc="876:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x40701600" loc="902:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DIO_BASE_OPT_DAG_TIMER_CONFIG" ref="0x41317b48" loc="285:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="ICMP_NEIGHBOR_HOPLIMIT" ref="0x40f26318" loc="161:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x40675d90" loc="98:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x406e88e0" loc="687:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LOWPAN_NHC_UDP_PORT_DST_FULL" ref="0x406cf010" loc="140:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x406ed830" loc="882:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x406fc3e0" loc="961:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x406f71f8" loc="763:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x406e40a8" loc="730:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x40722200" loc="1275:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x4042d010" loc="297:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x40b363f0" loc="227:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x406ef7c8" loc="858:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x40700f20" loc="920:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x40b37e10" loc="225:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x40728330" loc="64:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x406d5dd8" loc="269:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x406e6e60" loc="714:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x406f1cd8" loc="839:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x40436a00" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x406d9130" loc="169:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="AM_TEST_MSG" ref="0x406cfe40" loc="39:../TestMessage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x406fe740" loc="939:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x40729248" loc="52:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x40718010" loc="1138:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x407166d0" loc="1166:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x406d4ec8" loc="283:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x406fde78" loc="956:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x40714e28" loc="1194:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x40711570" loc="1222:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DIO_BASE_OPT_DST_PREFIX" ref="0x41317890" loc="284:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x40b21c20" loc="58:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x406f0780" loc="847:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x40707558" loc="1086:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x406e83a0" loc="684:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x406d3e00" loc="298:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DIO_BASE_OPT_PADN" ref="0x413173a0" loc="282:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x406e2c98" loc="760:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x406f3d50" loc="817:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x406f9f18" loc="1004:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x40b38b78" loc="217:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x406c8440" loc="36:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x406f0228" loc="844:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x40711200" loc="1218:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x4070f8f8" loc="1246:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LOWMSG_BCAST_LEN" ref="0x4069e380" loc="37:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="LOWPAN_IPHC_HLIM_MASK" ref="0x406c0640" loc="87:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x406fd948" loc="953:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x4073b648" loc="109:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x40b37bf8" loc="224:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LOWMSG_FRAGN_HDR" ref="0x40f1aa08" loc="82:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x40701438" loc="901:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x406daed0" loc="166:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x4072ba48" loc="128:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x40b1e0a8" loc="78:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ICMPV6_CODE_DIO" ref="0x41319b30" loc="267:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x40b44408" loc="94:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x407058b0" loc="1112:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x40b21280" loc="54:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TCP_FLAG_FIN" ref="0x40f25410" loc="181:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x406e4ef8" loc="740:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x40707c88" loc="1092:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x4070ec00" loc="1261:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x40438340" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x40674910" loc="106:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x406c8e68" loc="47:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="LOWPAN_NHC_UDP_PORT_SHORT" ref="0x406cf2a0" loc="141:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x406d9bb8" loc="182:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x406da668" loc="154:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x40552498" loc="56:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x406fd3e8" loc="948:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x406f9d50" loc="1003:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x406f6788" loc="779:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x406f3650" loc="811:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x406f2430" loc="821:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x4070ea30" loc="1258:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x406f5ed8" loc="794:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x40722c78" loc="1283:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x406f9610" loc="997:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x40725ad8" loc="89:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x40b1e7d8" loc="85:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x406d8450" loc="194:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x406f6058" loc="773:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x406ebe38" loc="679:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LOWPAN_IPHC_SAM_SHIFT" ref="0x406bf750" loc="96:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x406e5eb0" loc="727:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x40728bb0" loc="68:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x406e5778" loc="721:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x40675248" loc="89:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x40727290" loc="71:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x4070dcf0" loc="1025:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x40b38dc0" loc="218:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x40739bf0" loc="145:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x4042d188" loc="298:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x406192b8" loc="56:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x40739e20" loc="146:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IEEE154_TYPE_BEACON" ref="0x4089c350" loc="85:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x406d4010" loc="272:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x40723710" loc="1267:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x407213a0" loc="1289:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x4070c0a8" loc="1027:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="IST_SIZE" ref="0x406cf9f8" loc="37:../TestMessage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LOWPAN_NHC_NH" ref="0x406bbde0" loc="130:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="T_ACTIVE" ref="0x40f3bc20" loc="194:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x40718e20" loc="1148:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x40715550" loc="1176:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x40713c30" loc="1204:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x407103a0" loc="1232:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x406f5d18" loc="793:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x406fe010" loc="933:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x40711de0" loc="1227:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x406f6cf0" loc="782:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x406fbe58" loc="980:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x4070e520" loc="1255:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x40b214e0" loc="55:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="MAX_REPLY_LEN" ref="0x414e63c8" loc="26:/home/bo/tinyos-morten/tos/lib/net/blip/shell/Shell.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LOWPAN_NHC_EID_MOBILE" ref="0x406bb7e8" loc="127:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ICMP_TYPE_ECHO_REPLY" ref="0x40f276b0" loc="156:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x4070c278" loc="1030:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ICMP_TYPE_ECHO_PKT_TOO_BIG" ref="0x40f28c68" loc="152:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x406c74d8" loc="54:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="IANA_UDP" ref="0x40f2a0a8" loc="123:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x406c8650" loc="39:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x406d57a8" loc="264:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x406e5220" loc="718:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x40b21748" loc="56:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x406d7120" loc="216:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x406f49b0" loc="802:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x40722590" loc="1277:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x40721c80" loc="1296:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="LEDS_LED7" ref="0x40ef38a8" loc="51:/home/bo/tinyos-morten/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x406e7560" loc="696:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x406efb48" loc="860:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x407048f8" loc="1123:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LOWPAN_IPHC_AC_CONTEXT" ref="0x406bfe40" loc="100:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x40674158" loc="103:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x406db350" loc="139:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x406d6248" loc="238:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x40717010" loc="1151:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="IPV6_DEST" ref="0x40f29298" loc="135:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x40706c58" loc="1103:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x406dcca0" loc="134:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="LOWPAN_FRAG1_PATTERN" ref="0x406c3a78" loc="59:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x407041d0" loc="1117:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x407188e0" loc="1145:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x40715010" loc="1173:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x407136f0" loc="1201:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x40739250" loc="134:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x40739608" loc="139:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x40b20198" loc="60:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x40b36188" loc="226:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x40552dd0" loc="60:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x406d4878" loc="278:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x406e4990" loc="735:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x40723c70" loc="1272:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x40723550" loc="1266:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x407211e0" loc="1288:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ROUTE_IFACE_PPP" ref="0x40f9d460" loc="14:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="IPV6_AUTH" ref="0x40f2ac78" loc="132:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x406f0b08" loc="849:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="LOWPAN_IPHC_CID_PRESENT" ref="0x406bf4e8" loc="94:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LOWMSG_MESH_HDR" ref="0x40f1a0a8" loc="79:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x406f03f0" loc="845:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x40700478" loc="912:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x4072b7f8" loc="127:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x406eeb78" loc="873:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x40619a08" loc="60:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="TRICKLE_PERIOD" ref="0x41287430" loc="35:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x4070d7c0" loc="1022:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x40727b78" loc="75:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x406d2058" loc="301:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x406d28f8" loc="313:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x404351e0" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x4070b0a8" loc="1040:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x40707390" loc="1085:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x406f2978" loc="826:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="LOWPAN_MESH_HOPS_MASK" ref="0x406c2b28" loc="68:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x4073a368" loc="121:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x406d7dd8" loc="232:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x40702af8" loc="894:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x406fccb0" loc="968:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x406f39d8" loc="815:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x406c6c80" loc="87:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x406e63c0" loc="706:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DIO_BASE_FLAG_DA_TRIGGER" ref="0x413183e8" loc="273:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x40714590" loc="1187:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x40712c88" loc="1215:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x4070f3a0" loc="1243:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x406d9dc8" loc="185:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x406d9788" loc="176:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="TCP_FLAG_ACK" ref="0x40f25c50" loc="185:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="LOWPAN_NHC_UDP_PORT_MASK" ref="0x406ba7b0" loc="137:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_FCF_SECURITY_ENABLED" ref="0x4089d1d0" loc="76:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LOWPAN_MESH_PATTERN" ref="0x406c3818" loc="58:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x406fd778" loc="950:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LOWPAN_IPHC_AM_M_48" ref="0x406bd0a8" loc="109:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x406d3358" loc="287:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x40729c48" loc="61:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x40727948" loc="74:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x4073b220" loc="107:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x40710c60" loc="1237:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x406dacb0" loc="163:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LOWPAN_NHC_UDP_PORT_SRC_FULL" ref="0x406bace8" loc="139:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x406e3808" loc="745:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x406db130" loc="136:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x406d5bc8" loc="268:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="LOWPAN_IPHC_AM_0" ref="0x406be9a8" loc="105:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x406f63e8" loc="775:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x40619650" loc="58:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x40727058" loc="70:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x40727708" loc="73:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x405446d0" loc="52:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x40725010" loc="84:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x406f3ef8" loc="818:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x40708e10" loc="1082:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="RPL_DODAG_METRIC_CONTAINER_TYPE" ref="0x412e5408" loc="99:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x406fee68" loc="945:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x407038d0" loc="1134:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x40716010" loc="1162:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x406dbdd0" loc="146:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x406d6ec0" loc="254:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x406cbdc0" loc="27:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x406c5550" loc="99:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LEDS_LED2" ref="0x40ef6990" loc="46:/home/bo/tinyos-morten/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ICMP_TYPE_ECHO_DEST_UNREACH" ref="0x40f289d0" loc="151:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x40703200" loc="1128:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x407178f8" loc="1156:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x40714038" loc="1184:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x40712730" loc="1212:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x407000e8" loc="910:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x406e7c70" loc="700:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x4070b7b8" loc="1044:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RPL_TRANSIT_INFORMATION_TYPE" ref="0x412e5d98" loc="103:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x406f8100" loc="1005:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x40705520" loc="1108:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IEEE154_ADDR_NONE" ref="0x4089cea0" loc="92:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x406facd0" loc="992:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x406f7ad8" loc="770:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x406e8c60" loc="689:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x4070d5f8" loc="1021:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x40b3a600" loc="189:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x406edbd0" loc="884:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x406f7578" loc="765:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x4073a570" loc="122:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:96" name="LOWPAN_DISPATCH_BYTE_VAL" ref="0x406c1298" loc="76:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x40b38930" loc="216:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IEEE154_TYPE_MASK" ref="0x40668d10" loc="76:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x40702e90" loc="896:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ICMPV6_CODE_DIS" ref="0x41319908" loc="266:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LOWPAN_NHC_UDP_CKSUM" ref="0x406ba528" loc="135:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x406f0058" loc="841:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x4070a280" loc="1052:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x40544928" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x406fc5a0" loc="962:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ICMP_TYPE_ROUTER_ADV" ref="0x40f27b70" loc="158:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x406c8a48" loc="43:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x406fe3b0" loc="937:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x40716a30" loc="1168:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x407131c0" loc="1196:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x407118d0" loc="1224:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x4070e010" loc="1252:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LOWPAN_IPHC_TF_ECN_FL" ref="0x406c1c18" loc="81:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x407078e8" loc="1088:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LOWPAN_IPHC_AM_16" ref="0x406be770" loc="104:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x406e8720" loc="686:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x406fa3d8" loc="985:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x40726010" loc="77:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x4042f4a8" loc="204:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x406d3bd8" loc="295:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x40b1edb0" loc="91:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x40552948" loc="58:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x40b1f7c8" loc="71:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x406c5130" loc="93:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x40709a00" loc="1067:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x4070fc88" loc="1248:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_ADDR_MASK" ref="0x4067b010" loc="77:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x405496b0" loc="99:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x406f0e88" loc="851:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x40700638" loc="913:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="IPV6_MOBILITY" ref="0x40f294b0" loc="136:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x40701278" loc="900:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x407092d8" loc="1063:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x406d8660" loc="197:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x40705c30" loc="1114:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x407183a0" loc="1142:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x406e2908" loc="756:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x406e4b58" loc="736:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x40723010" loc="1263:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x406e23b0" loc="753:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1280" name="INET_MTU" ref="0x4069eae8" loc="43:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x406e2578" loc="754:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x406ee620" loc="870:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x406d6038" loc="235:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x406ffb90" loc="929:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x406efec8" loc="864:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x406f90a8" loc="994:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x406d8cc0" loc="210:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x406f97e0" loc="998:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x4070a7e0" loc="1055:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x40708010" loc="1072:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x406f5270" loc="785:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x406f3100" loc="808:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x406f2280" loc="820:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x40721010" loc="1285:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x406d2280" loc="304:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x406da440" loc="151:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x406d3570" loc="288:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x406fdaf8" loc="954:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x40707010" loc="1083:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x40706578" loc="1097:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x40726d30" loc="83:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x4073b860" loc="110:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DIO_BASE_FLAG_PREF_7" ref="0x41318d90" loc="277:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x4042f7d0" loc="208:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x40702588" loc="891:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x406e5b08" loc="723:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:243" name="RPL_HBH_RANK_TYPE" ref="0x412e2d78" loc="112:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RPL_IFACE" ref="0x412e2b38" loc="111:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="LOWPAN_MESH_V_MASK" ref="0x406c2678" loc="66:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x4070bb40" loc="1046:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x406d4cb0" loc="282:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ROUTE_IFACE_154" ref="0x40f9d238" loc="13:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x406d2d30" loc="319:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="IEEE154_ADDR_SHORT" ref="0x4089b168" loc="93:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x40721720" loc="1291:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x404a61d8" loc="76:/home/bo/tinyos-morten/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x40619480" loc="57:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="LOWPAN_NHC_EID_MASK" ref="0x406bc3d0" loc="122:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x40735328" loc="61:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ICMP_TYPE_NEIGHBOR_ADV" ref="0x40f260a8" loc="160:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x407158d0" loc="1178:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x40712010" loc="1206:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x40710720" loc="1234:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x40737e80" loc="58:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x406f4b80" loc="803:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x40b205e0" loc="64:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x406e39d0" loc="746:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x4042d308" loc="299:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x406e7010" loc="691:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x40701b48" loc="905:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="IEEE154_FCF_SRC_ADDR_MODE" ref="0x4089de38" loc="81:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x40706038" loc="1094:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="IPV6_IPV6" ref="0x40f2a688" loc="129:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="IANA_TCP" ref="0x40f2a290" loc="124:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x4072bcd0" loc="129:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x4070c970" loc="1034:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x407033c0" loc="1131:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="IEEE154_MIN_HDR_SZ" ref="0x4089fa78" loc="61:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x406f50a8" loc="784:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x404cea58" loc="48:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x406c8220" loc="33:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x40720038" loc="1298:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x40b1e9e8" loc="86:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x40b44218" loc="93:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="LEDS_LED5" ref="0x40ef32e8" loc="49:/home/bo/tinyos-morten/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TCP_FLAG_RST" ref="0x40f25830" loc="183:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x406e78e0" loc="698:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x406e6038" loc="704:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x406d6a88" loc="250:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x406ff480" loc="923:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x40704c88" loc="1125:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x407173a0" loc="1153:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x40715aa8" loc="1181:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="LOWMSG_IPV6" ref="0x40f50320" loc="85:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x406fb918" loc="977:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IEEE154_FCF_FRAME_TYPE" ref="0x4089fec8" loc="75:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x406fb3d8" loc="974:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x40705010" loc="1105:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IEEE154_TYPE_DATA" ref="0x4089c590" loc="86:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x40727da8" loc="76:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5000" name="BUTTON_DELAY_TIMER" ref="0x406ce6c8" loc="43:../TestMessage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x406ed660" loc="881:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x406d6878" loc="247:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x406f7038" loc="762:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x406d4228" loc="273:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x406d3138" loc="284:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x406e4600" loc="733:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x40722038" loc="1274:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="LOWPAN_NHC_EID_DEST" ref="0x406bb3f0" loc="126:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x407021d8" loc="887:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x40728538" loc="65:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x406e6ca0" loc="713:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x406eef08" loc="875:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="LOWPAN_IPHC_CID_MASK" ref="0x406bf270" loc="93:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x40544e50" loc="55:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="IEEE154_FCF_DEST_ADDR_MODE" ref="0x4089dba8" loc="80:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RPL_DEFAULT_INSTANCE" ref="0x4131aae8" loc="254:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DIO_BASE_OPT_PAD1" ref="0x41317160" loc="281:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x40703de0" loc="1137:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x40716520" loc="1165:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x40434168" loc="60:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x406fdcb8" loc="955:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x40714c78" loc="1193:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x407113c0" loc="1221:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x406d24a8" loc="307:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LOWPAN_IPHC_NH_MASK" ref="0x406c0170" loc="84:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ICMP_TYPE_ECHO_REQUEST" ref="0x40f27450" loc="155:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x406f05b8" loc="846:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x406d9350" loc="172:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="IEEE154_FCF_FRAME_PENDING" ref="0x4089d460" loc="77:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="IEEE154_TYPE_ACK" ref="0x4089c7c8" loc="87:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x406f4448" loc="799:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x406f2cf8" loc="828:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x406f15e8" loc="835:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x406e21e0" loc="752:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x4070b438" loc="1042:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x406e2ad8" loc="759:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x40436250" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x4070c7b0" loc="1033:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x40b1f298" loc="69:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x406e6750" loc="708:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x406c5980" loc="105:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x406f9270" loc="995:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x40711038" loc="1217:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x4070f730" loc="1245:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x406ebab0" loc="677:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x406e81d0" loc="681:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LOWPAN_IPHC_HLIM_1" ref="0x406c0af0" loc="89:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:240" name="LOWPAN_NHC_UDP_PATTERN" ref="0x406ba2c8" loc="133:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x406da010" loc="149:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x40729838" loc="59:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x40724dc0" loc="105:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x407056f0" loc="1111:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x407350a8" loc="59:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x406e3478" loc="743:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x40707ac0" loc="1091:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x40728df0" loc="69:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x4070af20" loc="1061:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LOWMSG_BCAST_HDR" ref="0x40f1a3c8" loc="80:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x4073bc98" loc="112:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LOWPAN_IPHC_TF_ECN_DSCP" ref="0x406c19b0" loc="80:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x40726b00" loc="82:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x406d5360" loc="258:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x406fd220" loc="947:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x40703c30" loc="1136:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x406f9b88" loc="1002:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x406db780" loc="141:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x40716370" loc="1164:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x40714ac8" loc="1192:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x4042d488" loc="300:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LOWMSG_FRAG1_HDR" ref="0x40f1a6e8" loc="81:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x406f57c8" loc="790:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x4070e880" loc="1257:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x40722ac8" loc="1282:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x406f9440" loc="996:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ICMPV6_TYPE" ref="0x413195d0" loc="262:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x406f7e68" loc="772:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_ADDR_EXT" ref="0x4089b3a0" loc="94:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x406c6010" loc="69:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x406e55b0" loc="720:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x406f8810" loc="1011:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x406e8010" loc="680:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:127" name="IEEE154_LINK_MTU" ref="0x40884ea0" loc="51:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x406daaa0" loc="160:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x40b380a8" loc="212:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x4072bf10" loc="130:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x404558a8" loc="210:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x40718c60" loc="1147:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x40715390" loc="1175:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x40713a70" loc="1203:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x407101e0" loc="1231:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x406f3818" loc="812:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x406fe1d8" loc="934:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x406f6ec0" loc="783:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x406fbc98" loc="979:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="LOWPAN_IPHC_AM_MASK" ref="0x406be0a8" loc="101:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x40713520" loc="1198:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x406dc230" loc="119:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x40711c30" loc="1226:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x407094a0" loc="1064:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x4070e370" loc="1254:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x406fa058" loc="983:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x40737988" loc="56:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LOWPAN_MESH_F_MASK" ref="0x406c28c0" loc="67:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x406ef600" loc="857:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x40b20830" loc="65:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x406e6920" loc="711:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x4070d438" loc="1020:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x406f4f20" loc="807:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x406d8010" loc="188:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x40619dc0" loc="62:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x406c5db0" loc="111:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x406e73a0" loc="695:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x406ef988" loc="859:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x407009b8" loc="915:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x40700b90" loc="918:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x40708a80" loc="1078:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x40704730" loc="1122:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x406d6ca8" loc="253:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ICMP_EXT_TYPE_PREFIX" ref="0x41253bd0" loc="26:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DIO_BASE_OPT_DAG_METRIC" ref="0x41317618" loc="283:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x407274c8" loc="72:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x406d7998" loc="226:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x404556d8" loc="209:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="LOWPAN_FRAGN_PATTERN" ref="0x406c3cd8" loc="60:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x406f89d0" loc="1012:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x40708370" loc="1074:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x40706aa8" loc="1102:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x40674660" loc="105:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ICMP_TYPE_ECHO_PARAM_PROBLEM" ref="0x40f271e0" loc="154:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x40737c58" loc="57:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x40704010" loc="1116:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x40718720" loc="1144:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x40716dc0" loc="1172:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ROUTE_DROP_NOROUTE" ref="0x40f9d740" loc="18:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x406e47c8" loc="734:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x40723aa8" loc="1271:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x40b386f8" loc="215:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x40723390" loc="1265:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x4073b010" loc="106:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x406e5058" loc="717:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x406ff810" loc="927:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="LOWMSG_MESH_LEN" ref="0x4069e148" loc="36:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x406f0948" loc="848:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x407002b0" loc="911:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_IPHC_DAM_SHIFT" ref="0x406bfbd0" loc="98:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x406ee9b0" loc="872:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x406a11e8" loc="64:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="LOWPAN_LINK_MTU" ref="0x406c3010" loc="45:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x406f8ed8" loc="1015:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ICMP_CODE_ASSEMBLY_EXCEEDED" ref="0x40f26858" loc="164:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x406f25f8" loc="822:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x40725470" loc="86:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x407086f0" loc="1076:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x406c7b50" loc="63:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x406ec010" loc="322:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x40b20d08" loc="67:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x406fc218" loc="960:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x406fc750" loc="963:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x406fb598" loc="975:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x407071d0" loc="1084:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x4073a978" loc="127:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="IPV6_SEC" ref="0x40f2ae60" loc="133:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="T_FAILED1" ref="0x40f3b660" loc="191:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x4070bec0" loc="1048:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="IPV6_FRAG" ref="0x40f2aa88" loc="131:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x406d7bb8" loc="229:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DIO_BASE_FLAG_PREF_5" ref="0x413188d0" loc="275:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x40702928" loc="893:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10240" name="TRICKLE_JITTER" ref="0x41287200" loc="33:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RPL_MOP_No_Storing" ref="0x412e2258" loc="105:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x406f2b38" loc="827:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_IPHC_HLIM_NONE" ref="0x406c08a8" loc="88:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x406c6640" loc="78:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LEDS_LED0" ref="0x40ef63e0" loc="44:/home/bo/tinyos-morten/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x40717c88" loc="1158:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x406f5608" loc="789:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x406f1968" loc="837:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x407143c8" loc="1186:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x40712ac0" loc="1214:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x406fa928" loc="988:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x4070f1d8" loc="1242:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x40b3a3c0" loc="188:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RPL_DODAG_CONFIG_TYPE" ref="0x412e58c0" loc="101:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="NUMBER_OF_PARENTS" ref="0x4131ad28" loc="255:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x406e3d70" loc="750:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x406fd5b0" loc="949:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="BASE_RANK" ref="0x4131a670" loc="252:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x40729e50" loc="62:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x406fc910" loc="964:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x406fce70" loc="969:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x40712390" loc="1208:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x40710aa0" loc="1236:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x40b384d8" loc="214:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x406f4618" loc="800:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="N_RECONSTRUCTIONS" ref="0x40ef7e70" loc="29:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatch.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x4042d610" loc="301:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x406e3640" loc="744:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x4070ccf0" loc="1036:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="LOWPAN_IPHC_TF_NONE" ref="0x406c1738" loc="79:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x406d6458" loc="241:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="RPL_DST_PREFIX_TYPE" ref="0x412e5658" loc="100:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x407063b8" loc="1096:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x406feca0" loc="944:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x40709bc8" loc="1068:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x40703720" loc="1133:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x40717e48" loc="1161:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x406c6e90" loc="90:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x406d8ed0" loc="213:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LEDS_LED3" ref="0x40ef6c68" loc="47:/home/bo/tinyos-morten/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x4070b270" loc="1041:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x404554f0" loc="208:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x406e7aa8" loc="699:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x40703038" loc="1127:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x40717730" loc="1155:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x40715e38" loc="1183:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x40712568" loc="1211:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="N_FRAGMENTS" ref="0x40eff368" loc="31:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatch.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x40709838" loc="1066:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="LOWPAN_NHC_EID_IPV6" ref="0x406bbbc8" loc="128:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="TCP_FLAG_PSH" ref="0x40f25a40" loc="184:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x40705370" loc="1107:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x406ed2b0" loc="877:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x407017c8" loc="903:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x40b21e90" loc="59:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x406f7910" loc="769:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x406e8aa0" loc="688:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x40737698" loc="55:/home/bo/tinyos-morten/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x4073b430" loc="108:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x406ee448" loc="867:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x406eda00" loc="883:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3000" name="NO_PACKET" ref="0x406ce058" loc="40:../TestMessage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x406f73b8" loc="764:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="RPL_MOP_Storing_No_Multicast" ref="0x412e2508" loc="106:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x406d4a90" loc="279:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x406e4270" loc="731:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x405498d0" loc="103:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x407223c8" loc="1276:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x40721ab8" loc="1295:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x4073bec0" loc="116:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="RPL_TARGET_TYPE" ref="0x412e5ae8" loc="102:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x406ef270" loc="855:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x406ff100" loc="921:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x407256a0" loc="87:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x40728128" loc="63:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x40b37290" loc="220:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x406f1e88" loc="840:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x406dbbb8" loc="145:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x406eb728" loc="675:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x40b1f010" loc="68:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x406dc010" loc="116:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x406758b8" loc="96:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="LOWPAN_IPHC_TF_MASK" ref="0x406c14e8" loc="78:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x406c8848" loc="41:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x40435990" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x406fe578" loc="938:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x4070d268" loc="1017:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x40716880" loc="1167:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x406fc058" loc="957:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x40713010" loc="1195:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x40711720" loc="1223:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x4070fe48" loc="1251:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x40b37030" loc="219:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="IPV6_ROUTING" ref="0x40f2a898" loc="130:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x40707720" loc="1087:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ROUTE_IFACE_ALL" ref="0x40f9d010" loc="12:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x406e8560" loc="685:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x406f6b20" loc="781:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x406f10a8" loc="830:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x406fa218" loc="984:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x4070b978" loc="1045:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x4072a190" loc="131:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x406f2eb8" loc="829:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x406d39b0" loc="292:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ICMP_TYPE_ROUTER_SOL" ref="0x40f27910" loc="157:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x4070ab78" loc="1057:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x406c6a70" loc="84:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x4070fac0" loc="1247:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x406f0cc8" loc="850:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x406e2740" loc="755:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x40455a98" loc="211:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x4070a450" loc="1053:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x40708c50" loc="1081:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LOWPAN_IPHC_AM_M_32" ref="0x406bd2f8" loc="110:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x406c72c8" loc="51:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x404372c8" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x40705a70" loc="1113:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x4066ccb8" loc="27:/home/bo/tinyos-morten/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_IPHC_TF_ECN_DSCP_FL" ref="0x406c1eb0" loc="82:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x407181e0" loc="1141:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x406e30e8" loc="741:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x4070edc0" loc="1262:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x406d3788" loc="289:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x40b1fc00" loc="76:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x406743d0" loc="104:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LOWPAN_IPHC_AM_64" ref="0x406be530" loc="103:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x406da890" loc="157:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x406d8880" loc="202:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x406fae98" loc="993:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x406d5138" loc="255:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x4042fb30" loc="212:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x40439b60" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="DATA_SIZE" ref="0x406cf810" loc="36:../TestMessage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x4073abe0" loc="128:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x40675658" loc="95:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LOWPAN_IPHC_M" ref="0x406bf968" loc="97:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x406d7340" loc="219:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131072" name="TRICKLE_MAX" ref="0x41287790" loc="38:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x406f32c8" loc="809:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x406f20d0" loc="819:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x40722e28" loc="1284:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x406f4268" loc="796:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x406c7700" loc="57:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x406f6220" loc="774:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x406190f8" loc="55:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x4042f988" loc="210:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_NHC_EID_HOP" ref="0x406bc7a8" loc="123:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x406c6430" loc="75:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x407023b8" loc="890:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x406e5940" loc="722:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x4072ae58" loc="47:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x40b219b0" loc="57:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x406f8d28" loc="1014:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x4070cb30" loc="1035:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x40726240" loc="78:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x40552ba8" loc="59:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:224" name="LOWPAN_NHC_IPV6_PATTERN" ref="0x406bde98" loc="119:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x406d4660" loc="277:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x4070d0a8" loc="1016:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x40b3a180" loc="187:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x4072abf8" loc="46:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x407238d0" loc="1268:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x40721560" loc="1290:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3000" name="START_DELAY_TIMER" ref="0x406ce480" loc="42:../TestMessage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x4070ceb8" loc="1037:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LOWMSG_FRAG1_LEN" ref="0x4069e5b8" loc="38:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x40728978" loc="67:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:240" name="LOWPAN_NHC_IPV6_MASK" ref="0x406bdc20" loc="118:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x406f3b88" loc="816:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x40709d88" loc="1071:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ICMP_TYPE_ECHO_TIME_EXCEEDED" ref="0x40f28f18" loc="153:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DIO_BASE_FLAG_GRD" ref="0x41318160" loc="272:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:248" name="LOWPAN_NHC_UDP_MASK" ref="0x406ba058" loc="132:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x40b20a98" loc="66:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x40715710" loc="1177:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x40713df0" loc="1205:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x40710560" loc="1233:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x406f5b50" loc="792:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x406ffd68" loc="932:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x40710010" loc="1228:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x4070e6d0" loc="1256:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x406d9568" loc="173:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x406fa598" loc="986:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x40722918" loc="1281:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x40b374f0" loc="221:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x406dceb0" loc="135:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x406a1010" loc="63:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x40701988" loc="904:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:339" name="SIM_LOG_OUTPUT_COUNT" ref="0x404cb210" loc="64:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x406fb058" loc="970:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x40b1f530" loc="70:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x40675010" loc="88:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="RPL_MOP_Storing_With_Multicast" ref="0x412e27c8" loc="107:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x406fbad8" loc="978:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x406f5988" loc="791:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x4070db30" loc="1024:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_NHC_UDP_PORT_FULL" ref="0x406baa38" loc="138:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x406d8aa0" loc="207:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x406f6950" loc="780:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x40722758" loc="1278:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x40721e48" loc="1297:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_TYPE_MAC_CMD" ref="0x4089ca28" loc="88:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x40b1e5f8" loc="84:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="LEDS_LED6" ref="0x40ef35c0" loc="50:/home/bo/tinyos-morten/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LOWPAN_NHC_EID_ROUTING" ref="0x406bcba8" loc="124:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x406e7720" loc="697:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x406e7e40" loc="703:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x40619820" loc="59:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1000" name="WAITTIME" ref="0x406ce240" loc="41:../TestMessage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x406efd08" loc="861:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x406db9a0" loc="144:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x40701ee0" loc="909:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x406ff2c0" loc="922:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x40704ac0" loc="1124:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x407171d8" loc="1152:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="TCP_FLAG_CWR" ref="0x40f232b8" loc="188:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="INFINITE_RANK" ref="0x4131a888" loc="253:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="LOWMSG_FRAGN_LEN" ref="0x4069e7f0" loc="39:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x40706e08" loc="1104:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x40704390" loc="1118:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x406ed490" loc="880:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x40718aa0" loc="1146:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x406e2e58" loc="761:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x407151d0" loc="1174:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x407138b0" loc="1202:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="IEEE154_BROADCAST_ADDR" ref="0x40884c68" loc="50:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x404393b0" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x406e4438" loc="732:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x40723e38" loc="1273:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ROUTE_DROP_HLIM" ref="0x40f9d910" loc="19:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:80" name="LOWPAN_BCAST_PATTERN" ref="0x406c2010" loc="61:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="ROUTE_INVAL_KEY" ref="0x40fa0a00" loc="7:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x406ebc78" loc="678:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x40702010" loc="886:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="IANA_ICMP" ref="0x40f2beb0" loc="122:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x406e6ae0" loc="712:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x40728740" loc="66:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x406eed40" loc="874:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x406fcae0" loc="965:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65" name="LOWPAN_IPV6_PATTERN" ref="0x406c2260" loc="62:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x406d5580" loc="261:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x406dca90" loc="131:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x4070c600" loc="1032:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x406d2b20" loc="316:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCP_FLAG_SYN" ref="0x40f25620" loc="182:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="LIB6LOWPAN_MAX_LEN" ref="0x4069ed30" loc="44:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RPL_MOP_No_Downward" ref="0x412e2010" loc="104:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x406f1b28" loc="838:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x40702cc8" loc="895:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x406fb228" loc="973:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IPV6_HOP" ref="0x40f2a498" loc="128:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x4070d970" loc="1023:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x406c5340" loc="96:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x406e6588" loc="707:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x406f40a8" loc="795:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x406ef0a8" loc="854:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x40714758" loc="1188:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x40712e50" loc="1216:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x4070f568" loc="1244:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x4072a790" loc="44:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="IPV6_NONEXT" ref="0x40f290a8" loc="134:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x406f8b78" loc="1013:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x4042f650" loc="206:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LOWPAN_NHC_EID_FRAG" ref="0x406bb010" loc="125:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x40b1e418" loc="83:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x407081c0" loc="1073:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x407294b8" loc="53:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x40b1fe10" loc="77:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x40b3cf20" loc="186:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x40544bd8" loc="54:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x406fb758" loc="976:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="N_CONCURRENT_SENDS" ref="0x40eff168" loc="30:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatch.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x407258d0" loc="88:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x406dc870" loc="128:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x40729a40" loc="60:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x40551290" loc="61:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x40710e20" loc="1238:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_IPHC_AM_128" ref="0x406be2f0" loc="102:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LOWPAN_NHC_EID_SHIFT" ref="0x406bc180" loc="121:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x406e32b0" loc="742:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x4070a0b0" loc="1051:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="T_FAILED2" ref="0x40f3b850" loc="192:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x406f65b0" loc="776:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x406f1268" loc="831:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x4070bd00" loc="1047:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_IPHC_AM_M_128" ref="0x406bee40" loc="108:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x4072a9f0" loc="45:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x406fd058" loc="946:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x40703a80" loc="1135:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x407161c0" loc="1163:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x40714918" loc="1191:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x40675b28" loc="97:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x40438af0" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x406ee278" loc="866:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x406c8c48" loc="44:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x406f3488" loc="810:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x406f82d0" loc="1006:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x4070a9b0" loc="1056:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DIO_BASE_FLAG_DA_SUPPORT" ref="0x41318670" loc="274:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x406da228" loc="150:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LOWPAN_IPHC_HLIM_64" ref="0x406c0d40" loc="90:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x406f99c0" loc="1001:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x406f7ca0" loc="771:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x406e8e20" loc="690:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x4070c438" loc="1031:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x406d7560" loc="222:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="IEEE154_FCF_ACK_REQ" ref="0x4089d6b0" loc="78:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x40b382c0" loc="213:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x406edda0" loc="885:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x40409b40" loc="52:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x40409ec8" loc="54:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x406e53e8" loc="719:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x406f7738" loc="766:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x406f27b8" loc="823:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x406d4440" loc="274:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x407010a8" loc="897:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="AM_RADIO_COUNT_MSG" ref="0x406cfc40" loc="38:../TestMessage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x40b44010" loc="92:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10000" name="DEFAULT_LIFETIME" ref="0x41319270" loc="257:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x40739820" loc="140:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x40709108" loc="1062:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x4066c978" loc="15:/home/bo/tinyos-morten/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x407268d0" loc="81:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x40409d00" loc="53:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LOWMSG_NALP" ref="0x40f1acf0" loc="83:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x40713370" loc="1197:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x406f4d50" loc="804:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x40711a80" loc="1225:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x4070e1c0" loc="1253:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x40434928" loc="61:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x406c70a8" loc="48:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x4070a618" loc="1054:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x406dc440" loc="122:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x406ef438" loc="856:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x40619bf0" loc="61:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x40726470" loc="79:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x40725cd0" loc="90:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x407088b8" loc="1077:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x406c5770" loc="102:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x406e71e0" loc="694:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x407007f8" loc="914:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x40704568" loc="1121:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x406d6668" loc="244:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="TCP_FLAG_ECE" ref="0x40f230a8" loc="187:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x406d8230" loc="191:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x407068f8" loc="1101:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x406d9998" loc="179:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="T_UNUSED" ref="0x40f3ba38" loc="193:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x406d59b8" loc="267:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="LOWPAN_IPHC_AM_M_8" ref="0x406bd540" loc="111:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x4073ba78" loc="111:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x40705df0" loc="1115:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x40718560" loc="1143:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x40716c00" loc="1171:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="IEEE_EUI64_LENGTH" ref="0x40888da8" loc="40:/home/bo/tinyos-morten/tos/types/IeeeEui64.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_IPHC_NH_INLINE" ref="0x406c03d8" loc="85:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x406e4d20" loc="737:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ICMP_CODE_HOPLIMIT_EXCEEDED" ref="0x40f265b8" loc="163:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x407231d0" loc="1264:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="LOWPAN_IPHC_HLIM_255" ref="0x406bf010" loc="91:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x406ff9d0" loc="928:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x40b21038" loc="53:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x4066cee8" loc="28:/home/bo/tinyos-morten/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x406ee7e8" loc="871:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x40b379c0" loc="223:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ROUTE_TABLE_SZ" ref="0x40fa0c20" loc="8:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x406f1428" loc="834:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="LOWPAN_NALP_PATTERN" ref="0x406c35c8" loc="57:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x406f84a0" loc="1007:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x40709668" loc="1065:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="FRAG_EXPIRE_TIME" ref="0x406c3258" loc="50:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x406c7928" loc="60:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x406d26d0" loc="310:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x406c6220" loc="72:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x406f8660" loc="1010:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x4072a3d0" loc="132:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x40706738" loc="1098:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x40549480" loc="96:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ICMPV6_CODE_DAO" ref="0x41319d58" loc="268:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DIO_BASE_FLAG_PREF_6" ref="0x41318b30" loc="276:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x4070b5f8" loc="1043:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x40702758" loc="892:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x406e5cd0" loc="724:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="LOWMSG_IPNH_HDR" ref="0x40f50038" loc="84:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:224" name="LOWPAN_DISPATCH_BYTE_MASK" ref="0x406c1010" loc="75:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x406c8010" loc="30:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x406c5b90" loc="108:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x406ee0a8" loc="865:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LEDS_LED1" ref="0x40ef66b8" loc="45:/home/bo/tinyos-morten/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="T_ZOMBIE" ref="0x40f3be08" loc="195:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/lib6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LOWPAN_IPHC_AM_M" ref="0x406bebe0" loc="107:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/6lowpan.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x40717ac0" loc="1157:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x406f17a8" loc="836:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x40714200" loc="1185:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x406fa760" loc="987:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x407128f8" loc="1213:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x4070f010" loc="1241:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x406eb8e8" loc="676:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x406c7d60" loc="66:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x407218e0" loc="1292:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="IEEE154_FCF_INTRAPAN" ref="0x4089d910" loc="79:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ICMP_TYPE_NEIGHBOR_SOL" ref="0x40f27de0" loc="159:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x406e2010" loc="751:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x404a6388" loc="76:/home/bo/tinyos-morten/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x407121d0" loc="1207:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x405526b0" loc="57:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x407108e0" loc="1235:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x406dc650" loc="125:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x406fe910" loc="942:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x406d7778" loc="223:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="TCP_FLAG_URG" ref="0x40f25e60" loc="186:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x406f47e8" loc="801:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x40437a78" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x406e3b98" loc="747:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x4070deb0" loc="1026:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x40701d08" loc="906:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ICMP_EXT_TYPE_BEACON" ref="0x41253e30" loc="27:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3072" name="DIS_INTERVAL" ref="0x41319038" loc="256:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x406faaf0" loc="989:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x407061f8" loc="1095:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x4069da20" loc="56:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NUM_TASKS" ref="0x4069d848" loc="55:/home/bo/tinyos-morten/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3125" name="TRAFFIC_MAX_BYTES" ref="0x40902a68" loc="195:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioP.nc">
      <component-ref qname="TossimRadioP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="TRAFFIC_UPDATE_PERIOD" ref="0x40902498" loc="194:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioP.nc">
      <component-ref qname="TossimRadioP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_CLIENT" ref="0x40922cc0" loc="51:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1048576" name="TICKS_PER_SECOND" ref="0x40922f00" loc="52:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_ENTRY" ref="0x409c1410" loc="49:/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="grantedTask" ref="0x409d6648" loc="69:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_RES" ref="0x409d2f20" loc="63:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RES_GRANTING" ref="0x409d2a88" loc="62:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="RES_BUSY" ref="0x409d2c60" loc="62:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RES_IDLE" ref="0x409d2888" loc="62:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PAYLOAD_OFFSET" ref="0x40a243e8" loc="150:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="IEEE154_ACK_FRAME_VALUE" ref="0x40a4b058" loc="74:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52295" name="IEEE154_DATA_FRAME_MASK" ref="0x40a4ee30" loc="59:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34881" name="IEEE154_DATA_FRAME_VALUE" ref="0x40a4dcf0" loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="IEEE154_DATA_FRAME_PRESERVE" ref="0x40a4c470" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="IEEE154_ACK_FRAME_LENGTH" ref="0x40a4c6f8" loc="72:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IEEE154_ACK_FRAME_MASK" ref="0x40a4cb90" loc="73:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="send" ref="0x40af64d8" loc="77:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_SENDDONE" ref="0x40ae96c8" loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_SENDING" ref="0x40ae94a8" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40ae9290" loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="STATE_SIGNAL" ref="0x40ae98d8" loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x40b78578" loc="45:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x40b78748" loc="46:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x40c3ddd8" loc="74:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x40c5a4c8" loc="56:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x40c69d10" loc="71:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x40c5a2c8" loc="55:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="STATE_TX_SEND" ref="0x40c9a990" loc="69:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="STATE_TX_DONE" ref="0x40c9aba8" loc="70:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="STATE_TURN_ON" ref="0x40c9adc0" loc="71:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="stateDoneTask" ref="0x40c9ee40" loc="144:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendTask" ref="0x40c9e498" loc="189:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_TX_PENDING" ref="0x40c9a558" loc="67:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="STATE_TURN_OFF" ref="0x40c98010" loc="72:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="MAX_RETRIES" ref="0x40cb71c0" loc="187:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40c9a320" loc="66:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="deliverTask" ref="0x40ca4b70" loc="326:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_TX_RETRY" ref="0x40c9a778" loc="68:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="STATE_CHANNEL" ref="0x40c98228" loc="73:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="RECEIVE_QUEUE_SIZE" ref="0x40cd7248" loc="297:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="tasklet" ref="0x40cedbd8" loc="47:/home/bo/tinyos-morten/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_TX_PENDING_SECOND" ref="0x40cf9c28" loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40cf9740" loc="60:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="STATE_BARRIER" ref="0x40cf70a8" loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="calcNextRandom" ref="0x40cfd298" loc="78:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_TX_PENDING_FIRST" ref="0x40cf99b0" loc="61:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="STATE_TX_SENDING" ref="0x40cf9e60" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="STATE_ACK_SEND" ref="0x40d21158" loc="66:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_DATA_SEND" ref="0x40d22d00" loc="64:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40d22ad8" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_ACK_WAIT" ref="0x40d22f20" loc="65:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="STATE_CCA_WAIT" ref="0x40d5a0a8" loc="62:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="STATE_SEND" ref="0x40d5a2a0" loc="63:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="STATE_READY" ref="0x40d5ce30" loc="61:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/CsmaLayerP.nc">
      <component-ref qname="CsmaLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="stateDoneTask" ref="0x40e39210" loc="122:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="ccaDoneTask" ref="0x40daf840" loc="327:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="S_STOPPED" ref="0x411c00b8" loc="113:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="sendTask" ref="0x41083e50" loc="423:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="S_STOPPING" ref="0x411c0258" loc="114:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="S_RUNNING" ref="0x411c1ec8" loc="112:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51024" name="LOCAL_PORT_START" ref="0x412d54e0" loc="30:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54999" name="LOCAL_PORT_STOP" ref="0x412d5708" loc="31:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="N_CLIENTS" ref="0x412d7b80" loc="23:/home/bo/tinyos-morten/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="newParentSearch" ref="0x412e4e88" loc="350:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="computeRemaining" ref="0x4139af20" loc="171:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="init" ref="0x413fa308" loc="125:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendDISTask" ref="0x413faba0" loc="124:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="initDIO" ref="0x413fb858" loc="126:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendDIOTask" ref="0x413f9458" loc="123:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendDAO" ref="0x414b3808" loc="101:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="initDAO" ref="0x4141fec0" loc="184:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="N_EXTERNAL" ref="0x414dc200" loc="53:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="N_ARGS" ref="0x414dc718" loc="60:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CMDNAMSIZ" ref="0x41527388" loc="67:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_TRACERT6" ref="0x414dcee8" loc="64:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CMD_HELP" ref="0x414dc900" loc="61:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:254" name="CMD_NO_CMD" ref="0x41527118" loc="66:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_ECHO" ref="0x414dcae8" loc="62:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CMD_PING6" ref="0x414dccd8" loc="63:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="N_BUILTINS" ref="0x414dc538" loc="58:/home/bo/tinyos-morten/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CMD_ID" ref="0x41556dd8" loc="7:/home/bo/tinyos-morten/tos/lib/net/blip/shell/ShellCommandC.nc">
      <component-ref qname="ShellCommandC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x401beea8" loc="126:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="intptr_t" ref="0x401beea8"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x40684628" loc="134:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x40684010"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x40684628"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x40b35e20" loc="247:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b35568"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x40b35e20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="network_header_t" ref="0x40669b90" loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TinyosNetworkLayer.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="network_header_t" ref="0x406697a8"/>
        <typename><typedef-ref name="network_header_t" ref="0x40669b90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x4030a068" loc="201:/usr/include/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x4030a068"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x4002e6c8" loc="323:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x4002e6c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x40724a38" loc="99:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x407247b0"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x40724a38"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x402f1dd8" loc="152:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x402f1dd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x40677d08" loc="34:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x40677950"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x40677d08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_uint32_t" ref="0x4044c200" loc="56:/usr/include/_G_config.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_uint32_t" ref="0x4044c200"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int64_t" ref="0x402e6010" loc="47:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x402e6010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x402e26b0" loc="39:/usr/include/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x402e26b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x40672d90" loc="129:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x40672330"/>
        <typename><typedef-ref name="serial_header_t" ref="0x40672d90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x4066b808" loc="42:/home/bo/tinyos-morten/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066b640"/>
        <typename><typedef-ref name="TMilli" ref="0x4066b808"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_int16_t" ref="0x4044d798" loc="53:/usr/include/_G_config.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_int16_t" ref="0x4044d798"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_char" ref="0x402e38f8" loc="31:/usr/include/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x402e38f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x40b43d40" loc="111:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x40b43d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x40b318b8" loc="278:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x40b318b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x402ece50" loc="189:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__intptr_t" ref="0x402ece50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x402eca08" loc="185:/usr/include/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x402e6510"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x402eca08"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="tradio_size" ref="0x40669560" loc="11:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioConfig.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="tradio_size" ref="0x40669560"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x40b42810" loc="116:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x40b42810"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x402f7820" loc="78:/usr/include/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x402f7658"/>
        <typename><typedef-ref name="fd_set" ref="0x402f7820"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x404a68c8" loc="51:/home/bo/tinyos-morten/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x404a68c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="downwards_table_t" ref="0x413129c0" loc="330:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x41312798"/>
        <typename><typedef-ref name="downwards_table_t" ref="0x413129c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__caddr_t" ref="0x402ecc30" loc="186:/usr/include/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x402ecc30"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x402e8010" loc="149:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__time_t" ref="0x402e8010"/></typename>
      </type-int>
    </typedef>
    <typedef name="rpl_data_hdr_t" ref="0x413117e8" loc="346:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x413114a0"/>
        <typename><typedef-ref name="rpl_data_hdr_t" ref="0x413117e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__ssize_t" ref="0x402ec4f8" loc="180:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ssize_t" ref="0x402ec4f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x40349720" loc="38:/usr/include/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x40349720"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x402efc18" loc="72:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x402efc18"/></typename>
      </type-int>
    </typedef>
    <typedef name="link_metadata_t" ref="0x40678500" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayer.h">
      <type-tag size="I:4" alignment="I:2"><struct-ref name="link_metadata_t" ref="0x4067af58"/>
        <typename><typedef-ref name="link_metadata_t" ref="0x40678500"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x40b32100" loc="262:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b34b90"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x40b32100"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x4044ca18" loc="180:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x4044ca18"/></typename>
      </type-void>
    </typedef>
    <typedef name="queue_entry_t" ref="0x41316c00" loc="299:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-tag size="I:64" alignment="I:4"><struct-ref ref="0x41316978"/>
        <typename><typedef-ref name="queue_entry_t" ref="0x41316c00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int_least32_t" ref="0x401bbba8" loc="68:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x401bbba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x4002a028"  loc="NONE">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40025f48"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x402e2d58" loc="42:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x402e2d58"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x406690c8" loc="44:/home/bo/tinyos-morten/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066bec0"/>
        <typename><typedef-ref name="TMicro" ref="0x406690c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="timesync_relative_t" ref="0x40db1780" loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Morten Tranberg Hansen&#10; @date   November 20 2010&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="timesync_relative_t" ref="0x40db1780"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x402ec010" loc="177:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x402ec010"/></typename>
      </type-int>
    </typedef>
    <typedef name="dao_table_entry" ref="0x41313888" loc="318:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-tag size="I:48" alignment="I:4"><struct-ref ref="0x413133c0"/>
        <typename><typedef-ref name="dao_table_entry" ref="0x41313888"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nlink_t" ref="0x402efe68" loc="77:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="nlink_t" ref="0x402efe68"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x405e2ed8" loc="60:/usr/include/time.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.c">
        <short>&#10; Implementation of all of the Hash-Based Learning primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the Hash-Based Learning primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clock_t" ref="0x405e2ed8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x40b31630" loc="277:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x40b31630"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x40302708" loc="136:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x403024e0"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x40302708"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x40503c08" loc="65:/home/bo/tinyos-morten/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/bo/tinyos-morten/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0x40503650"/>
        <typename><typedef-ref name="heap_t" ref="0x40503c08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x402e6ec8" loc="136:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x402e6ec8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x402a6018" loc="400:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x402a6018"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x404cdb68" loc="61:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_log_channel" ref="0x404cd380"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x404cdb68"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x402ea7b0" loc="37:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x402ea7b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x40302bb0" loc="144:/usr/include/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x40302bb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="table_t" ref="0x4107f718" loc="35:/home/bo/tinyos-morten/tos/lib/net/blip/table.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x4107f490"/>
        <typename><typedef-ref name="table_t" ref="0x4107f718"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint" ref="0x402f0010" loc="153:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x402f0010"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x4066c3d8" loc="11:/home/bo/tinyos-morten/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_group_t" ref="0x4066c3d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x40b32430" loc="265:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b34b90"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x40b32430"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x401bc0f0" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x401bc0f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x402e4430" loc="144:/usr/include/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x402e4268"/>
        <typename><typedef-ref name="__fsid_t" ref="0x402e4430"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x40b326d8" loc="269:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x40b326d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x40b32e70" loc="272:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x40b32e70"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x401be9d8" loc="111:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x401be9d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="timestamp_metadata_t" ref="0x4067a738" loc="41:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeStampingLayer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref name="timestamp_metadata_t" ref="0x4067a338"/>
        <typename><typedef-ref name="timestamp_metadata_t" ref="0x4067a738"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int_least64_t" ref="0x401bbe28" loc="73:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x401bbe28"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x40b532f8" loc="324:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b530d0"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40b532f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x402e5f08" loc="143:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x402e5f08"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x402e3d50" loc="33:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x402e3d50"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x40b42598" loc="115:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x40b42598"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x40b313a8" loc="276:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x40b313a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x404aea18" loc="51:/home/bo/tinyos-morten/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x404ae7b0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x404aea18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x406a1a00" loc="67:/home/bo/tinyos-morten/tos/types/TinyError.h">
      <documentation loc="34:/home/bo/tinyos-morten/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x406a1a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x402f54f8" loc="24:/usr/include/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x402f54f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x40b3cb60" loc="178:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3c938"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x40b3cb60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x402e8710" loc="153:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x402e8710"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x402e5130" loc="137:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ino_t" ref="0x402e5130"/></typename>
      </type-int>
    </typedef>
    <typedef name="parentTableEntryDAO" ref="0x413122f8" loc="325:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-tag size="I:24" alignment="I:4"><struct-ref ref="0x41312010"/>
        <typename><typedef-ref name="parentTableEntryDAO" ref="0x413122f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_uint16_t" ref="0x4044de30" loc="55:/usr/include/_G_config.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_uint16_t" ref="0x4044de30"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x401bb728" loc="66:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x401bb728"/></typename>
      </type-int>
    </typedef>
    <typedef name="ip_statistics_t" ref="0x40f39e30" loc="59:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h">
      <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x40f39a28"/>
        <typename><typedef-ref name="ip_statistics_t" ref="0x40f39e30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="FILE" ref="0x404517e8" loc="49:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
        <typename><typedef-ref name="FILE" ref="0x404517e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x40330ec0" loc="737:/usr/include/stdlib.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x40330ec0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x402b6d88" loc="40:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0x402b1ef8"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x402b6d88"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x407372c0" loc="161:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x407372c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x402e5600" loc="139:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x402e5600"/></typename>
      </type-int>
    </typedef>
    <typedef name="pfx_t" ref="0x41282568" loc="90:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="rpfx" ref="0x412844c8"/>
        <typename><typedef-ref name="pfx_t" ref="0x41282568"/></typename>
      </type-tag>
    </typedef>
    <typedef name="locale_t" ref="0x402b4010" loc="43:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0x402b1ef8"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x402b4010"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x40672128" loc="121:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x40674b00"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x40672128"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x402f15b0" loc="92:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x402f15b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x40b56068" loc="291:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x40b56068"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x40b567e8" loc="294:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x40b567e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x402ef9d8" loc="67:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x402ef9d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x402ef120" loc="41:/usr/include/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x402e4268"/>
        <typename><typedef-ref name="fsid_t" ref="0x402ef120"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x406615e0" loc="59:/home/bo/tinyos-morten/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x406613f8"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x406615e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x40738d90" loc="158:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x407389e8"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40738d90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x401b84b8" loc="37:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x401b84b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x404cd168" loc="54:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.c">
      <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0x404cec68"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x404cd168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x402f8cf0" loc="49:/usr/include/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x402f8cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x402f5f28" loc="38:/usr/include/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x402f5ae8"/>
        <typename><typedef-ref name="sigset_t" ref="0x402f5f28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ieee154_saddr_t" ref="0x40885a58" loc="36:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ieee154_saddr_t" ref="0x40885a58"/></typename>
      </type-int>
    </typedef>
    <typedef name="T32khz" ref="0x4066bc48" loc="43:/home/bo/tinyos-morten/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066ba80"/>
        <typename><typedef-ref name="T32khz" ref="0x4066bc48"/></typename>
      </type-tag>
    </typedef>
    <typedef name="resource_client_id_t" ref="0x409a7238" loc="33:/home/bo/tinyos-morten/tos/types/Resource.h">
      <documentation loc="33:/home/bo/tinyos-morten/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="resource_client_id_t" ref="0x409a7238"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_short" ref="0x402ea588" loc="36:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x402ea588"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x40677748" loc="30:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioMsg.h">
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x40678708"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x40677748"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x4002e260" loc="149:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ptrdiff_t" ref="0x4002e260"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x4066b3c8" loc="41:/home/bo/tinyos-morten/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066b200"/>
        <typename><typedef-ref name="TSecond" ref="0x4066b3c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x402fe5f0" loc="235:/usr/include/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blkcnt_t" ref="0x402fe5f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x401bb230" loc="52:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x401bb230"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x402a6968" loc="402:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x402a6968"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x402a4728" loc="389:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x402a4728"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x401bf0e8" loc="129:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uintptr_t" ref="0x401bf0e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x402eddf8" loc="117:/usr/include/sys/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x402eddf8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x402e2010" loc="34:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_long" ref="0x402e2010"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x401bec78" loc="113:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x401bec78"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x40b32be8" loc="271:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x40b32be8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x402e2900" loc="40:/usr/include/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x402e2900"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x402ea338" loc="35:/usr/include/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x402ea338"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x4072c5e0" loc="120:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x4072c5e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x401bce08" loc="97:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast16_t" ref="0x401bce08"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x40b31120" loc="275:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x40b31120"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x40b31dc8" loc="280:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x40b31dc8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x404645b0" loc="91:/usr/include/stdio.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0x4044eb70"/>
        <typename><typedef-ref name="fpos_t" ref="0x404645b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x40b35ad8" loc="244:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b35568"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x40b35ad8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x402d3168" loc="102:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x402d4f10"/>
        <typename><typedef-ref name="div_t" ref="0x402d3168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x405a0270" loc="6:/home/bo/tinyos-morten/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0x405a1db8"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x405a0270"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x4002e498" loc="211:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stddef.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x402e2468" loc="38:/usr/include/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x402e2468"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x402f5cb0" loc="32:/usr/include/bits/sigset.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x402f5ae8"/>
        <typename><typedef-ref name="__sigset_t" ref="0x402f5cb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x40b43ac0" loc="110:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b433b0"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x40b43ac0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x402ec788" loc="184:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x402ec788"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x402e53c0" loc="138:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x402e53c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x4066d8e0" loc="6:/home/bo/tinyos-morten/tos/types/AM.h">
      <documentation loc="34:/home/bo/tinyos-morten/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x4066d8e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x406833e8" loc="53:/home/bo/tinyos-morten/tos/lib/tossim/platform_message.h">
      <type-tag size="I:12" alignment="I:1"><union-ref name="message_header" ref="0x40684e00"/>
        <typename><typedef-ref name="message_header_t" ref="0x406833e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x40596010" loc="57:/home/bo/tinyos-morten/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x40598930"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x40596010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x4066c638" loc="12:/home/bo/tinyos-morten/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x4066c638"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x402a1e50" loc="387:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x402a1e50"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x40737048" loc="160:/home/bo/tinyos-morten/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x40737048"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x401bc468" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x401bc468"/></typename>
      </type-int>
    </typedef>
    <typedef name="rqual_t" ref="0x41281188" loc="98:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref ref="0x41282df8"/>
        <typename><typedef-ref name="rqual_t" ref="0x41281188"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_close_fn" ref="0x40463258" loc="384:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x40463258"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0x401b8db8" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x401b8db8"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x402f12e8" loc="76:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="time_t" ref="0x402f12e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x402a3918" loc="395:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x402a3918"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x402d3d60" loc="122:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x402d3b38"/>
        <typename><typedef-ref name="lldiv_t" ref="0x402d3d60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="radio_count_msg_t" ref="0x406cb638" loc="61:../TestMessage.h">
      <type-tag size="I:26" alignment="I:1"><nx_struct-ref name="radio_count_msg" ref="0x406cde48"/>
        <typename><typedef-ref name="radio_count_msg_t" ref="0x406cb638"/></typename>
      </type-tag>
    </typedef>
    <typedef name="timesync_absolute_t" ref="0x40db1ab0" loc="48:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="timesync_absolute_t" ref="0x40db1ab0"/></typename>
      </type-int>
    </typedef>
    <typedef name="_IO_FILE" ref="0x4045b498" loc="341:/usr/include/libio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x4045b498"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x402fc480" loc="57:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:36" alignment="I:4"><union-ref ref="0x402fc258"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x402fc480"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x40458c98" loc="381:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x402e5cf8"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x40458c98"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x402ed4f0" loc="100:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x402ed4f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x402f1830" loc="104:/usr/include/time.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x402f1830"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x40306dc8" loc="195:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:4"><union-ref ref="0x40306ba0"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x40306dc8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x40b42010" loc="112:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x40b42010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x402e62a0" loc="48:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x402e62a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x402e6a68" loc="134:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x402e6a68"/></typename>
      </type-int>
    </typedef>
    <typedef name="lpl_metadata_t" ref="0x4067ad20" loc="41:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/LowPowerListeningLayer.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="lpl_metadata_t" ref="0x4067a968"/>
        <typename><typedef-ref name="lpl_metadata_t" ref="0x4067ad20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x402a7258" loc="397:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x402a7258"/></typename>
      </type-int>
    </typedef>
    <typedef name="va_list" ref="0x404c6e48" loc="102:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stdarg.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40025f48"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x404c6e48"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__off_t" ref="0x402e5a78" loc="141:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__off_t" ref="0x402e5a78"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x401bcbe0" loc="91:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x401bcbe0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x402e7520" loc="169:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blkcnt_t" ref="0x402e7520"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x40676958" loc="50:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimRadioMsg.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="tossim_metadata" ref="0x40677f20"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x40676958"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_id_t" ref="0x4066c170" loc="10:/home/bo/tinyos-morten/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x4066c170"/></typename>
      </type-int>
    </typedef>
    <typedef name="ieee154_laddr_t" ref="0x40885d18" loc="37:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40885010"/>
        <typename><typedef-ref name="ieee154_laddr_t" ref="0x40885d18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="intmax_t" ref="0x401bf348" loc="139:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x401bf348"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x40b35790" loc="241:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b35568"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40b35790"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x40b42318" loc="114:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b433b0"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x40b42318"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x40684bf0" loc="138:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x40684840"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x40684bf0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x402e7a58" loc="173:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x402e7a58"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x401bb010" loc="50:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x401bb010"/></typename>
      </type-int>
    </typedef>
    <typedef name="route_key_t" ref="0x40f9db58" loc="22:/home/bo/tinyos-morten/tos/lib/net/blip/iprouting.h">
      <documentation loc="1:/home/bo/tinyos-morten/tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet.  If it needs to be&#10; reencapsulated in order to insert a routing header, it should do&#10; this as well.  Currently, the routing protocol must also implement&#10; a forwarding engine; since the lowest level already queues, this&#10; isn't too onerous.  At the bottom, packets come out with a&#10; link-local next hop address attached.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.  &#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="route_key_t" ref="0x40f9db58"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x4044ed98" loc="26:/usr/include/_G_config.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0x4044eb70"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x4044ed98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x402f0378" loc="201:/usr/include/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x402f0378"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x40b32960" loc="270:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x40b32960"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x40b58b20" loc="287:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x40b58b20"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x4066dc88" loc="7:/home/bo/tinyos-morten/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x4066dc88"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x402e7048" loc="161:/usr/include/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x402e7048"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x40682068" loc="61:/home/bo/tinyos-morten/tos/lib/tossim/platform_message.h">
      <type-tag size="I:16" alignment="I:4"><union-ref name="message_metadata" ref="0x40683c18"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x40682068"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x40458360" loc="372:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0x402ec4f8"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x40458360"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x402f7a90" loc="85:/usr/include/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fd_mask" ref="0x402f7a90"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x402a3030" loc="391:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x402a3030"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x404c54a8" loc="10:/home/bo/tinyos-morten/tos/lib/tossim/hashtable.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x404c5240"/>
        <typename><typedef-ref name="hashtable_t" ref="0x404c54a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rpl_data_packet_t" ref="0x41316318" loc="293:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <documentation loc="288:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>for forwarding engine ////////////////////////////////////////////////////////////</short>
      </documentation>
      <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x413160f0"/>
        <typename><typedef-ref name="rpl_data_packet_t" ref="0x41316318"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x402ef7b0" loc="62:/usr/include/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x402ef7b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x402e67a0" loc="57:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x402e67a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__swblk_t" ref="0x402e8958" loc="154:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__swblk_t" ref="0x402e8958"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x402f0a18" loc="203:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x402f0a18"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x402feb10" loc="243:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x402feb10"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x401be538" loc="104:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x401be538"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim64_t" ref="0x402e4b70" loc="147:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x402e4b70"/></typename>
      </type-int>
    </typedef>
    <typedef name="__key_t" ref="0x402e8b68" loc="155:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x402e8b68"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x402e8278" loc="150:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x402e8278"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x40b41960" loc="130:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b41738"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x40b41960"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x40b58898" loc="286:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x40b58898"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x4045a8f8" loc="364:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0x402ec4f8"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0x4002e498"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x4045a8f8"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x402a19f8" loc="386:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x402a19f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x401bf9c0" loc="35:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x401bf9c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x40b562e8" loc="292:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x40b562e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0x402f5110" loc="206:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="register_t" ref="0x402f5110"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x4030ae30" loc="216:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x4030ac08"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x4030ae30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x40b55d58" loc="309:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b55b30"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40b55d58"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x40b435d8" loc="108:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/bo/tinyos-morten/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b433b0"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40b435d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x402ed958" loc="110:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ssize_t" ref="0x402ed958"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x402e6510" loc="56:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x402e6510"/></typename>
      </type-int>
    </typedef>
    <typedef name="radv_t" ref="0x41285900" loc="72:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="radv" ref="0x41286708"/>
        <typename><typedef-ref name="radv_t" ref="0x41285900"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int32_t" ref="0x401b8938" loc="39:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x401b8938"/></typename>
      </type-int>
    </typedef>
    <typedef name="icmp_echo_hdr_t" ref="0x41286408" loc="60:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <documentation loc="34:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/ICMPCoreP.nc">
        <short> &#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.</short>
        <long> &#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.  Other modules&#10; which want to implement other functionality can wire to the IP&#10; interface.&#10;&#10;</long>
      </documentation>
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="icmp6_echo_hdr" ref="0x412879b0"/>
        <typename><typedef-ref name="icmp_echo_hdr_t" ref="0x41286408"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint64_t" ref="0x401bb4a0" loc="59:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x401bb4a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x402ea9f0" loc="38:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_long" ref="0x402ea9f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x4071dd78" loc="94:/home/bo/tinyos-morten/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x4071dd78"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x4042d878" loc="302:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x4042fdb0"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x4042d878"/></typename>
      </type-tag>
    </typedef>
    <typedef name="bndrt_t" ref="0x41082d98" loc="40:/home/bo/tinyos-morten/support/sdk/c/blip/lib6lowpan/ip_malloc.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="bndrt_t" ref="0x41082d98"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x402a76d8" loc="398:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x402a76d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x402a3d98" loc="396:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x402a3d98"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x402fed98" loc="50:/usr/include/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_t" ref="0x402fed98"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x402e72b0" loc="164:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blksize_t" ref="0x402e72b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x401c4128" loc="292:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x401bfee0"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x401c4128"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x402e5848" loc="140:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__nlink_t" ref="0x402e5848"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x40b399b8" loc="205:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b39448"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x40b399b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__id_t" ref="0x402e4d98" loc="148:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x402e4d98"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least32_t" ref="0x401bc6c0" loc="79:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x401bc6c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x4044e6f8" loc="95:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x4044e4d0"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x4044e6f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x406839f0" loc="57:/home/bo/tinyos-morten/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x406835f8"/>
        <typename><typedef-ref name="message_footer_t" ref="0x406839f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x40b58610" loc="285:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x40b58610"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x402e77c0" loc="170:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x402e77c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x402fe880" loc="239:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x402fe880"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x402ed2c8" loc="88:/usr/include/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="off_t" ref="0x402ed2c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x402e3b40" loc="32:/usr/include/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x402e3b40"/></typename>
      </type-int>
    </typedef>
    <typedef name="ieee_eui64_t" ref="0x408854a0" loc="44:/home/bo/tinyos-morten/tos/types/IeeeEui64.h">
      <documentation loc="34:/home/bo/tinyos-morten/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40885010"/>
        <typename><typedef-ref name="ieee_eui64_t" ref="0x408854a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int64_t" ref="0x402a42d0" loc="388:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x402a42d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x402eac30" loc="39:/usr/include/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x402eac30"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x402e84e8" loc="151:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__suseconds_t" ref="0x402e84e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x4030a750" loc="210:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:20" alignment="I:4"><union-ref ref="0x4030a528"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x4030a750"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x40b34db8" loc="259:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b34b90"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x40b34db8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x402e2240" loc="37:/usr/include/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x402e2240"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x4044d460" loc="31:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x4044d238"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x4044d460"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x402e8db0" loc="158:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x402e8db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x401be788" loc="110:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast16_t" ref="0x401be788"/></typename>
      </type-int>
    </typedef>
    <typedef name="dao_entry_t" ref="0x41315568" loc="305:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x413152e0"/>
        <typename><typedef-ref name="dao_entry_t" ref="0x41315568"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x40b58388" loc="284:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x40b58388"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x401bf5e0" loc="141:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x401bf5e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x4066df20" loc="8:/home/bo/tinyos-morten/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x4066df20"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x402e4678" loc="145:/usr/include/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clock_t" ref="0x402e4678"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x402a4ba0" loc="390:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x402a4ba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x402e48d8" loc="146:/usr/include/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__rlim_t" ref="0x402e48d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x402eae98" loc="40:/usr/include/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x402eae98"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x401be048" loc="98:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x401be048"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x401bb978" loc="67:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x401bb978"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x402d3730" loc="110:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x402d3508"/>
        <typename><typedef-ref name="ldiv_t" ref="0x402d3730"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x402f0d68" loc="204:/usr/include/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x402f0d68"/></typename>
      </type-int>
    </typedef>
    <typedef name="flags_metadata_t" ref="0x4067a0c8" loc="42:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MetadataFlagsLayer.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref name="flags_metadata_t" ref="0x4067b8d8"/>
        <typename><typedef-ref name="flags_metadata_t" ref="0x4067a0c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int16_t" ref="0x402f06c8" loc="202:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x402f06c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x40b3d840" loc="163:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3d618"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b3d840"/></typename>
      </type-tag>
    </typedef>
    <typedef name="route_statistics_t" ref="0x40f38920" loc="67:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref ref="0x40f38638"/>
        <typename><typedef-ref name="route_statistics_t" ref="0x40f38920"/></typename>
      </type-tag>
    </typedef>
    <typedef name="timesync_footer_t" ref="0x40dae878" loc="58:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/TimeSyncMessageLayer.h">
      <type-tag size="I:5" alignment="I:1"><nx_struct-ref name="timesync_footer_t" ref="0x40db1cf0"/>
        <typename><typedef-ref name="timesync_footer_t" ref="0x40dae878"/></typename>
      </type-tag>
    </typedef>
    <typedef name="activemessage_header_t" ref="0x4067b690" loc="43:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/ActiveMessageLayer.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="activemessage_header_t" ref="0x4067b2a0"/>
        <typename><typedef-ref name="activemessage_header_t" ref="0x4067b690"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x40b39d00" loc="208:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b39448"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x40b39d00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="icmp_statistics_t" ref="0x40f37a00" loc="78:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h">
      <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x40f37598"/>
        <typename><typedef-ref name="icmp_statistics_t" ref="0x40f37a00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x401bc968" loc="84:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x401bc968"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x402e2b28" loc="41:/usr/include/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x402e2b28"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_int32_t" ref="0x4044dad0" loc="54:/usr/include/_G_config.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_int32_t" ref="0x4044dad0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x403066d0" loc="189:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:4"><union-ref ref="0x40306448"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x403066d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x40349940" loc="40:/usr/include/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="double_t" ref="0x40349940"/></typename>
      </type-float>
    </typedef>
    <typedef name="__fd_mask" ref="0x402f8f28" loc="55:/usr/include/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fd_mask" ref="0x402f8f28"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x404a7ec0" loc="65:/home/bo/tinyos-morten/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x404a7ec0"/></typename>
      </type-int>
    </typedef>
    <typedef name="udp_statistics_t" ref="0x40f36298" loc="85:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h">
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x40f36010"/>
        <typename><typedef-ref name="udp_statistics_t" ref="0x40f36298"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x402e7d18" loc="174:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x402e7d18"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x4054f0c8" loc="71:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:480" alignment="I:4"><struct-ref name="sim_noise_hash_t" ref="0x405514c8"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x4054f0c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x40451a88" loc="65:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x404515a8"/>
        <typename><typedef-ref name="__FILE" ref="0x40451a88"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x4044c568" loc="40:/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stdarg.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40025f48"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x4044c568"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x402a7b58" loc="399:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x402a7b58"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x402e5cf8" loc="142:/usr/include/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x402e5cf8"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcast_statistics_t" ref="0x40f367b8" loc="89:/home/bo/tinyos-morten/tos/lib/net/blip/BlipStatistics.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref ref="0x40f365f0"/>
        <typename><typedef-ref name="mcast_statistics_t" ref="0x40f367b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x40b56568" loc="293:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x40b56568"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x402ec2d0" loc="178:/usr/include/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x402ec2d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x40b58100" loc="283:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x40b58100"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x40b58da8" loc="288:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x40b58da8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x401b8b78" loc="44:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x401b8b78"/></typename>
      </type-int>
    </typedef>
    <typedef name="rsol_t" ref="0x41284318" loc="79:/home/bo/tinyos-morten/tos/lib/net/blip/icmp/icmp6.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="rsol" ref="0x41285ab0"/>
        <typename><typedef-ref name="rsol_t" ref="0x41284318"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int16_t" ref="0x401b8748" loc="38:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x401b8748"/></typename>
      </type-int>
    </typedef>
    <typedef name="ieee154_addr_t" ref="0x408848f8" loc="45:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x408846d0"/>
        <typename><typedef-ref name="ieee154_addr_t" ref="0x408848f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ulong" ref="0x402f1bb0" loc="151:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ulong" ref="0x402f1bb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x401be2c0" loc="100:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x401be2c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x402ed0a0" loc="82:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x402ed0a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x40680010" loc="19:/home/bo/tinyos-morten/tos/types/message.h">
      <type-tag size="I:120" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40682248"/>
        <typename><typedef-ref name="message_t" ref="0x40680010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x402a34a8" loc="392:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x402a34a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x40b3e128" loc="146:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3fea0"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40b3e128"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x402ef360" loc="46:/usr/include/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x402ef360"/></typename>
      </type-int>
    </typedef>
    <typedef name="ieee154_header_t" ref="0x406688b0" loc="45:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/Ieee154PacketLayer.h">
      <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0x40669dd8"/>
        <typename><typedef-ref name="ieee154_header_t" ref="0x406688b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__socklen_t" ref="0x402ea0d8" loc="192:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x402ea0d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x4050b168" loc="65:/home/bo/tinyos-morten/tos/lib/tossim/heap.c">
      <type-tag size="I:12" alignment="I:4"><struct-ref name="node" ref="0x4050dce0"/>
        <typename><typedef-ref name="node_t" ref="0x4050b168"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x402e6c98" loc="135:/usr/include/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x402e6c98"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x402a15a0" loc="385:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x402a15a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x4054d728" loc="83:/home/bo/tinyos-morten/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:68" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0x4054f3b0"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x4054d728"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x402ed708" loc="105:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x402ed708"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x402ff298" loc="104:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:24" alignment="I:4"><union-ref ref="0x402ff010"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x402ff298"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x40548130" loc="122:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x40548130"/></typename>
      </type-int>
    </typedef>
    <typedef name="parent_t" ref="0x4130e388" loc="368:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
      <documentation loc="357:/home/bo/tinyos-morten/tos/lib/net/rpl/RPL.h">
        <short>for rank component /////////////////////////////////////////////////////////////////</short>
      </documentation>
      <type-tag size="I:24" alignment="I:4"><struct-ref ref="0x4130e040"/>
        <typename><typedef-ref name="parent_t" ref="0x4130e388"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x40302048" loc="130:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:4"><union-ref ref="0x40304da8"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x40302048"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ieee154_panid_t" ref="0x408857c0" loc="35:/home/bo/tinyos-morten/tos/types/Ieee154.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ieee154_panid_t" ref="0x408857c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_key_t" ref="0x40302968" loc="140:/usr/include/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x40302968"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x402ef588" loc="50:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ino_t" ref="0x402ef588"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x402edba8" loc="116:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x402edba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x4053c238" loc="63:/usr/include/sys/time.h">
      <documentation loc="32:/home/bo/tinyos-morten/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x4053c238"/></typename>
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x4053dbb0"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x402a64c0" loc="401:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x402a64c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x402f1048" loc="123:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x402f1048"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x402ff960" loc="110:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x402ff738"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x402ff960"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_slist_t" ref="0x402fcbb8" loc="70:/usr/include/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x402fc708"/>
        <typename><typedef-ref name="__pthread_slist_t" ref="0x402fcbb8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x40676be8" loc="83:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/bo/tinyos-morten/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x40676be8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x40b39670" loc="202:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b39448"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40b39670"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TRadio" ref="0x406692f0" loc="10:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/RadioConfig.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x4066bec0"/>
        <typename><typedef-ref name="TRadio" ref="0x406692f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x40b31b40" loc="279:/home/bo/tinyos-morten/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x40b31b40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_grantedTask" ref="0x409d6950" loc="69:/home/bo/tinyos-morten/tos/system/SimpleArbiterP.nc">
      <component-ref qname="SimpleArbiterP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_send" ref="0x40af67d0" loc="77:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x40b22130" loc="74:/home/bo/tinyos-morten/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x40c63048" loc="71:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x40c59188" loc="66:/home/bo/tinyos-morten/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x40c5adf8"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x40c59188"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_stateDoneTask" ref="0x40cca168" loc="144:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_deliverTask" ref="0x40ca4e78" loc="326:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendTask" ref="0x40c9e7a0" loc="189:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_tasklet" ref="0x40ceded8" loc="47:/home/bo/tinyos-morten/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-array elements="I:7" size="I:28" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_calcNextRandom" ref="0x40cfd5a0" loc="78:/home/bo/tinyos-morten/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stateDoneTask" ref="0x40e39518" loc="122:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_ccaDoneTask" ref="0x40dafb48" loc="327:/home/bo/tinyos-morten/tos/lib/rfxlink/sim/TossimDriverLayerP.nc">
      <component-ref qname="TossimDriverLayerP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x40e55d38" loc="64:/home/bo/tinyos-morten/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x40e55a58"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x40e55d38"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_sendTask" ref="0x411f4170" loc="423:/home/bo/tinyos-morten/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-array elements="I:11" size="I:44" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_newParentSearch" ref="0x412e3210" loc="350:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-array elements="I:12" size="I:48" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDIOTask" ref="0x413f9760" loc="123:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_init" ref="0x413fa600" loc="125:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_computeRemaining" ref="0x413fb250" loc="171:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_initDIO" ref="0x413fbb58" loc="126:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDISTask" ref="0x413faea8" loc="124:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDAO" ref="0x414b3b08" loc="101:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_initDAO" ref="0x414b3200" loc="184:/home/bo/tinyos-morten/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
